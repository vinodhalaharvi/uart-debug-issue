!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A1	derivative.h	/^  uint8_t A1;                                      \/**< I2C Address Register 1, offset: 0x0 *\/$/;"	m	struct:I2C_MemMap
A2	derivative.h	/^  uint8_t A2;                                      \/**< I2C Address Register 2, offset: 0x9 *\/$/;"	m	struct:I2C_MemMap
AC12ERR	derivative.h	/^  uint32_t AC12ERR;                                \/**< Auto CMD12 Error Status Register, offset: 0x3C *\/$/;"	m	struct:SDHC_MemMap
ACCESS16BIT	derivative.h	/^    } ACCESS16BIT;$/;"	m	union:CRC_MemMap::__anon5	typeref:struct:CRC_MemMap::__anon5::__anon6
ACCESS8BIT	derivative.h	/^    } ACCESS8BIT;$/;"	m	union:CRC_MemMap::__anon5	typeref:struct:CRC_MemMap::__anon5::__anon7
ACPR	derivative.h	/^  uint32_t ACPR;                                   \/**< Asynchronous Clock Prescaler Register, offset: 0x10 *\/$/;"	m	struct:TPIU_MemMap
ACTLR	derivative.h	/^  uint32_t ACTLR;                                  \/**< Auxiliary Control Register,, offset: 0x8 *\/$/;"	m	struct:SCB_MemMap
ADC0_BASE_PTR	derivative.h	523;"	d
ADC0_CFG1	derivative.h	547;"	d
ADC0_CFG2	derivative.h	548;"	d
ADC0_CLM0	derivative.h	572;"	d
ADC0_CLM1	derivative.h	571;"	d
ADC0_CLM2	derivative.h	570;"	d
ADC0_CLM3	derivative.h	569;"	d
ADC0_CLM4	derivative.h	568;"	d
ADC0_CLMD	derivative.h	566;"	d
ADC0_CLMS	derivative.h	567;"	d
ADC0_CLP0	derivative.h	564;"	d
ADC0_CLP1	derivative.h	563;"	d
ADC0_CLP2	derivative.h	562;"	d
ADC0_CLP3	derivative.h	561;"	d
ADC0_CLP4	derivative.h	560;"	d
ADC0_CLPD	derivative.h	558;"	d
ADC0_CLPS	derivative.h	559;"	d
ADC0_CV1	derivative.h	551;"	d
ADC0_CV2	derivative.h	552;"	d
ADC0_MG	derivative.h	557;"	d
ADC0_OFS	derivative.h	555;"	d
ADC0_PG	derivative.h	556;"	d
ADC0_PGA	derivative.h	565;"	d
ADC0_R	derivative.h	666;"	d
ADC0_RA	derivative.h	549;"	d
ADC0_RB	derivative.h	550;"	d
ADC0_SC1	derivative.h	662;"	d
ADC0_SC1A	derivative.h	545;"	d
ADC0_SC1B	derivative.h	546;"	d
ADC0_SC2	derivative.h	553;"	d
ADC0_SC3	derivative.h	554;"	d
ADC1_BASE_PTR	derivative.h	525;"	d
ADC1_CFG1	derivative.h	576;"	d
ADC1_CFG2	derivative.h	577;"	d
ADC1_CLM0	derivative.h	601;"	d
ADC1_CLM1	derivative.h	600;"	d
ADC1_CLM2	derivative.h	599;"	d
ADC1_CLM3	derivative.h	598;"	d
ADC1_CLM4	derivative.h	597;"	d
ADC1_CLMD	derivative.h	595;"	d
ADC1_CLMS	derivative.h	596;"	d
ADC1_CLP0	derivative.h	593;"	d
ADC1_CLP1	derivative.h	592;"	d
ADC1_CLP2	derivative.h	591;"	d
ADC1_CLP3	derivative.h	590;"	d
ADC1_CLP4	derivative.h	589;"	d
ADC1_CLPD	derivative.h	587;"	d
ADC1_CLPS	derivative.h	588;"	d
ADC1_CV1	derivative.h	580;"	d
ADC1_CV2	derivative.h	581;"	d
ADC1_MG	derivative.h	586;"	d
ADC1_OFS	derivative.h	584;"	d
ADC1_PG	derivative.h	585;"	d
ADC1_PGA	derivative.h	594;"	d
ADC1_R	derivative.h	667;"	d
ADC1_RA	derivative.h	578;"	d
ADC1_RB	derivative.h	579;"	d
ADC1_SC1	derivative.h	663;"	d
ADC1_SC1A	derivative.h	574;"	d
ADC1_SC1B	derivative.h	575;"	d
ADC1_SC2	derivative.h	582;"	d
ADC1_SC3	derivative.h	583;"	d
ADC2_BASE_PTR	derivative.h	527;"	d
ADC2_CFG1	derivative.h	605;"	d
ADC2_CFG2	derivative.h	606;"	d
ADC2_CLM0	derivative.h	630;"	d
ADC2_CLM1	derivative.h	629;"	d
ADC2_CLM2	derivative.h	628;"	d
ADC2_CLM3	derivative.h	627;"	d
ADC2_CLM4	derivative.h	626;"	d
ADC2_CLMD	derivative.h	624;"	d
ADC2_CLMS	derivative.h	625;"	d
ADC2_CLP0	derivative.h	622;"	d
ADC2_CLP1	derivative.h	621;"	d
ADC2_CLP2	derivative.h	620;"	d
ADC2_CLP3	derivative.h	619;"	d
ADC2_CLP4	derivative.h	618;"	d
ADC2_CLPD	derivative.h	616;"	d
ADC2_CLPS	derivative.h	617;"	d
ADC2_CV1	derivative.h	609;"	d
ADC2_CV2	derivative.h	610;"	d
ADC2_MG	derivative.h	615;"	d
ADC2_OFS	derivative.h	613;"	d
ADC2_PG	derivative.h	614;"	d
ADC2_PGA	derivative.h	623;"	d
ADC2_R	derivative.h	668;"	d
ADC2_RA	derivative.h	607;"	d
ADC2_RB	derivative.h	608;"	d
ADC2_SC1	derivative.h	664;"	d
ADC2_SC1A	derivative.h	603;"	d
ADC2_SC1B	derivative.h	604;"	d
ADC2_SC2	derivative.h	611;"	d
ADC2_SC3	derivative.h	612;"	d
ADC3_BASE_PTR	derivative.h	529;"	d
ADC3_CFG1	derivative.h	634;"	d
ADC3_CFG2	derivative.h	635;"	d
ADC3_CLM0	derivative.h	659;"	d
ADC3_CLM1	derivative.h	658;"	d
ADC3_CLM2	derivative.h	657;"	d
ADC3_CLM3	derivative.h	656;"	d
ADC3_CLM4	derivative.h	655;"	d
ADC3_CLMD	derivative.h	653;"	d
ADC3_CLMS	derivative.h	654;"	d
ADC3_CLP0	derivative.h	651;"	d
ADC3_CLP1	derivative.h	650;"	d
ADC3_CLP2	derivative.h	649;"	d
ADC3_CLP3	derivative.h	648;"	d
ADC3_CLP4	derivative.h	647;"	d
ADC3_CLPD	derivative.h	645;"	d
ADC3_CLPS	derivative.h	646;"	d
ADC3_CV1	derivative.h	638;"	d
ADC3_CV2	derivative.h	639;"	d
ADC3_MG	derivative.h	644;"	d
ADC3_OFS	derivative.h	642;"	d
ADC3_PG	derivative.h	643;"	d
ADC3_PGA	derivative.h	652;"	d
ADC3_R	derivative.h	669;"	d
ADC3_RA	derivative.h	636;"	d
ADC3_RB	derivative.h	637;"	d
ADC3_SC1	derivative.h	665;"	d
ADC3_SC1A	derivative.h	632;"	d
ADC3_SC1B	derivative.h	633;"	d
ADC3_SC2	derivative.h	640;"	d
ADC3_SC3	derivative.h	641;"	d
ADC_BASE_PTRS	derivative.h	531;"	d
ADC_CFG1_ADICLK	derivative.h	374;"	d
ADC_CFG1_ADICLK_MASK	derivative.h	372;"	d
ADC_CFG1_ADICLK_SHIFT	derivative.h	373;"	d
ADC_CFG1_ADIV	derivative.h	382;"	d
ADC_CFG1_ADIV_MASK	derivative.h	380;"	d
ADC_CFG1_ADIV_SHIFT	derivative.h	381;"	d
ADC_CFG1_ADLPC_MASK	derivative.h	383;"	d
ADC_CFG1_ADLPC_SHIFT	derivative.h	384;"	d
ADC_CFG1_ADLSMP_MASK	derivative.h	378;"	d
ADC_CFG1_ADLSMP_SHIFT	derivative.h	379;"	d
ADC_CFG1_MODE	derivative.h	377;"	d
ADC_CFG1_MODE_10_11_BIT	potentiometerdriver.h	14;"	d
ADC_CFG1_MODE_10_11_BIT	thermistordriver.h	13;"	d
ADC_CFG1_MODE_12_13_BIT	potentiometerdriver.h	13;"	d
ADC_CFG1_MODE_12_13_BIT	thermistordriver.h	12;"	d
ADC_CFG1_MODE_16_BIT	potentiometerdriver.h	15;"	d
ADC_CFG1_MODE_16_BIT	thermistordriver.h	14;"	d
ADC_CFG1_MODE_8_9_BIT	potentiometerdriver.h	12;"	d
ADC_CFG1_MODE_8_9_BIT	thermistordriver.h	11;"	d
ADC_CFG1_MODE_MASK	derivative.h	375;"	d
ADC_CFG1_MODE_SHIFT	derivative.h	376;"	d
ADC_CFG1_REG	derivative.h	321;"	d
ADC_CFG2_ADACKEN_MASK	derivative.h	391;"	d
ADC_CFG2_ADACKEN_SHIFT	derivative.h	392;"	d
ADC_CFG2_ADHSC_MASK	derivative.h	389;"	d
ADC_CFG2_ADHSC_SHIFT	derivative.h	390;"	d
ADC_CFG2_ADLSTS	derivative.h	388;"	d
ADC_CFG2_ADLSTS_MASK	derivative.h	386;"	d
ADC_CFG2_ADLSTS_SHIFT	derivative.h	387;"	d
ADC_CFG2_MUXSEL_MASK	derivative.h	393;"	d
ADC_CFG2_MUXSEL_SHIFT	derivative.h	394;"	d
ADC_CFG2_REG	derivative.h	322;"	d
ADC_CHANNEL_POTENTIOMETER	potentiometerdriver.h	9;"	d
ADC_CHANNEL_TEMPERATURE_SENSOR	potentiometerdriver.h	10;"	d
ADC_CHANNEL_TEMPERATURE_SENSOR	thermistordriver.h	9;"	d
ADC_CHANNEL_THERMISTOR	thermistordriver.h	8;"	d
ADC_CLM0_CLM0	derivative.h	514;"	d
ADC_CLM0_CLM0_MASK	derivative.h	512;"	d
ADC_CLM0_CLM0_SHIFT	derivative.h	513;"	d
ADC_CLM0_REG	derivative.h	345;"	d
ADC_CLM1_CLM1	derivative.h	510;"	d
ADC_CLM1_CLM1_MASK	derivative.h	508;"	d
ADC_CLM1_CLM1_SHIFT	derivative.h	509;"	d
ADC_CLM1_REG	derivative.h	344;"	d
ADC_CLM2_CLM2	derivative.h	506;"	d
ADC_CLM2_CLM2_MASK	derivative.h	504;"	d
ADC_CLM2_CLM2_SHIFT	derivative.h	505;"	d
ADC_CLM2_REG	derivative.h	343;"	d
ADC_CLM3_CLM3	derivative.h	502;"	d
ADC_CLM3_CLM3_MASK	derivative.h	500;"	d
ADC_CLM3_CLM3_SHIFT	derivative.h	501;"	d
ADC_CLM3_REG	derivative.h	342;"	d
ADC_CLM4_CLM4	derivative.h	498;"	d
ADC_CLM4_CLM4_MASK	derivative.h	496;"	d
ADC_CLM4_CLM4_SHIFT	derivative.h	497;"	d
ADC_CLM4_REG	derivative.h	341;"	d
ADC_CLMD_CLMD	derivative.h	490;"	d
ADC_CLMD_CLMD_MASK	derivative.h	488;"	d
ADC_CLMD_CLMD_SHIFT	derivative.h	489;"	d
ADC_CLMD_REG	derivative.h	339;"	d
ADC_CLMS_CLMS	derivative.h	494;"	d
ADC_CLMS_CLMS_MASK	derivative.h	492;"	d
ADC_CLMS_CLMS_SHIFT	derivative.h	493;"	d
ADC_CLMS_REG	derivative.h	340;"	d
ADC_CLP0_CLP0	derivative.h	474;"	d
ADC_CLP0_CLP0_MASK	derivative.h	472;"	d
ADC_CLP0_CLP0_SHIFT	derivative.h	473;"	d
ADC_CLP0_REG	derivative.h	337;"	d
ADC_CLP1_CLP1	derivative.h	470;"	d
ADC_CLP1_CLP1_MASK	derivative.h	468;"	d
ADC_CLP1_CLP1_SHIFT	derivative.h	469;"	d
ADC_CLP1_REG	derivative.h	336;"	d
ADC_CLP2_CLP2	derivative.h	466;"	d
ADC_CLP2_CLP2_MASK	derivative.h	464;"	d
ADC_CLP2_CLP2_SHIFT	derivative.h	465;"	d
ADC_CLP2_REG	derivative.h	335;"	d
ADC_CLP3_CLP3	derivative.h	462;"	d
ADC_CLP3_CLP3_MASK	derivative.h	460;"	d
ADC_CLP3_CLP3_SHIFT	derivative.h	461;"	d
ADC_CLP3_REG	derivative.h	334;"	d
ADC_CLP4_CLP4	derivative.h	458;"	d
ADC_CLP4_CLP4_MASK	derivative.h	456;"	d
ADC_CLP4_CLP4_SHIFT	derivative.h	457;"	d
ADC_CLP4_REG	derivative.h	333;"	d
ADC_CLPD_CLPD	derivative.h	450;"	d
ADC_CLPD_CLPD_MASK	derivative.h	448;"	d
ADC_CLPD_CLPD_SHIFT	derivative.h	449;"	d
ADC_CLPD_REG	derivative.h	331;"	d
ADC_CLPS_CLPS	derivative.h	454;"	d
ADC_CLPS_CLPS_MASK	derivative.h	452;"	d
ADC_CLPS_CLPS_SHIFT	derivative.h	453;"	d
ADC_CLPS_REG	derivative.h	332;"	d
ADC_CV1_CV	derivative.h	402;"	d
ADC_CV1_CV_MASK	derivative.h	400;"	d
ADC_CV1_CV_SHIFT	derivative.h	401;"	d
ADC_CV1_REG	derivative.h	324;"	d
ADC_CV2_CV	derivative.h	406;"	d
ADC_CV2_CV_MASK	derivative.h	404;"	d
ADC_CV2_CV_SHIFT	derivative.h	405;"	d
ADC_CV2_REG	derivative.h	325;"	d
ADC_MG_MG	derivative.h	446;"	d
ADC_MG_MG_MASK	derivative.h	444;"	d
ADC_MG_MG_SHIFT	derivative.h	445;"	d
ADC_MG_REG	derivative.h	330;"	d
ADC_MemMap	derivative.h	/^typedef struct ADC_MemMap {$/;"	s
ADC_MemMapPtr	derivative.h	/^} volatile *ADC_MemMapPtr;$/;"	t
ADC_OFS_OFS	derivative.h	438;"	d
ADC_OFS_OFS_MASK	derivative.h	436;"	d
ADC_OFS_OFS_SHIFT	derivative.h	437;"	d
ADC_OFS_REG	derivative.h	328;"	d
ADC_PGA_PGACHPb_MASK	derivative.h	483;"	d
ADC_PGA_PGACHPb_SHIFT	derivative.h	484;"	d
ADC_PGA_PGAEN_MASK	derivative.h	485;"	d
ADC_PGA_PGAEN_SHIFT	derivative.h	486;"	d
ADC_PGA_PGAG	derivative.h	480;"	d
ADC_PGA_PGAG_MASK	derivative.h	478;"	d
ADC_PGA_PGAG_SHIFT	derivative.h	479;"	d
ADC_PGA_PGALPb_MASK	derivative.h	481;"	d
ADC_PGA_PGALPb_SHIFT	derivative.h	482;"	d
ADC_PGA_PGAOFSM_MASK	derivative.h	476;"	d
ADC_PGA_PGAOFSM_SHIFT	derivative.h	477;"	d
ADC_PGA_REG	derivative.h	338;"	d
ADC_PG_PG	derivative.h	442;"	d
ADC_PG_PG_MASK	derivative.h	440;"	d
ADC_PG_PG_SHIFT	derivative.h	441;"	d
ADC_PG_REG	derivative.h	329;"	d
ADC_R_D	derivative.h	398;"	d
ADC_R_D_MASK	derivative.h	396;"	d
ADC_R_D_SHIFT	derivative.h	397;"	d
ADC_R_REG	derivative.h	323;"	d
ADC_SC1_ADCH	derivative.h	364;"	d
ADC_SC1_ADCH_MASK	derivative.h	362;"	d
ADC_SC1_ADCH_SHIFT	derivative.h	363;"	d
ADC_SC1_AIEN_MASK	derivative.h	367;"	d
ADC_SC1_AIEN_SHIFT	derivative.h	368;"	d
ADC_SC1_COCO_MASK	derivative.h	369;"	d
ADC_SC1_COCO_SHIFT	derivative.h	370;"	d
ADC_SC1_DIFF_MASK	derivative.h	365;"	d
ADC_SC1_DIFF_SHIFT	derivative.h	366;"	d
ADC_SC1_REG	derivative.h	320;"	d
ADC_SC2_ACFE_MASK	derivative.h	417;"	d
ADC_SC2_ACFE_SHIFT	derivative.h	418;"	d
ADC_SC2_ACFGT_MASK	derivative.h	415;"	d
ADC_SC2_ACFGT_SHIFT	derivative.h	416;"	d
ADC_SC2_ACREN_MASK	derivative.h	413;"	d
ADC_SC2_ACREN_SHIFT	derivative.h	414;"	d
ADC_SC2_ADACT_MASK	derivative.h	421;"	d
ADC_SC2_ADACT_SHIFT	derivative.h	422;"	d
ADC_SC2_ADTRG_MASK	derivative.h	419;"	d
ADC_SC2_ADTRG_SHIFT	derivative.h	420;"	d
ADC_SC2_DMAEN_MASK	derivative.h	411;"	d
ADC_SC2_DMAEN_SHIFT	derivative.h	412;"	d
ADC_SC2_REFSEL	derivative.h	410;"	d
ADC_SC2_REFSEL_MASK	derivative.h	408;"	d
ADC_SC2_REFSEL_SHIFT	derivative.h	409;"	d
ADC_SC2_REG	derivative.h	326;"	d
ADC_SC3_ADCO_MASK	derivative.h	429;"	d
ADC_SC3_ADCO_SHIFT	derivative.h	430;"	d
ADC_SC3_AVGE_MASK	derivative.h	427;"	d
ADC_SC3_AVGE_SHIFT	derivative.h	428;"	d
ADC_SC3_AVGS	derivative.h	426;"	d
ADC_SC3_AVGS_32_SAMPLES	potentiometerdriver.h	16;"	d
ADC_SC3_AVGS_32_SAMPLES	thermistordriver.h	15;"	d
ADC_SC3_AVGS_MASK	derivative.h	424;"	d
ADC_SC3_AVGS_SHIFT	derivative.h	425;"	d
ADC_SC3_CALF_MASK	derivative.h	431;"	d
ADC_SC3_CALF_SHIFT	derivative.h	432;"	d
ADC_SC3_CAL_MASK	derivative.h	433;"	d
ADC_SC3_CAL_SHIFT	derivative.h	434;"	d
ADC_SC3_REG	derivative.h	327;"	d
ADDINFO	derivative.h	/^  uint8_t ADDINFO;                                 \/**< Peripheral Additional Info Register, offset: 0xC *\/$/;"	m	struct:USB_MemMap
ADDR	derivative.h	/^  uint8_t ADDR;                                    \/**< Address Register, offset: 0x98 *\/$/;"	m	struct:USB_MemMap
ADMAES	derivative.h	/^  uint32_t ADMAES;                                 \/**< ADMA Error Status Register, offset: 0x54 *\/$/;"	m	struct:SDHC_MemMap
ADR_CA	derivative.h	/^  uint32_t ADR_CA[9];                              \/**< General Purpose Register 0 - Add to register command..General Purpose Register 8 - Add to register command, array offset: 0x8C8, array step: 0x4 *\/$/;"	m	struct:CAU_MemMap
ADR_CAA	derivative.h	/^  uint32_t ADR_CAA;                                \/**< Accumulator register - Add to register command, offset: 0x8C4 *\/$/;"	m	struct:CAU_MemMap
ADR_CASR	derivative.h	/^  uint32_t ADR_CASR;                               \/**< Status register  - Add Register command, offset: 0x8C0 *\/$/;"	m	struct:CAU_MemMap
ADSADDR	derivative.h	/^  uint32_t ADSADDR;                                \/**< ADMA System Address Register, offset: 0x58 *\/$/;"	m	struct:SDHC_MemMap
AESC_CA	derivative.h	/^  uint32_t AESC_CA[9];                             \/**< General Purpose Register 0 - AES Column Operation command..General Purpose Register 8 - AES Column Operation command, array offset: 0xB08, array step: 0x4 *\/$/;"	m	struct:CAU_MemMap
AESC_CAA	derivative.h	/^  uint32_t AESC_CAA;                               \/**< Accumulator register - AES Column Operation command, offset: 0xB04 *\/$/;"	m	struct:CAU_MemMap
AESC_CASR	derivative.h	/^  uint32_t AESC_CASR;                              \/**< Status register  - AES Column Operation command, offset: 0xB00 *\/$/;"	m	struct:CAU_MemMap
AESIC_CA	derivative.h	/^  uint32_t AESIC_CA[9];                            \/**< General Purpose Register 0 - AES Inverse Column Operation command..General Purpose Register 8 - AES Inverse Column Operation command, array offset: 0xB48, array step: 0x4 *\/$/;"	m	struct:CAU_MemMap
AESIC_CAA	derivative.h	/^  uint32_t AESIC_CAA;                              \/**< Accumulator register - AES Inverse Column Operation command, offset: 0xB44 *\/$/;"	m	struct:CAU_MemMap
AESIC_CASR	derivative.h	/^  uint32_t AESIC_CASR;                             \/**< Status register  - AES Inverse Column Operation command, offset: 0xB40 *\/$/;"	m	struct:CAU_MemMap
AFSR	derivative.h	/^  uint32_t AFSR;                                   \/**< Auxiliary Fault Status Register, offset: 0xD3C *\/$/;"	m	struct:SCB_MemMap
AIPS0_BASE_PTR	derivative.h	1597;"	d
AIPS0_MPRA	derivative.h	1615;"	d
AIPS0_PACRA	derivative.h	1616;"	d
AIPS0_PACRB	derivative.h	1617;"	d
AIPS0_PACRC	derivative.h	1618;"	d
AIPS0_PACRD	derivative.h	1619;"	d
AIPS0_PACRE	derivative.h	1620;"	d
AIPS0_PACRF	derivative.h	1621;"	d
AIPS0_PACRG	derivative.h	1622;"	d
AIPS0_PACRH	derivative.h	1623;"	d
AIPS0_PACRI	derivative.h	1624;"	d
AIPS0_PACRJ	derivative.h	1625;"	d
AIPS0_PACRK	derivative.h	1626;"	d
AIPS0_PACRL	derivative.h	1627;"	d
AIPS0_PACRM	derivative.h	1628;"	d
AIPS0_PACRN	derivative.h	1629;"	d
AIPS0_PACRO	derivative.h	1630;"	d
AIPS0_PACRP	derivative.h	1631;"	d
AIPS1_BASE_PTR	derivative.h	1599;"	d
AIPS1_MPRA	derivative.h	1633;"	d
AIPS1_PACRA	derivative.h	1634;"	d
AIPS1_PACRB	derivative.h	1635;"	d
AIPS1_PACRC	derivative.h	1636;"	d
AIPS1_PACRD	derivative.h	1637;"	d
AIPS1_PACRE	derivative.h	1638;"	d
AIPS1_PACRF	derivative.h	1639;"	d
AIPS1_PACRG	derivative.h	1640;"	d
AIPS1_PACRH	derivative.h	1641;"	d
AIPS1_PACRI	derivative.h	1642;"	d
AIPS1_PACRJ	derivative.h	1643;"	d
AIPS1_PACRK	derivative.h	1644;"	d
AIPS1_PACRL	derivative.h	1645;"	d
AIPS1_PACRM	derivative.h	1646;"	d
AIPS1_PACRN	derivative.h	1647;"	d
AIPS1_PACRO	derivative.h	1648;"	d
AIPS1_PACRP	derivative.h	1649;"	d
AIPS_BASE_PTRS	derivative.h	1601;"	d
AIPS_MPRA_MPL0_MASK	derivative.h	799;"	d
AIPS_MPRA_MPL0_SHIFT	derivative.h	800;"	d
AIPS_MPRA_MPL1_MASK	derivative.h	793;"	d
AIPS_MPRA_MPL1_SHIFT	derivative.h	794;"	d
AIPS_MPRA_MPL2_MASK	derivative.h	787;"	d
AIPS_MPRA_MPL2_SHIFT	derivative.h	788;"	d
AIPS_MPRA_MPL3_MASK	derivative.h	781;"	d
AIPS_MPRA_MPL3_SHIFT	derivative.h	782;"	d
AIPS_MPRA_MPL4_MASK	derivative.h	775;"	d
AIPS_MPRA_MPL4_SHIFT	derivative.h	776;"	d
AIPS_MPRA_MPL5_MASK	derivative.h	769;"	d
AIPS_MPRA_MPL5_SHIFT	derivative.h	770;"	d
AIPS_MPRA_MPL6_MASK	derivative.h	763;"	d
AIPS_MPRA_MPL6_SHIFT	derivative.h	764;"	d
AIPS_MPRA_MPL7_MASK	derivative.h	757;"	d
AIPS_MPRA_MPL7_SHIFT	derivative.h	758;"	d
AIPS_MPRA_MTR0_MASK	derivative.h	803;"	d
AIPS_MPRA_MTR0_SHIFT	derivative.h	804;"	d
AIPS_MPRA_MTR1_MASK	derivative.h	797;"	d
AIPS_MPRA_MTR1_SHIFT	derivative.h	798;"	d
AIPS_MPRA_MTR2_MASK	derivative.h	791;"	d
AIPS_MPRA_MTR2_SHIFT	derivative.h	792;"	d
AIPS_MPRA_MTR3_MASK	derivative.h	785;"	d
AIPS_MPRA_MTR3_SHIFT	derivative.h	786;"	d
AIPS_MPRA_MTR4_MASK	derivative.h	779;"	d
AIPS_MPRA_MTR4_SHIFT	derivative.h	780;"	d
AIPS_MPRA_MTR5_MASK	derivative.h	773;"	d
AIPS_MPRA_MTR5_SHIFT	derivative.h	774;"	d
AIPS_MPRA_MTR6_MASK	derivative.h	767;"	d
AIPS_MPRA_MTR6_SHIFT	derivative.h	768;"	d
AIPS_MPRA_MTR7_MASK	derivative.h	761;"	d
AIPS_MPRA_MTR7_SHIFT	derivative.h	762;"	d
AIPS_MPRA_MTW0_MASK	derivative.h	801;"	d
AIPS_MPRA_MTW0_SHIFT	derivative.h	802;"	d
AIPS_MPRA_MTW1_MASK	derivative.h	795;"	d
AIPS_MPRA_MTW1_SHIFT	derivative.h	796;"	d
AIPS_MPRA_MTW2_MASK	derivative.h	789;"	d
AIPS_MPRA_MTW2_SHIFT	derivative.h	790;"	d
AIPS_MPRA_MTW3_MASK	derivative.h	783;"	d
AIPS_MPRA_MTW3_SHIFT	derivative.h	784;"	d
AIPS_MPRA_MTW4_MASK	derivative.h	777;"	d
AIPS_MPRA_MTW4_SHIFT	derivative.h	778;"	d
AIPS_MPRA_MTW5_MASK	derivative.h	771;"	d
AIPS_MPRA_MTW5_SHIFT	derivative.h	772;"	d
AIPS_MPRA_MTW6_MASK	derivative.h	765;"	d
AIPS_MPRA_MTW6_SHIFT	derivative.h	766;"	d
AIPS_MPRA_MTW7_MASK	derivative.h	759;"	d
AIPS_MPRA_MTW7_SHIFT	derivative.h	760;"	d
AIPS_MPRA_REG	derivative.h	724;"	d
AIPS_MemMap	derivative.h	/^typedef struct AIPS_MemMap {$/;"	s
AIPS_MemMapPtr	derivative.h	/^} volatile *AIPS_MemMapPtr;$/;"	t
AIPS_PACRA_REG	derivative.h	725;"	d
AIPS_PACRA_SP0_MASK	derivative.h	852;"	d
AIPS_PACRA_SP0_SHIFT	derivative.h	853;"	d
AIPS_PACRA_SP1_MASK	derivative.h	846;"	d
AIPS_PACRA_SP1_SHIFT	derivative.h	847;"	d
AIPS_PACRA_SP2_MASK	derivative.h	840;"	d
AIPS_PACRA_SP2_SHIFT	derivative.h	841;"	d
AIPS_PACRA_SP3_MASK	derivative.h	834;"	d
AIPS_PACRA_SP3_SHIFT	derivative.h	835;"	d
AIPS_PACRA_SP4_MASK	derivative.h	828;"	d
AIPS_PACRA_SP4_SHIFT	derivative.h	829;"	d
AIPS_PACRA_SP5_MASK	derivative.h	822;"	d
AIPS_PACRA_SP5_SHIFT	derivative.h	823;"	d
AIPS_PACRA_SP6_MASK	derivative.h	816;"	d
AIPS_PACRA_SP6_SHIFT	derivative.h	817;"	d
AIPS_PACRA_SP7_MASK	derivative.h	810;"	d
AIPS_PACRA_SP7_SHIFT	derivative.h	811;"	d
AIPS_PACRA_TP0_MASK	derivative.h	848;"	d
AIPS_PACRA_TP0_SHIFT	derivative.h	849;"	d
AIPS_PACRA_TP1_MASK	derivative.h	842;"	d
AIPS_PACRA_TP1_SHIFT	derivative.h	843;"	d
AIPS_PACRA_TP2_MASK	derivative.h	836;"	d
AIPS_PACRA_TP2_SHIFT	derivative.h	837;"	d
AIPS_PACRA_TP3_MASK	derivative.h	830;"	d
AIPS_PACRA_TP3_SHIFT	derivative.h	831;"	d
AIPS_PACRA_TP4_MASK	derivative.h	824;"	d
AIPS_PACRA_TP4_SHIFT	derivative.h	825;"	d
AIPS_PACRA_TP5_MASK	derivative.h	818;"	d
AIPS_PACRA_TP5_SHIFT	derivative.h	819;"	d
AIPS_PACRA_TP6_MASK	derivative.h	812;"	d
AIPS_PACRA_TP6_SHIFT	derivative.h	813;"	d
AIPS_PACRA_TP7_MASK	derivative.h	806;"	d
AIPS_PACRA_TP7_SHIFT	derivative.h	807;"	d
AIPS_PACRA_WP0_MASK	derivative.h	850;"	d
AIPS_PACRA_WP0_SHIFT	derivative.h	851;"	d
AIPS_PACRA_WP1_MASK	derivative.h	844;"	d
AIPS_PACRA_WP1_SHIFT	derivative.h	845;"	d
AIPS_PACRA_WP2_MASK	derivative.h	838;"	d
AIPS_PACRA_WP2_SHIFT	derivative.h	839;"	d
AIPS_PACRA_WP3_MASK	derivative.h	832;"	d
AIPS_PACRA_WP3_SHIFT	derivative.h	833;"	d
AIPS_PACRA_WP4_MASK	derivative.h	826;"	d
AIPS_PACRA_WP4_SHIFT	derivative.h	827;"	d
AIPS_PACRA_WP5_MASK	derivative.h	820;"	d
AIPS_PACRA_WP5_SHIFT	derivative.h	821;"	d
AIPS_PACRA_WP6_MASK	derivative.h	814;"	d
AIPS_PACRA_WP6_SHIFT	derivative.h	815;"	d
AIPS_PACRA_WP7_MASK	derivative.h	808;"	d
AIPS_PACRA_WP7_SHIFT	derivative.h	809;"	d
AIPS_PACRB_REG	derivative.h	726;"	d
AIPS_PACRB_SP0_MASK	derivative.h	901;"	d
AIPS_PACRB_SP0_SHIFT	derivative.h	902;"	d
AIPS_PACRB_SP1_MASK	derivative.h	895;"	d
AIPS_PACRB_SP1_SHIFT	derivative.h	896;"	d
AIPS_PACRB_SP2_MASK	derivative.h	889;"	d
AIPS_PACRB_SP2_SHIFT	derivative.h	890;"	d
AIPS_PACRB_SP3_MASK	derivative.h	883;"	d
AIPS_PACRB_SP3_SHIFT	derivative.h	884;"	d
AIPS_PACRB_SP4_MASK	derivative.h	877;"	d
AIPS_PACRB_SP4_SHIFT	derivative.h	878;"	d
AIPS_PACRB_SP5_MASK	derivative.h	871;"	d
AIPS_PACRB_SP5_SHIFT	derivative.h	872;"	d
AIPS_PACRB_SP6_MASK	derivative.h	865;"	d
AIPS_PACRB_SP6_SHIFT	derivative.h	866;"	d
AIPS_PACRB_SP7_MASK	derivative.h	859;"	d
AIPS_PACRB_SP7_SHIFT	derivative.h	860;"	d
AIPS_PACRB_TP0_MASK	derivative.h	897;"	d
AIPS_PACRB_TP0_SHIFT	derivative.h	898;"	d
AIPS_PACRB_TP1_MASK	derivative.h	891;"	d
AIPS_PACRB_TP1_SHIFT	derivative.h	892;"	d
AIPS_PACRB_TP2_MASK	derivative.h	885;"	d
AIPS_PACRB_TP2_SHIFT	derivative.h	886;"	d
AIPS_PACRB_TP3_MASK	derivative.h	879;"	d
AIPS_PACRB_TP3_SHIFT	derivative.h	880;"	d
AIPS_PACRB_TP4_MASK	derivative.h	873;"	d
AIPS_PACRB_TP4_SHIFT	derivative.h	874;"	d
AIPS_PACRB_TP5_MASK	derivative.h	867;"	d
AIPS_PACRB_TP5_SHIFT	derivative.h	868;"	d
AIPS_PACRB_TP6_MASK	derivative.h	861;"	d
AIPS_PACRB_TP6_SHIFT	derivative.h	862;"	d
AIPS_PACRB_TP7_MASK	derivative.h	855;"	d
AIPS_PACRB_TP7_SHIFT	derivative.h	856;"	d
AIPS_PACRB_WP0_MASK	derivative.h	899;"	d
AIPS_PACRB_WP0_SHIFT	derivative.h	900;"	d
AIPS_PACRB_WP1_MASK	derivative.h	893;"	d
AIPS_PACRB_WP1_SHIFT	derivative.h	894;"	d
AIPS_PACRB_WP2_MASK	derivative.h	887;"	d
AIPS_PACRB_WP2_SHIFT	derivative.h	888;"	d
AIPS_PACRB_WP3_MASK	derivative.h	881;"	d
AIPS_PACRB_WP3_SHIFT	derivative.h	882;"	d
AIPS_PACRB_WP4_MASK	derivative.h	875;"	d
AIPS_PACRB_WP4_SHIFT	derivative.h	876;"	d
AIPS_PACRB_WP5_MASK	derivative.h	869;"	d
AIPS_PACRB_WP5_SHIFT	derivative.h	870;"	d
AIPS_PACRB_WP6_MASK	derivative.h	863;"	d
AIPS_PACRB_WP6_SHIFT	derivative.h	864;"	d
AIPS_PACRB_WP7_MASK	derivative.h	857;"	d
AIPS_PACRB_WP7_SHIFT	derivative.h	858;"	d
AIPS_PACRC_REG	derivative.h	727;"	d
AIPS_PACRC_SP0_MASK	derivative.h	950;"	d
AIPS_PACRC_SP0_SHIFT	derivative.h	951;"	d
AIPS_PACRC_SP1_MASK	derivative.h	944;"	d
AIPS_PACRC_SP1_SHIFT	derivative.h	945;"	d
AIPS_PACRC_SP2_MASK	derivative.h	938;"	d
AIPS_PACRC_SP2_SHIFT	derivative.h	939;"	d
AIPS_PACRC_SP3_MASK	derivative.h	932;"	d
AIPS_PACRC_SP3_SHIFT	derivative.h	933;"	d
AIPS_PACRC_SP4_MASK	derivative.h	926;"	d
AIPS_PACRC_SP4_SHIFT	derivative.h	927;"	d
AIPS_PACRC_SP5_MASK	derivative.h	920;"	d
AIPS_PACRC_SP5_SHIFT	derivative.h	921;"	d
AIPS_PACRC_SP6_MASK	derivative.h	914;"	d
AIPS_PACRC_SP6_SHIFT	derivative.h	915;"	d
AIPS_PACRC_SP7_MASK	derivative.h	908;"	d
AIPS_PACRC_SP7_SHIFT	derivative.h	909;"	d
AIPS_PACRC_TP0_MASK	derivative.h	946;"	d
AIPS_PACRC_TP0_SHIFT	derivative.h	947;"	d
AIPS_PACRC_TP1_MASK	derivative.h	940;"	d
AIPS_PACRC_TP1_SHIFT	derivative.h	941;"	d
AIPS_PACRC_TP2_MASK	derivative.h	934;"	d
AIPS_PACRC_TP2_SHIFT	derivative.h	935;"	d
AIPS_PACRC_TP3_MASK	derivative.h	928;"	d
AIPS_PACRC_TP3_SHIFT	derivative.h	929;"	d
AIPS_PACRC_TP4_MASK	derivative.h	922;"	d
AIPS_PACRC_TP4_SHIFT	derivative.h	923;"	d
AIPS_PACRC_TP5_MASK	derivative.h	916;"	d
AIPS_PACRC_TP5_SHIFT	derivative.h	917;"	d
AIPS_PACRC_TP6_MASK	derivative.h	910;"	d
AIPS_PACRC_TP6_SHIFT	derivative.h	911;"	d
AIPS_PACRC_TP7_MASK	derivative.h	904;"	d
AIPS_PACRC_TP7_SHIFT	derivative.h	905;"	d
AIPS_PACRC_WP0_MASK	derivative.h	948;"	d
AIPS_PACRC_WP0_SHIFT	derivative.h	949;"	d
AIPS_PACRC_WP1_MASK	derivative.h	942;"	d
AIPS_PACRC_WP1_SHIFT	derivative.h	943;"	d
AIPS_PACRC_WP2_MASK	derivative.h	936;"	d
AIPS_PACRC_WP2_SHIFT	derivative.h	937;"	d
AIPS_PACRC_WP3_MASK	derivative.h	930;"	d
AIPS_PACRC_WP3_SHIFT	derivative.h	931;"	d
AIPS_PACRC_WP4_MASK	derivative.h	924;"	d
AIPS_PACRC_WP4_SHIFT	derivative.h	925;"	d
AIPS_PACRC_WP5_MASK	derivative.h	918;"	d
AIPS_PACRC_WP5_SHIFT	derivative.h	919;"	d
AIPS_PACRC_WP6_MASK	derivative.h	912;"	d
AIPS_PACRC_WP6_SHIFT	derivative.h	913;"	d
AIPS_PACRC_WP7_MASK	derivative.h	906;"	d
AIPS_PACRC_WP7_SHIFT	derivative.h	907;"	d
AIPS_PACRD_REG	derivative.h	728;"	d
AIPS_PACRD_SP0_MASK	derivative.h	999;"	d
AIPS_PACRD_SP0_SHIFT	derivative.h	1000;"	d
AIPS_PACRD_SP1_MASK	derivative.h	993;"	d
AIPS_PACRD_SP1_SHIFT	derivative.h	994;"	d
AIPS_PACRD_SP2_MASK	derivative.h	987;"	d
AIPS_PACRD_SP2_SHIFT	derivative.h	988;"	d
AIPS_PACRD_SP3_MASK	derivative.h	981;"	d
AIPS_PACRD_SP3_SHIFT	derivative.h	982;"	d
AIPS_PACRD_SP4_MASK	derivative.h	975;"	d
AIPS_PACRD_SP4_SHIFT	derivative.h	976;"	d
AIPS_PACRD_SP5_MASK	derivative.h	969;"	d
AIPS_PACRD_SP5_SHIFT	derivative.h	970;"	d
AIPS_PACRD_SP6_MASK	derivative.h	963;"	d
AIPS_PACRD_SP6_SHIFT	derivative.h	964;"	d
AIPS_PACRD_SP7_MASK	derivative.h	957;"	d
AIPS_PACRD_SP7_SHIFT	derivative.h	958;"	d
AIPS_PACRD_TP0_MASK	derivative.h	995;"	d
AIPS_PACRD_TP0_SHIFT	derivative.h	996;"	d
AIPS_PACRD_TP1_MASK	derivative.h	989;"	d
AIPS_PACRD_TP1_SHIFT	derivative.h	990;"	d
AIPS_PACRD_TP2_MASK	derivative.h	983;"	d
AIPS_PACRD_TP2_SHIFT	derivative.h	984;"	d
AIPS_PACRD_TP3_MASK	derivative.h	977;"	d
AIPS_PACRD_TP3_SHIFT	derivative.h	978;"	d
AIPS_PACRD_TP4_MASK	derivative.h	971;"	d
AIPS_PACRD_TP4_SHIFT	derivative.h	972;"	d
AIPS_PACRD_TP5_MASK	derivative.h	965;"	d
AIPS_PACRD_TP5_SHIFT	derivative.h	966;"	d
AIPS_PACRD_TP6_MASK	derivative.h	959;"	d
AIPS_PACRD_TP6_SHIFT	derivative.h	960;"	d
AIPS_PACRD_TP7_MASK	derivative.h	953;"	d
AIPS_PACRD_TP7_SHIFT	derivative.h	954;"	d
AIPS_PACRD_WP0_MASK	derivative.h	997;"	d
AIPS_PACRD_WP0_SHIFT	derivative.h	998;"	d
AIPS_PACRD_WP1_MASK	derivative.h	991;"	d
AIPS_PACRD_WP1_SHIFT	derivative.h	992;"	d
AIPS_PACRD_WP2_MASK	derivative.h	985;"	d
AIPS_PACRD_WP2_SHIFT	derivative.h	986;"	d
AIPS_PACRD_WP3_MASK	derivative.h	979;"	d
AIPS_PACRD_WP3_SHIFT	derivative.h	980;"	d
AIPS_PACRD_WP4_MASK	derivative.h	973;"	d
AIPS_PACRD_WP4_SHIFT	derivative.h	974;"	d
AIPS_PACRD_WP5_MASK	derivative.h	967;"	d
AIPS_PACRD_WP5_SHIFT	derivative.h	968;"	d
AIPS_PACRD_WP6_MASK	derivative.h	961;"	d
AIPS_PACRD_WP6_SHIFT	derivative.h	962;"	d
AIPS_PACRD_WP7_MASK	derivative.h	955;"	d
AIPS_PACRD_WP7_SHIFT	derivative.h	956;"	d
AIPS_PACRE_REG	derivative.h	729;"	d
AIPS_PACRE_SP0_MASK	derivative.h	1048;"	d
AIPS_PACRE_SP0_SHIFT	derivative.h	1049;"	d
AIPS_PACRE_SP1_MASK	derivative.h	1042;"	d
AIPS_PACRE_SP1_SHIFT	derivative.h	1043;"	d
AIPS_PACRE_SP2_MASK	derivative.h	1036;"	d
AIPS_PACRE_SP2_SHIFT	derivative.h	1037;"	d
AIPS_PACRE_SP3_MASK	derivative.h	1030;"	d
AIPS_PACRE_SP3_SHIFT	derivative.h	1031;"	d
AIPS_PACRE_SP4_MASK	derivative.h	1024;"	d
AIPS_PACRE_SP4_SHIFT	derivative.h	1025;"	d
AIPS_PACRE_SP5_MASK	derivative.h	1018;"	d
AIPS_PACRE_SP5_SHIFT	derivative.h	1019;"	d
AIPS_PACRE_SP6_MASK	derivative.h	1012;"	d
AIPS_PACRE_SP6_SHIFT	derivative.h	1013;"	d
AIPS_PACRE_SP7_MASK	derivative.h	1006;"	d
AIPS_PACRE_SP7_SHIFT	derivative.h	1007;"	d
AIPS_PACRE_TP0_MASK	derivative.h	1044;"	d
AIPS_PACRE_TP0_SHIFT	derivative.h	1045;"	d
AIPS_PACRE_TP1_MASK	derivative.h	1038;"	d
AIPS_PACRE_TP1_SHIFT	derivative.h	1039;"	d
AIPS_PACRE_TP2_MASK	derivative.h	1032;"	d
AIPS_PACRE_TP2_SHIFT	derivative.h	1033;"	d
AIPS_PACRE_TP3_MASK	derivative.h	1026;"	d
AIPS_PACRE_TP3_SHIFT	derivative.h	1027;"	d
AIPS_PACRE_TP4_MASK	derivative.h	1020;"	d
AIPS_PACRE_TP4_SHIFT	derivative.h	1021;"	d
AIPS_PACRE_TP5_MASK	derivative.h	1014;"	d
AIPS_PACRE_TP5_SHIFT	derivative.h	1015;"	d
AIPS_PACRE_TP6_MASK	derivative.h	1008;"	d
AIPS_PACRE_TP6_SHIFT	derivative.h	1009;"	d
AIPS_PACRE_TP7_MASK	derivative.h	1002;"	d
AIPS_PACRE_TP7_SHIFT	derivative.h	1003;"	d
AIPS_PACRE_WP0_MASK	derivative.h	1046;"	d
AIPS_PACRE_WP0_SHIFT	derivative.h	1047;"	d
AIPS_PACRE_WP1_MASK	derivative.h	1040;"	d
AIPS_PACRE_WP1_SHIFT	derivative.h	1041;"	d
AIPS_PACRE_WP2_MASK	derivative.h	1034;"	d
AIPS_PACRE_WP2_SHIFT	derivative.h	1035;"	d
AIPS_PACRE_WP3_MASK	derivative.h	1028;"	d
AIPS_PACRE_WP3_SHIFT	derivative.h	1029;"	d
AIPS_PACRE_WP4_MASK	derivative.h	1022;"	d
AIPS_PACRE_WP4_SHIFT	derivative.h	1023;"	d
AIPS_PACRE_WP5_MASK	derivative.h	1016;"	d
AIPS_PACRE_WP5_SHIFT	derivative.h	1017;"	d
AIPS_PACRE_WP6_MASK	derivative.h	1010;"	d
AIPS_PACRE_WP6_SHIFT	derivative.h	1011;"	d
AIPS_PACRE_WP7_MASK	derivative.h	1004;"	d
AIPS_PACRE_WP7_SHIFT	derivative.h	1005;"	d
AIPS_PACRF_REG	derivative.h	730;"	d
AIPS_PACRF_SP0_MASK	derivative.h	1097;"	d
AIPS_PACRF_SP0_SHIFT	derivative.h	1098;"	d
AIPS_PACRF_SP1_MASK	derivative.h	1091;"	d
AIPS_PACRF_SP1_SHIFT	derivative.h	1092;"	d
AIPS_PACRF_SP2_MASK	derivative.h	1085;"	d
AIPS_PACRF_SP2_SHIFT	derivative.h	1086;"	d
AIPS_PACRF_SP3_MASK	derivative.h	1079;"	d
AIPS_PACRF_SP3_SHIFT	derivative.h	1080;"	d
AIPS_PACRF_SP4_MASK	derivative.h	1073;"	d
AIPS_PACRF_SP4_SHIFT	derivative.h	1074;"	d
AIPS_PACRF_SP5_MASK	derivative.h	1067;"	d
AIPS_PACRF_SP5_SHIFT	derivative.h	1068;"	d
AIPS_PACRF_SP6_MASK	derivative.h	1061;"	d
AIPS_PACRF_SP6_SHIFT	derivative.h	1062;"	d
AIPS_PACRF_SP7_MASK	derivative.h	1055;"	d
AIPS_PACRF_SP7_SHIFT	derivative.h	1056;"	d
AIPS_PACRF_TP0_MASK	derivative.h	1093;"	d
AIPS_PACRF_TP0_SHIFT	derivative.h	1094;"	d
AIPS_PACRF_TP1_MASK	derivative.h	1087;"	d
AIPS_PACRF_TP1_SHIFT	derivative.h	1088;"	d
AIPS_PACRF_TP2_MASK	derivative.h	1081;"	d
AIPS_PACRF_TP2_SHIFT	derivative.h	1082;"	d
AIPS_PACRF_TP3_MASK	derivative.h	1075;"	d
AIPS_PACRF_TP3_SHIFT	derivative.h	1076;"	d
AIPS_PACRF_TP4_MASK	derivative.h	1069;"	d
AIPS_PACRF_TP4_SHIFT	derivative.h	1070;"	d
AIPS_PACRF_TP5_MASK	derivative.h	1063;"	d
AIPS_PACRF_TP5_SHIFT	derivative.h	1064;"	d
AIPS_PACRF_TP6_MASK	derivative.h	1057;"	d
AIPS_PACRF_TP6_SHIFT	derivative.h	1058;"	d
AIPS_PACRF_TP7_MASK	derivative.h	1051;"	d
AIPS_PACRF_TP7_SHIFT	derivative.h	1052;"	d
AIPS_PACRF_WP0_MASK	derivative.h	1095;"	d
AIPS_PACRF_WP0_SHIFT	derivative.h	1096;"	d
AIPS_PACRF_WP1_MASK	derivative.h	1089;"	d
AIPS_PACRF_WP1_SHIFT	derivative.h	1090;"	d
AIPS_PACRF_WP2_MASK	derivative.h	1083;"	d
AIPS_PACRF_WP2_SHIFT	derivative.h	1084;"	d
AIPS_PACRF_WP3_MASK	derivative.h	1077;"	d
AIPS_PACRF_WP3_SHIFT	derivative.h	1078;"	d
AIPS_PACRF_WP4_MASK	derivative.h	1071;"	d
AIPS_PACRF_WP4_SHIFT	derivative.h	1072;"	d
AIPS_PACRF_WP5_MASK	derivative.h	1065;"	d
AIPS_PACRF_WP5_SHIFT	derivative.h	1066;"	d
AIPS_PACRF_WP6_MASK	derivative.h	1059;"	d
AIPS_PACRF_WP6_SHIFT	derivative.h	1060;"	d
AIPS_PACRF_WP7_MASK	derivative.h	1053;"	d
AIPS_PACRF_WP7_SHIFT	derivative.h	1054;"	d
AIPS_PACRG_REG	derivative.h	731;"	d
AIPS_PACRG_SP0_MASK	derivative.h	1146;"	d
AIPS_PACRG_SP0_SHIFT	derivative.h	1147;"	d
AIPS_PACRG_SP1_MASK	derivative.h	1140;"	d
AIPS_PACRG_SP1_SHIFT	derivative.h	1141;"	d
AIPS_PACRG_SP2_MASK	derivative.h	1134;"	d
AIPS_PACRG_SP2_SHIFT	derivative.h	1135;"	d
AIPS_PACRG_SP3_MASK	derivative.h	1128;"	d
AIPS_PACRG_SP3_SHIFT	derivative.h	1129;"	d
AIPS_PACRG_SP4_MASK	derivative.h	1122;"	d
AIPS_PACRG_SP4_SHIFT	derivative.h	1123;"	d
AIPS_PACRG_SP5_MASK	derivative.h	1116;"	d
AIPS_PACRG_SP5_SHIFT	derivative.h	1117;"	d
AIPS_PACRG_SP6_MASK	derivative.h	1110;"	d
AIPS_PACRG_SP6_SHIFT	derivative.h	1111;"	d
AIPS_PACRG_SP7_MASK	derivative.h	1104;"	d
AIPS_PACRG_SP7_SHIFT	derivative.h	1105;"	d
AIPS_PACRG_TP0_MASK	derivative.h	1142;"	d
AIPS_PACRG_TP0_SHIFT	derivative.h	1143;"	d
AIPS_PACRG_TP1_MASK	derivative.h	1136;"	d
AIPS_PACRG_TP1_SHIFT	derivative.h	1137;"	d
AIPS_PACRG_TP2_MASK	derivative.h	1130;"	d
AIPS_PACRG_TP2_SHIFT	derivative.h	1131;"	d
AIPS_PACRG_TP3_MASK	derivative.h	1124;"	d
AIPS_PACRG_TP3_SHIFT	derivative.h	1125;"	d
AIPS_PACRG_TP4_MASK	derivative.h	1118;"	d
AIPS_PACRG_TP4_SHIFT	derivative.h	1119;"	d
AIPS_PACRG_TP5_MASK	derivative.h	1112;"	d
AIPS_PACRG_TP5_SHIFT	derivative.h	1113;"	d
AIPS_PACRG_TP6_MASK	derivative.h	1106;"	d
AIPS_PACRG_TP6_SHIFT	derivative.h	1107;"	d
AIPS_PACRG_TP7_MASK	derivative.h	1100;"	d
AIPS_PACRG_TP7_SHIFT	derivative.h	1101;"	d
AIPS_PACRG_WP0_MASK	derivative.h	1144;"	d
AIPS_PACRG_WP0_SHIFT	derivative.h	1145;"	d
AIPS_PACRG_WP1_MASK	derivative.h	1138;"	d
AIPS_PACRG_WP1_SHIFT	derivative.h	1139;"	d
AIPS_PACRG_WP2_MASK	derivative.h	1132;"	d
AIPS_PACRG_WP2_SHIFT	derivative.h	1133;"	d
AIPS_PACRG_WP3_MASK	derivative.h	1126;"	d
AIPS_PACRG_WP3_SHIFT	derivative.h	1127;"	d
AIPS_PACRG_WP4_MASK	derivative.h	1120;"	d
AIPS_PACRG_WP4_SHIFT	derivative.h	1121;"	d
AIPS_PACRG_WP5_MASK	derivative.h	1114;"	d
AIPS_PACRG_WP5_SHIFT	derivative.h	1115;"	d
AIPS_PACRG_WP6_MASK	derivative.h	1108;"	d
AIPS_PACRG_WP6_SHIFT	derivative.h	1109;"	d
AIPS_PACRG_WP7_MASK	derivative.h	1102;"	d
AIPS_PACRG_WP7_SHIFT	derivative.h	1103;"	d
AIPS_PACRH_REG	derivative.h	732;"	d
AIPS_PACRH_SP0_MASK	derivative.h	1195;"	d
AIPS_PACRH_SP0_SHIFT	derivative.h	1196;"	d
AIPS_PACRH_SP1_MASK	derivative.h	1189;"	d
AIPS_PACRH_SP1_SHIFT	derivative.h	1190;"	d
AIPS_PACRH_SP2_MASK	derivative.h	1183;"	d
AIPS_PACRH_SP2_SHIFT	derivative.h	1184;"	d
AIPS_PACRH_SP3_MASK	derivative.h	1177;"	d
AIPS_PACRH_SP3_SHIFT	derivative.h	1178;"	d
AIPS_PACRH_SP4_MASK	derivative.h	1171;"	d
AIPS_PACRH_SP4_SHIFT	derivative.h	1172;"	d
AIPS_PACRH_SP5_MASK	derivative.h	1165;"	d
AIPS_PACRH_SP5_SHIFT	derivative.h	1166;"	d
AIPS_PACRH_SP6_MASK	derivative.h	1159;"	d
AIPS_PACRH_SP6_SHIFT	derivative.h	1160;"	d
AIPS_PACRH_SP7_MASK	derivative.h	1153;"	d
AIPS_PACRH_SP7_SHIFT	derivative.h	1154;"	d
AIPS_PACRH_TP0_MASK	derivative.h	1191;"	d
AIPS_PACRH_TP0_SHIFT	derivative.h	1192;"	d
AIPS_PACRH_TP1_MASK	derivative.h	1185;"	d
AIPS_PACRH_TP1_SHIFT	derivative.h	1186;"	d
AIPS_PACRH_TP2_MASK	derivative.h	1179;"	d
AIPS_PACRH_TP2_SHIFT	derivative.h	1180;"	d
AIPS_PACRH_TP3_MASK	derivative.h	1173;"	d
AIPS_PACRH_TP3_SHIFT	derivative.h	1174;"	d
AIPS_PACRH_TP4_MASK	derivative.h	1167;"	d
AIPS_PACRH_TP4_SHIFT	derivative.h	1168;"	d
AIPS_PACRH_TP5_MASK	derivative.h	1161;"	d
AIPS_PACRH_TP5_SHIFT	derivative.h	1162;"	d
AIPS_PACRH_TP6_MASK	derivative.h	1155;"	d
AIPS_PACRH_TP6_SHIFT	derivative.h	1156;"	d
AIPS_PACRH_TP7_MASK	derivative.h	1149;"	d
AIPS_PACRH_TP7_SHIFT	derivative.h	1150;"	d
AIPS_PACRH_WP0_MASK	derivative.h	1193;"	d
AIPS_PACRH_WP0_SHIFT	derivative.h	1194;"	d
AIPS_PACRH_WP1_MASK	derivative.h	1187;"	d
AIPS_PACRH_WP1_SHIFT	derivative.h	1188;"	d
AIPS_PACRH_WP2_MASK	derivative.h	1181;"	d
AIPS_PACRH_WP2_SHIFT	derivative.h	1182;"	d
AIPS_PACRH_WP3_MASK	derivative.h	1175;"	d
AIPS_PACRH_WP3_SHIFT	derivative.h	1176;"	d
AIPS_PACRH_WP4_MASK	derivative.h	1169;"	d
AIPS_PACRH_WP4_SHIFT	derivative.h	1170;"	d
AIPS_PACRH_WP5_MASK	derivative.h	1163;"	d
AIPS_PACRH_WP5_SHIFT	derivative.h	1164;"	d
AIPS_PACRH_WP6_MASK	derivative.h	1157;"	d
AIPS_PACRH_WP6_SHIFT	derivative.h	1158;"	d
AIPS_PACRH_WP7_MASK	derivative.h	1151;"	d
AIPS_PACRH_WP7_SHIFT	derivative.h	1152;"	d
AIPS_PACRI_REG	derivative.h	733;"	d
AIPS_PACRI_SP0_MASK	derivative.h	1244;"	d
AIPS_PACRI_SP0_SHIFT	derivative.h	1245;"	d
AIPS_PACRI_SP1_MASK	derivative.h	1238;"	d
AIPS_PACRI_SP1_SHIFT	derivative.h	1239;"	d
AIPS_PACRI_SP2_MASK	derivative.h	1232;"	d
AIPS_PACRI_SP2_SHIFT	derivative.h	1233;"	d
AIPS_PACRI_SP3_MASK	derivative.h	1226;"	d
AIPS_PACRI_SP3_SHIFT	derivative.h	1227;"	d
AIPS_PACRI_SP4_MASK	derivative.h	1220;"	d
AIPS_PACRI_SP4_SHIFT	derivative.h	1221;"	d
AIPS_PACRI_SP5_MASK	derivative.h	1214;"	d
AIPS_PACRI_SP5_SHIFT	derivative.h	1215;"	d
AIPS_PACRI_SP6_MASK	derivative.h	1208;"	d
AIPS_PACRI_SP6_SHIFT	derivative.h	1209;"	d
AIPS_PACRI_SP7_MASK	derivative.h	1202;"	d
AIPS_PACRI_SP7_SHIFT	derivative.h	1203;"	d
AIPS_PACRI_TP0_MASK	derivative.h	1240;"	d
AIPS_PACRI_TP0_SHIFT	derivative.h	1241;"	d
AIPS_PACRI_TP1_MASK	derivative.h	1234;"	d
AIPS_PACRI_TP1_SHIFT	derivative.h	1235;"	d
AIPS_PACRI_TP2_MASK	derivative.h	1228;"	d
AIPS_PACRI_TP2_SHIFT	derivative.h	1229;"	d
AIPS_PACRI_TP3_MASK	derivative.h	1222;"	d
AIPS_PACRI_TP3_SHIFT	derivative.h	1223;"	d
AIPS_PACRI_TP4_MASK	derivative.h	1216;"	d
AIPS_PACRI_TP4_SHIFT	derivative.h	1217;"	d
AIPS_PACRI_TP5_MASK	derivative.h	1210;"	d
AIPS_PACRI_TP5_SHIFT	derivative.h	1211;"	d
AIPS_PACRI_TP6_MASK	derivative.h	1204;"	d
AIPS_PACRI_TP6_SHIFT	derivative.h	1205;"	d
AIPS_PACRI_TP7_MASK	derivative.h	1198;"	d
AIPS_PACRI_TP7_SHIFT	derivative.h	1199;"	d
AIPS_PACRI_WP0_MASK	derivative.h	1242;"	d
AIPS_PACRI_WP0_SHIFT	derivative.h	1243;"	d
AIPS_PACRI_WP1_MASK	derivative.h	1236;"	d
AIPS_PACRI_WP1_SHIFT	derivative.h	1237;"	d
AIPS_PACRI_WP2_MASK	derivative.h	1230;"	d
AIPS_PACRI_WP2_SHIFT	derivative.h	1231;"	d
AIPS_PACRI_WP3_MASK	derivative.h	1224;"	d
AIPS_PACRI_WP3_SHIFT	derivative.h	1225;"	d
AIPS_PACRI_WP4_MASK	derivative.h	1218;"	d
AIPS_PACRI_WP4_SHIFT	derivative.h	1219;"	d
AIPS_PACRI_WP5_MASK	derivative.h	1212;"	d
AIPS_PACRI_WP5_SHIFT	derivative.h	1213;"	d
AIPS_PACRI_WP6_MASK	derivative.h	1206;"	d
AIPS_PACRI_WP6_SHIFT	derivative.h	1207;"	d
AIPS_PACRI_WP7_MASK	derivative.h	1200;"	d
AIPS_PACRI_WP7_SHIFT	derivative.h	1201;"	d
AIPS_PACRJ_REG	derivative.h	734;"	d
AIPS_PACRJ_SP0_MASK	derivative.h	1293;"	d
AIPS_PACRJ_SP0_SHIFT	derivative.h	1294;"	d
AIPS_PACRJ_SP1_MASK	derivative.h	1287;"	d
AIPS_PACRJ_SP1_SHIFT	derivative.h	1288;"	d
AIPS_PACRJ_SP2_MASK	derivative.h	1281;"	d
AIPS_PACRJ_SP2_SHIFT	derivative.h	1282;"	d
AIPS_PACRJ_SP3_MASK	derivative.h	1275;"	d
AIPS_PACRJ_SP3_SHIFT	derivative.h	1276;"	d
AIPS_PACRJ_SP4_MASK	derivative.h	1269;"	d
AIPS_PACRJ_SP4_SHIFT	derivative.h	1270;"	d
AIPS_PACRJ_SP5_MASK	derivative.h	1263;"	d
AIPS_PACRJ_SP5_SHIFT	derivative.h	1264;"	d
AIPS_PACRJ_SP6_MASK	derivative.h	1257;"	d
AIPS_PACRJ_SP6_SHIFT	derivative.h	1258;"	d
AIPS_PACRJ_SP7_MASK	derivative.h	1251;"	d
AIPS_PACRJ_SP7_SHIFT	derivative.h	1252;"	d
AIPS_PACRJ_TP0_MASK	derivative.h	1289;"	d
AIPS_PACRJ_TP0_SHIFT	derivative.h	1290;"	d
AIPS_PACRJ_TP1_MASK	derivative.h	1283;"	d
AIPS_PACRJ_TP1_SHIFT	derivative.h	1284;"	d
AIPS_PACRJ_TP2_MASK	derivative.h	1277;"	d
AIPS_PACRJ_TP2_SHIFT	derivative.h	1278;"	d
AIPS_PACRJ_TP3_MASK	derivative.h	1271;"	d
AIPS_PACRJ_TP3_SHIFT	derivative.h	1272;"	d
AIPS_PACRJ_TP4_MASK	derivative.h	1265;"	d
AIPS_PACRJ_TP4_SHIFT	derivative.h	1266;"	d
AIPS_PACRJ_TP5_MASK	derivative.h	1259;"	d
AIPS_PACRJ_TP5_SHIFT	derivative.h	1260;"	d
AIPS_PACRJ_TP6_MASK	derivative.h	1253;"	d
AIPS_PACRJ_TP6_SHIFT	derivative.h	1254;"	d
AIPS_PACRJ_TP7_MASK	derivative.h	1247;"	d
AIPS_PACRJ_TP7_SHIFT	derivative.h	1248;"	d
AIPS_PACRJ_WP0_MASK	derivative.h	1291;"	d
AIPS_PACRJ_WP0_SHIFT	derivative.h	1292;"	d
AIPS_PACRJ_WP1_MASK	derivative.h	1285;"	d
AIPS_PACRJ_WP1_SHIFT	derivative.h	1286;"	d
AIPS_PACRJ_WP2_MASK	derivative.h	1279;"	d
AIPS_PACRJ_WP2_SHIFT	derivative.h	1280;"	d
AIPS_PACRJ_WP3_MASK	derivative.h	1273;"	d
AIPS_PACRJ_WP3_SHIFT	derivative.h	1274;"	d
AIPS_PACRJ_WP4_MASK	derivative.h	1267;"	d
AIPS_PACRJ_WP4_SHIFT	derivative.h	1268;"	d
AIPS_PACRJ_WP5_MASK	derivative.h	1261;"	d
AIPS_PACRJ_WP5_SHIFT	derivative.h	1262;"	d
AIPS_PACRJ_WP6_MASK	derivative.h	1255;"	d
AIPS_PACRJ_WP6_SHIFT	derivative.h	1256;"	d
AIPS_PACRJ_WP7_MASK	derivative.h	1249;"	d
AIPS_PACRJ_WP7_SHIFT	derivative.h	1250;"	d
AIPS_PACRK_REG	derivative.h	735;"	d
AIPS_PACRK_SP0_MASK	derivative.h	1342;"	d
AIPS_PACRK_SP0_SHIFT	derivative.h	1343;"	d
AIPS_PACRK_SP1_MASK	derivative.h	1336;"	d
AIPS_PACRK_SP1_SHIFT	derivative.h	1337;"	d
AIPS_PACRK_SP2_MASK	derivative.h	1330;"	d
AIPS_PACRK_SP2_SHIFT	derivative.h	1331;"	d
AIPS_PACRK_SP3_MASK	derivative.h	1324;"	d
AIPS_PACRK_SP3_SHIFT	derivative.h	1325;"	d
AIPS_PACRK_SP4_MASK	derivative.h	1318;"	d
AIPS_PACRK_SP4_SHIFT	derivative.h	1319;"	d
AIPS_PACRK_SP5_MASK	derivative.h	1312;"	d
AIPS_PACRK_SP5_SHIFT	derivative.h	1313;"	d
AIPS_PACRK_SP6_MASK	derivative.h	1306;"	d
AIPS_PACRK_SP6_SHIFT	derivative.h	1307;"	d
AIPS_PACRK_SP7_MASK	derivative.h	1300;"	d
AIPS_PACRK_SP7_SHIFT	derivative.h	1301;"	d
AIPS_PACRK_TP0_MASK	derivative.h	1338;"	d
AIPS_PACRK_TP0_SHIFT	derivative.h	1339;"	d
AIPS_PACRK_TP1_MASK	derivative.h	1332;"	d
AIPS_PACRK_TP1_SHIFT	derivative.h	1333;"	d
AIPS_PACRK_TP2_MASK	derivative.h	1326;"	d
AIPS_PACRK_TP2_SHIFT	derivative.h	1327;"	d
AIPS_PACRK_TP3_MASK	derivative.h	1320;"	d
AIPS_PACRK_TP3_SHIFT	derivative.h	1321;"	d
AIPS_PACRK_TP4_MASK	derivative.h	1314;"	d
AIPS_PACRK_TP4_SHIFT	derivative.h	1315;"	d
AIPS_PACRK_TP5_MASK	derivative.h	1308;"	d
AIPS_PACRK_TP5_SHIFT	derivative.h	1309;"	d
AIPS_PACRK_TP6_MASK	derivative.h	1302;"	d
AIPS_PACRK_TP6_SHIFT	derivative.h	1303;"	d
AIPS_PACRK_TP7_MASK	derivative.h	1296;"	d
AIPS_PACRK_TP7_SHIFT	derivative.h	1297;"	d
AIPS_PACRK_WP0_MASK	derivative.h	1340;"	d
AIPS_PACRK_WP0_SHIFT	derivative.h	1341;"	d
AIPS_PACRK_WP1_MASK	derivative.h	1334;"	d
AIPS_PACRK_WP1_SHIFT	derivative.h	1335;"	d
AIPS_PACRK_WP2_MASK	derivative.h	1328;"	d
AIPS_PACRK_WP2_SHIFT	derivative.h	1329;"	d
AIPS_PACRK_WP3_MASK	derivative.h	1322;"	d
AIPS_PACRK_WP3_SHIFT	derivative.h	1323;"	d
AIPS_PACRK_WP4_MASK	derivative.h	1316;"	d
AIPS_PACRK_WP4_SHIFT	derivative.h	1317;"	d
AIPS_PACRK_WP5_MASK	derivative.h	1310;"	d
AIPS_PACRK_WP5_SHIFT	derivative.h	1311;"	d
AIPS_PACRK_WP6_MASK	derivative.h	1304;"	d
AIPS_PACRK_WP6_SHIFT	derivative.h	1305;"	d
AIPS_PACRK_WP7_MASK	derivative.h	1298;"	d
AIPS_PACRK_WP7_SHIFT	derivative.h	1299;"	d
AIPS_PACRL_REG	derivative.h	736;"	d
AIPS_PACRL_SP0_MASK	derivative.h	1391;"	d
AIPS_PACRL_SP0_SHIFT	derivative.h	1392;"	d
AIPS_PACRL_SP1_MASK	derivative.h	1385;"	d
AIPS_PACRL_SP1_SHIFT	derivative.h	1386;"	d
AIPS_PACRL_SP2_MASK	derivative.h	1379;"	d
AIPS_PACRL_SP2_SHIFT	derivative.h	1380;"	d
AIPS_PACRL_SP3_MASK	derivative.h	1373;"	d
AIPS_PACRL_SP3_SHIFT	derivative.h	1374;"	d
AIPS_PACRL_SP4_MASK	derivative.h	1367;"	d
AIPS_PACRL_SP4_SHIFT	derivative.h	1368;"	d
AIPS_PACRL_SP5_MASK	derivative.h	1361;"	d
AIPS_PACRL_SP5_SHIFT	derivative.h	1362;"	d
AIPS_PACRL_SP6_MASK	derivative.h	1355;"	d
AIPS_PACRL_SP6_SHIFT	derivative.h	1356;"	d
AIPS_PACRL_SP7_MASK	derivative.h	1349;"	d
AIPS_PACRL_SP7_SHIFT	derivative.h	1350;"	d
AIPS_PACRL_TP0_MASK	derivative.h	1387;"	d
AIPS_PACRL_TP0_SHIFT	derivative.h	1388;"	d
AIPS_PACRL_TP1_MASK	derivative.h	1381;"	d
AIPS_PACRL_TP1_SHIFT	derivative.h	1382;"	d
AIPS_PACRL_TP2_MASK	derivative.h	1375;"	d
AIPS_PACRL_TP2_SHIFT	derivative.h	1376;"	d
AIPS_PACRL_TP3_MASK	derivative.h	1369;"	d
AIPS_PACRL_TP3_SHIFT	derivative.h	1370;"	d
AIPS_PACRL_TP4_MASK	derivative.h	1363;"	d
AIPS_PACRL_TP4_SHIFT	derivative.h	1364;"	d
AIPS_PACRL_TP5_MASK	derivative.h	1357;"	d
AIPS_PACRL_TP5_SHIFT	derivative.h	1358;"	d
AIPS_PACRL_TP6_MASK	derivative.h	1351;"	d
AIPS_PACRL_TP6_SHIFT	derivative.h	1352;"	d
AIPS_PACRL_TP7_MASK	derivative.h	1345;"	d
AIPS_PACRL_TP7_SHIFT	derivative.h	1346;"	d
AIPS_PACRL_WP0_MASK	derivative.h	1389;"	d
AIPS_PACRL_WP0_SHIFT	derivative.h	1390;"	d
AIPS_PACRL_WP1_MASK	derivative.h	1383;"	d
AIPS_PACRL_WP1_SHIFT	derivative.h	1384;"	d
AIPS_PACRL_WP2_MASK	derivative.h	1377;"	d
AIPS_PACRL_WP2_SHIFT	derivative.h	1378;"	d
AIPS_PACRL_WP3_MASK	derivative.h	1371;"	d
AIPS_PACRL_WP3_SHIFT	derivative.h	1372;"	d
AIPS_PACRL_WP4_MASK	derivative.h	1365;"	d
AIPS_PACRL_WP4_SHIFT	derivative.h	1366;"	d
AIPS_PACRL_WP5_MASK	derivative.h	1359;"	d
AIPS_PACRL_WP5_SHIFT	derivative.h	1360;"	d
AIPS_PACRL_WP6_MASK	derivative.h	1353;"	d
AIPS_PACRL_WP6_SHIFT	derivative.h	1354;"	d
AIPS_PACRL_WP7_MASK	derivative.h	1347;"	d
AIPS_PACRL_WP7_SHIFT	derivative.h	1348;"	d
AIPS_PACRM_REG	derivative.h	737;"	d
AIPS_PACRM_SP0_MASK	derivative.h	1440;"	d
AIPS_PACRM_SP0_SHIFT	derivative.h	1441;"	d
AIPS_PACRM_SP1_MASK	derivative.h	1434;"	d
AIPS_PACRM_SP1_SHIFT	derivative.h	1435;"	d
AIPS_PACRM_SP2_MASK	derivative.h	1428;"	d
AIPS_PACRM_SP2_SHIFT	derivative.h	1429;"	d
AIPS_PACRM_SP3_MASK	derivative.h	1422;"	d
AIPS_PACRM_SP3_SHIFT	derivative.h	1423;"	d
AIPS_PACRM_SP4_MASK	derivative.h	1416;"	d
AIPS_PACRM_SP4_SHIFT	derivative.h	1417;"	d
AIPS_PACRM_SP5_MASK	derivative.h	1410;"	d
AIPS_PACRM_SP5_SHIFT	derivative.h	1411;"	d
AIPS_PACRM_SP6_MASK	derivative.h	1404;"	d
AIPS_PACRM_SP6_SHIFT	derivative.h	1405;"	d
AIPS_PACRM_SP7_MASK	derivative.h	1398;"	d
AIPS_PACRM_SP7_SHIFT	derivative.h	1399;"	d
AIPS_PACRM_TP0_MASK	derivative.h	1436;"	d
AIPS_PACRM_TP0_SHIFT	derivative.h	1437;"	d
AIPS_PACRM_TP1_MASK	derivative.h	1430;"	d
AIPS_PACRM_TP1_SHIFT	derivative.h	1431;"	d
AIPS_PACRM_TP2_MASK	derivative.h	1424;"	d
AIPS_PACRM_TP2_SHIFT	derivative.h	1425;"	d
AIPS_PACRM_TP3_MASK	derivative.h	1418;"	d
AIPS_PACRM_TP3_SHIFT	derivative.h	1419;"	d
AIPS_PACRM_TP4_MASK	derivative.h	1412;"	d
AIPS_PACRM_TP4_SHIFT	derivative.h	1413;"	d
AIPS_PACRM_TP5_MASK	derivative.h	1406;"	d
AIPS_PACRM_TP5_SHIFT	derivative.h	1407;"	d
AIPS_PACRM_TP6_MASK	derivative.h	1400;"	d
AIPS_PACRM_TP6_SHIFT	derivative.h	1401;"	d
AIPS_PACRM_TP7_MASK	derivative.h	1394;"	d
AIPS_PACRM_TP7_SHIFT	derivative.h	1395;"	d
AIPS_PACRM_WP0_MASK	derivative.h	1438;"	d
AIPS_PACRM_WP0_SHIFT	derivative.h	1439;"	d
AIPS_PACRM_WP1_MASK	derivative.h	1432;"	d
AIPS_PACRM_WP1_SHIFT	derivative.h	1433;"	d
AIPS_PACRM_WP2_MASK	derivative.h	1426;"	d
AIPS_PACRM_WP2_SHIFT	derivative.h	1427;"	d
AIPS_PACRM_WP3_MASK	derivative.h	1420;"	d
AIPS_PACRM_WP3_SHIFT	derivative.h	1421;"	d
AIPS_PACRM_WP4_MASK	derivative.h	1414;"	d
AIPS_PACRM_WP4_SHIFT	derivative.h	1415;"	d
AIPS_PACRM_WP5_MASK	derivative.h	1408;"	d
AIPS_PACRM_WP5_SHIFT	derivative.h	1409;"	d
AIPS_PACRM_WP6_MASK	derivative.h	1402;"	d
AIPS_PACRM_WP6_SHIFT	derivative.h	1403;"	d
AIPS_PACRM_WP7_MASK	derivative.h	1396;"	d
AIPS_PACRM_WP7_SHIFT	derivative.h	1397;"	d
AIPS_PACRN_REG	derivative.h	738;"	d
AIPS_PACRN_SP0_MASK	derivative.h	1489;"	d
AIPS_PACRN_SP0_SHIFT	derivative.h	1490;"	d
AIPS_PACRN_SP1_MASK	derivative.h	1483;"	d
AIPS_PACRN_SP1_SHIFT	derivative.h	1484;"	d
AIPS_PACRN_SP2_MASK	derivative.h	1477;"	d
AIPS_PACRN_SP2_SHIFT	derivative.h	1478;"	d
AIPS_PACRN_SP3_MASK	derivative.h	1471;"	d
AIPS_PACRN_SP3_SHIFT	derivative.h	1472;"	d
AIPS_PACRN_SP4_MASK	derivative.h	1465;"	d
AIPS_PACRN_SP4_SHIFT	derivative.h	1466;"	d
AIPS_PACRN_SP5_MASK	derivative.h	1459;"	d
AIPS_PACRN_SP5_SHIFT	derivative.h	1460;"	d
AIPS_PACRN_SP6_MASK	derivative.h	1453;"	d
AIPS_PACRN_SP6_SHIFT	derivative.h	1454;"	d
AIPS_PACRN_SP7_MASK	derivative.h	1447;"	d
AIPS_PACRN_SP7_SHIFT	derivative.h	1448;"	d
AIPS_PACRN_TP0_MASK	derivative.h	1485;"	d
AIPS_PACRN_TP0_SHIFT	derivative.h	1486;"	d
AIPS_PACRN_TP1_MASK	derivative.h	1479;"	d
AIPS_PACRN_TP1_SHIFT	derivative.h	1480;"	d
AIPS_PACRN_TP2_MASK	derivative.h	1473;"	d
AIPS_PACRN_TP2_SHIFT	derivative.h	1474;"	d
AIPS_PACRN_TP3_MASK	derivative.h	1467;"	d
AIPS_PACRN_TP3_SHIFT	derivative.h	1468;"	d
AIPS_PACRN_TP4_MASK	derivative.h	1461;"	d
AIPS_PACRN_TP4_SHIFT	derivative.h	1462;"	d
AIPS_PACRN_TP5_MASK	derivative.h	1455;"	d
AIPS_PACRN_TP5_SHIFT	derivative.h	1456;"	d
AIPS_PACRN_TP6_MASK	derivative.h	1449;"	d
AIPS_PACRN_TP6_SHIFT	derivative.h	1450;"	d
AIPS_PACRN_TP7_MASK	derivative.h	1443;"	d
AIPS_PACRN_TP7_SHIFT	derivative.h	1444;"	d
AIPS_PACRN_WP0_MASK	derivative.h	1487;"	d
AIPS_PACRN_WP0_SHIFT	derivative.h	1488;"	d
AIPS_PACRN_WP1_MASK	derivative.h	1481;"	d
AIPS_PACRN_WP1_SHIFT	derivative.h	1482;"	d
AIPS_PACRN_WP2_MASK	derivative.h	1475;"	d
AIPS_PACRN_WP2_SHIFT	derivative.h	1476;"	d
AIPS_PACRN_WP3_MASK	derivative.h	1469;"	d
AIPS_PACRN_WP3_SHIFT	derivative.h	1470;"	d
AIPS_PACRN_WP4_MASK	derivative.h	1463;"	d
AIPS_PACRN_WP4_SHIFT	derivative.h	1464;"	d
AIPS_PACRN_WP5_MASK	derivative.h	1457;"	d
AIPS_PACRN_WP5_SHIFT	derivative.h	1458;"	d
AIPS_PACRN_WP6_MASK	derivative.h	1451;"	d
AIPS_PACRN_WP6_SHIFT	derivative.h	1452;"	d
AIPS_PACRN_WP7_MASK	derivative.h	1445;"	d
AIPS_PACRN_WP7_SHIFT	derivative.h	1446;"	d
AIPS_PACRO_REG	derivative.h	739;"	d
AIPS_PACRO_SP0_MASK	derivative.h	1538;"	d
AIPS_PACRO_SP0_SHIFT	derivative.h	1539;"	d
AIPS_PACRO_SP1_MASK	derivative.h	1532;"	d
AIPS_PACRO_SP1_SHIFT	derivative.h	1533;"	d
AIPS_PACRO_SP2_MASK	derivative.h	1526;"	d
AIPS_PACRO_SP2_SHIFT	derivative.h	1527;"	d
AIPS_PACRO_SP3_MASK	derivative.h	1520;"	d
AIPS_PACRO_SP3_SHIFT	derivative.h	1521;"	d
AIPS_PACRO_SP4_MASK	derivative.h	1514;"	d
AIPS_PACRO_SP4_SHIFT	derivative.h	1515;"	d
AIPS_PACRO_SP5_MASK	derivative.h	1508;"	d
AIPS_PACRO_SP5_SHIFT	derivative.h	1509;"	d
AIPS_PACRO_SP6_MASK	derivative.h	1502;"	d
AIPS_PACRO_SP6_SHIFT	derivative.h	1503;"	d
AIPS_PACRO_SP7_MASK	derivative.h	1496;"	d
AIPS_PACRO_SP7_SHIFT	derivative.h	1497;"	d
AIPS_PACRO_TP0_MASK	derivative.h	1534;"	d
AIPS_PACRO_TP0_SHIFT	derivative.h	1535;"	d
AIPS_PACRO_TP1_MASK	derivative.h	1528;"	d
AIPS_PACRO_TP1_SHIFT	derivative.h	1529;"	d
AIPS_PACRO_TP2_MASK	derivative.h	1522;"	d
AIPS_PACRO_TP2_SHIFT	derivative.h	1523;"	d
AIPS_PACRO_TP3_MASK	derivative.h	1516;"	d
AIPS_PACRO_TP3_SHIFT	derivative.h	1517;"	d
AIPS_PACRO_TP4_MASK	derivative.h	1510;"	d
AIPS_PACRO_TP4_SHIFT	derivative.h	1511;"	d
AIPS_PACRO_TP5_MASK	derivative.h	1504;"	d
AIPS_PACRO_TP5_SHIFT	derivative.h	1505;"	d
AIPS_PACRO_TP6_MASK	derivative.h	1498;"	d
AIPS_PACRO_TP6_SHIFT	derivative.h	1499;"	d
AIPS_PACRO_TP7_MASK	derivative.h	1492;"	d
AIPS_PACRO_TP7_SHIFT	derivative.h	1493;"	d
AIPS_PACRO_WP0_MASK	derivative.h	1536;"	d
AIPS_PACRO_WP0_SHIFT	derivative.h	1537;"	d
AIPS_PACRO_WP1_MASK	derivative.h	1530;"	d
AIPS_PACRO_WP1_SHIFT	derivative.h	1531;"	d
AIPS_PACRO_WP2_MASK	derivative.h	1524;"	d
AIPS_PACRO_WP2_SHIFT	derivative.h	1525;"	d
AIPS_PACRO_WP3_MASK	derivative.h	1518;"	d
AIPS_PACRO_WP3_SHIFT	derivative.h	1519;"	d
AIPS_PACRO_WP4_MASK	derivative.h	1512;"	d
AIPS_PACRO_WP4_SHIFT	derivative.h	1513;"	d
AIPS_PACRO_WP5_MASK	derivative.h	1506;"	d
AIPS_PACRO_WP5_SHIFT	derivative.h	1507;"	d
AIPS_PACRO_WP6_MASK	derivative.h	1500;"	d
AIPS_PACRO_WP6_SHIFT	derivative.h	1501;"	d
AIPS_PACRO_WP7_MASK	derivative.h	1494;"	d
AIPS_PACRO_WP7_SHIFT	derivative.h	1495;"	d
AIPS_PACRP_REG	derivative.h	740;"	d
AIPS_PACRP_SP0_MASK	derivative.h	1587;"	d
AIPS_PACRP_SP0_SHIFT	derivative.h	1588;"	d
AIPS_PACRP_SP1_MASK	derivative.h	1581;"	d
AIPS_PACRP_SP1_SHIFT	derivative.h	1582;"	d
AIPS_PACRP_SP2_MASK	derivative.h	1575;"	d
AIPS_PACRP_SP2_SHIFT	derivative.h	1576;"	d
AIPS_PACRP_SP3_MASK	derivative.h	1569;"	d
AIPS_PACRP_SP3_SHIFT	derivative.h	1570;"	d
AIPS_PACRP_SP4_MASK	derivative.h	1563;"	d
AIPS_PACRP_SP4_SHIFT	derivative.h	1564;"	d
AIPS_PACRP_SP5_MASK	derivative.h	1557;"	d
AIPS_PACRP_SP5_SHIFT	derivative.h	1558;"	d
AIPS_PACRP_SP6_MASK	derivative.h	1551;"	d
AIPS_PACRP_SP6_SHIFT	derivative.h	1552;"	d
AIPS_PACRP_SP7_MASK	derivative.h	1545;"	d
AIPS_PACRP_SP7_SHIFT	derivative.h	1546;"	d
AIPS_PACRP_TP0_MASK	derivative.h	1583;"	d
AIPS_PACRP_TP0_SHIFT	derivative.h	1584;"	d
AIPS_PACRP_TP1_MASK	derivative.h	1577;"	d
AIPS_PACRP_TP1_SHIFT	derivative.h	1578;"	d
AIPS_PACRP_TP2_MASK	derivative.h	1571;"	d
AIPS_PACRP_TP2_SHIFT	derivative.h	1572;"	d
AIPS_PACRP_TP3_MASK	derivative.h	1565;"	d
AIPS_PACRP_TP3_SHIFT	derivative.h	1566;"	d
AIPS_PACRP_TP4_MASK	derivative.h	1559;"	d
AIPS_PACRP_TP4_SHIFT	derivative.h	1560;"	d
AIPS_PACRP_TP5_MASK	derivative.h	1553;"	d
AIPS_PACRP_TP5_SHIFT	derivative.h	1554;"	d
AIPS_PACRP_TP6_MASK	derivative.h	1547;"	d
AIPS_PACRP_TP6_SHIFT	derivative.h	1548;"	d
AIPS_PACRP_TP7_MASK	derivative.h	1541;"	d
AIPS_PACRP_TP7_SHIFT	derivative.h	1542;"	d
AIPS_PACRP_WP0_MASK	derivative.h	1585;"	d
AIPS_PACRP_WP0_SHIFT	derivative.h	1586;"	d
AIPS_PACRP_WP1_MASK	derivative.h	1579;"	d
AIPS_PACRP_WP1_SHIFT	derivative.h	1580;"	d
AIPS_PACRP_WP2_MASK	derivative.h	1573;"	d
AIPS_PACRP_WP2_SHIFT	derivative.h	1574;"	d
AIPS_PACRP_WP3_MASK	derivative.h	1567;"	d
AIPS_PACRP_WP3_SHIFT	derivative.h	1568;"	d
AIPS_PACRP_WP4_MASK	derivative.h	1561;"	d
AIPS_PACRP_WP4_SHIFT	derivative.h	1562;"	d
AIPS_PACRP_WP5_MASK	derivative.h	1555;"	d
AIPS_PACRP_WP5_SHIFT	derivative.h	1556;"	d
AIPS_PACRP_WP6_MASK	derivative.h	1549;"	d
AIPS_PACRP_WP6_SHIFT	derivative.h	1550;"	d
AIPS_PACRP_WP7_MASK	derivative.h	1543;"	d
AIPS_PACRP_WP7_SHIFT	derivative.h	1544;"	d
AIRCR	derivative.h	/^  uint32_t AIRCR;                                  \/**< Application Interrupt and Reset Control Register, offset: 0xD0C *\/$/;"	m	struct:SCB_MemMap
ALIGN_SIZE	mymalloc.c	12;"	d	file:
ASYNCLISTADDR	derivative.h	/^    uint32_t ASYNCLISTADDR;                          \/**< Current Asynchronous List Address Register, offset: 0x158 *\/$/;"	m	union:USBHS_MemMap::__anon34
ATCOR	derivative.h	/^  uint32_t ATCOR;                                  \/**< Timer Correction Register, offset: 0x410 *\/$/;"	m	struct:ENET_MemMap
ATCR	derivative.h	/^  uint32_t ATCR;                                   \/**< Timer Control Register, offset: 0x400 *\/$/;"	m	struct:ENET_MemMap
ATCVH	derivative.h	/^  uint8_t ATCVH;                                   \/**< MCG Auto Trim Compare Value High Register, offset: 0xA *\/$/;"	m	struct:MCG_MemMap
ATCVL	derivative.h	/^  uint8_t ATCVL;                                   \/**< MCG Auto Trim Compare Value Low Register, offset: 0xB *\/$/;"	m	struct:MCG_MemMap
ATINC	derivative.h	/^  uint32_t ATINC;                                  \/**< Time-Stamping Clock Period Register, offset: 0x414 *\/$/;"	m	struct:ENET_MemMap
ATOFF	derivative.h	/^  uint32_t ATOFF;                                  \/**< Timer Offset Register, offset: 0x408 *\/$/;"	m	struct:ENET_MemMap
ATPER	derivative.h	/^  uint32_t ATPER;                                  \/**< Timer Period Register, offset: 0x40C *\/$/;"	m	struct:ENET_MemMap
ATSTMP	derivative.h	/^  uint32_t ATSTMP;                                 \/**< Timestamp of Last Transmitted Frame, offset: 0x418 *\/$/;"	m	struct:ENET_MemMap
ATTR	derivative.h	/^    uint16_t ATTR;                                   \/**< TCD Transfer Attributes, array offset: 0x1006, array step: 0x20 *\/$/;"	m	struct:DMA_MemMap::__anon15
ATVR	derivative.h	/^  uint32_t ATVR;                                   \/**< Timer Value Register, offset: 0x404 *\/$/;"	m	struct:ENET_MemMap
AUTHSTATUS	derivative.h	/^  uint32_t AUTHSTATUS;                             \/**< Authentication Status Register, offset: 0xFB8 *\/$/;"	m	struct:ETB_MemMap
AUTHSTATUS	derivative.h	/^  uint32_t AUTHSTATUS;                             \/**< Authentication Status Register, offset: 0xFB8 *\/$/;"	m	struct:ETF_MemMap
AUTHSTATUS	derivative.h	/^  uint32_t AUTHSTATUS;                             \/**< Authentication Status Register, offset: 0xFB8 *\/$/;"	m	struct:ETM_MemMap
AXBS_BASE_PTR	derivative.h	1810;"	d
AXBS_BASE_PTRS	derivative.h	1812;"	d
AXBS_CRS	derivative.h	1853;"	d
AXBS_CRS0	derivative.h	1827;"	d
AXBS_CRS1	derivative.h	1829;"	d
AXBS_CRS2	derivative.h	1831;"	d
AXBS_CRS3	derivative.h	1833;"	d
AXBS_CRS4	derivative.h	1835;"	d
AXBS_CRS5	derivative.h	1837;"	d
AXBS_CRS6	derivative.h	1839;"	d
AXBS_CRS7	derivative.h	1841;"	d
AXBS_CRS_ARB	derivative.h	1765;"	d
AXBS_CRS_ARB_MASK	derivative.h	1763;"	d
AXBS_CRS_ARB_SHIFT	derivative.h	1764;"	d
AXBS_CRS_HLP_MASK	derivative.h	1766;"	d
AXBS_CRS_HLP_SHIFT	derivative.h	1767;"	d
AXBS_CRS_PARK	derivative.h	1759;"	d
AXBS_CRS_PARK_MASK	derivative.h	1757;"	d
AXBS_CRS_PARK_SHIFT	derivative.h	1758;"	d
AXBS_CRS_PCTL	derivative.h	1762;"	d
AXBS_CRS_PCTL_MASK	derivative.h	1760;"	d
AXBS_CRS_PCTL_SHIFT	derivative.h	1761;"	d
AXBS_CRS_REG	derivative.h	1707;"	d
AXBS_CRS_RO_MASK	derivative.h	1768;"	d
AXBS_CRS_RO_SHIFT	derivative.h	1769;"	d
AXBS_MGPCR0	derivative.h	1842;"	d
AXBS_MGPCR0_AULB	derivative.h	1773;"	d
AXBS_MGPCR0_AULB_MASK	derivative.h	1771;"	d
AXBS_MGPCR0_AULB_SHIFT	derivative.h	1772;"	d
AXBS_MGPCR0_REG	derivative.h	1708;"	d
AXBS_MGPCR1	derivative.h	1843;"	d
AXBS_MGPCR1_AULB	derivative.h	1777;"	d
AXBS_MGPCR1_AULB_MASK	derivative.h	1775;"	d
AXBS_MGPCR1_AULB_SHIFT	derivative.h	1776;"	d
AXBS_MGPCR1_REG	derivative.h	1709;"	d
AXBS_MGPCR2	derivative.h	1844;"	d
AXBS_MGPCR2_AULB	derivative.h	1781;"	d
AXBS_MGPCR2_AULB_MASK	derivative.h	1779;"	d
AXBS_MGPCR2_AULB_SHIFT	derivative.h	1780;"	d
AXBS_MGPCR2_REG	derivative.h	1710;"	d
AXBS_MGPCR3	derivative.h	1845;"	d
AXBS_MGPCR3_AULB	derivative.h	1785;"	d
AXBS_MGPCR3_AULB_MASK	derivative.h	1783;"	d
AXBS_MGPCR3_AULB_SHIFT	derivative.h	1784;"	d
AXBS_MGPCR3_REG	derivative.h	1711;"	d
AXBS_MGPCR4	derivative.h	1846;"	d
AXBS_MGPCR4_AULB	derivative.h	1789;"	d
AXBS_MGPCR4_AULB_MASK	derivative.h	1787;"	d
AXBS_MGPCR4_AULB_SHIFT	derivative.h	1788;"	d
AXBS_MGPCR4_REG	derivative.h	1712;"	d
AXBS_MGPCR5	derivative.h	1847;"	d
AXBS_MGPCR5_AULB	derivative.h	1793;"	d
AXBS_MGPCR5_AULB_MASK	derivative.h	1791;"	d
AXBS_MGPCR5_AULB_SHIFT	derivative.h	1792;"	d
AXBS_MGPCR5_REG	derivative.h	1713;"	d
AXBS_MGPCR6	derivative.h	1848;"	d
AXBS_MGPCR6_AULB	derivative.h	1797;"	d
AXBS_MGPCR6_AULB_MASK	derivative.h	1795;"	d
AXBS_MGPCR6_AULB_SHIFT	derivative.h	1796;"	d
AXBS_MGPCR6_REG	derivative.h	1714;"	d
AXBS_MGPCR7	derivative.h	1849;"	d
AXBS_MGPCR7_AULB	derivative.h	1801;"	d
AXBS_MGPCR7_AULB_MASK	derivative.h	1799;"	d
AXBS_MGPCR7_AULB_SHIFT	derivative.h	1800;"	d
AXBS_MGPCR7_REG	derivative.h	1715;"	d
AXBS_MemMap	derivative.h	/^typedef struct AXBS_MemMap {$/;"	s
AXBS_MemMapPtr	derivative.h	/^} volatile *AXBS_MemMapPtr;$/;"	t
AXBS_PRS	derivative.h	1852;"	d
AXBS_PRS0	derivative.h	1826;"	d
AXBS_PRS1	derivative.h	1828;"	d
AXBS_PRS2	derivative.h	1830;"	d
AXBS_PRS3	derivative.h	1832;"	d
AXBS_PRS4	derivative.h	1834;"	d
AXBS_PRS5	derivative.h	1836;"	d
AXBS_PRS6	derivative.h	1838;"	d
AXBS_PRS7	derivative.h	1840;"	d
AXBS_PRS_M0	derivative.h	1734;"	d
AXBS_PRS_M0_MASK	derivative.h	1732;"	d
AXBS_PRS_M0_SHIFT	derivative.h	1733;"	d
AXBS_PRS_M1	derivative.h	1737;"	d
AXBS_PRS_M1_MASK	derivative.h	1735;"	d
AXBS_PRS_M1_SHIFT	derivative.h	1736;"	d
AXBS_PRS_M2	derivative.h	1740;"	d
AXBS_PRS_M2_MASK	derivative.h	1738;"	d
AXBS_PRS_M2_SHIFT	derivative.h	1739;"	d
AXBS_PRS_M3	derivative.h	1743;"	d
AXBS_PRS_M3_MASK	derivative.h	1741;"	d
AXBS_PRS_M3_SHIFT	derivative.h	1742;"	d
AXBS_PRS_M4	derivative.h	1746;"	d
AXBS_PRS_M4_MASK	derivative.h	1744;"	d
AXBS_PRS_M4_SHIFT	derivative.h	1745;"	d
AXBS_PRS_M5	derivative.h	1749;"	d
AXBS_PRS_M5_MASK	derivative.h	1747;"	d
AXBS_PRS_M5_SHIFT	derivative.h	1748;"	d
AXBS_PRS_M6	derivative.h	1752;"	d
AXBS_PRS_M6_MASK	derivative.h	1750;"	d
AXBS_PRS_M6_SHIFT	derivative.h	1751;"	d
AXBS_PRS_M7	derivative.h	1755;"	d
AXBS_PRS_M7_MASK	derivative.h	1753;"	d
AXBS_PRS_M7_SHIFT	derivative.h	1754;"	d
AXBS_PRS_REG	derivative.h	1706;"	d
B1T	derivative.h	/^  uint8_t B1T;                                     \/**< UART CEA709.1-B Beta1 Timer, offset: 0x24 *\/$/;"	m	struct:UART_MemMap
BACKKEY0	derivative.h	/^  uint8_t BACKKEY0;                                \/**< Backdoor Comparison Key 0., offset: 0x3 *\/$/;"	m	struct:NV_MemMap
BACKKEY1	derivative.h	/^  uint8_t BACKKEY1;                                \/**< Backdoor Comparison Key 1., offset: 0x2 *\/$/;"	m	struct:NV_MemMap
BACKKEY2	derivative.h	/^  uint8_t BACKKEY2;                                \/**< Backdoor Comparison Key 2., offset: 0x1 *\/$/;"	m	struct:NV_MemMap
BACKKEY3	derivative.h	/^  uint8_t BACKKEY3;                                \/**< Backdoor Comparison Key 3., offset: 0x0 *\/$/;"	m	struct:NV_MemMap
BACKKEY4	derivative.h	/^  uint8_t BACKKEY4;                                \/**< Backdoor Comparison Key 4., offset: 0x7 *\/$/;"	m	struct:NV_MemMap
BACKKEY5	derivative.h	/^  uint8_t BACKKEY5;                                \/**< Backdoor Comparison Key 5., offset: 0x6 *\/$/;"	m	struct:NV_MemMap
BACKKEY6	derivative.h	/^  uint8_t BACKKEY6;                                \/**< Backdoor Comparison Key 6., offset: 0x5 *\/$/;"	m	struct:NV_MemMap
BACKKEY7	derivative.h	/^  uint8_t BACKKEY7;                                \/**< Backdoor Comparison Key 7., offset: 0x4 *\/$/;"	m	struct:NV_MemMap
BDH	derivative.h	/^  uint8_t BDH;                                     \/**< UART Baud Rate Registers: High, offset: 0x0 *\/$/;"	m	struct:UART_MemMap
BDL	derivative.h	/^  uint8_t BDL;                                     \/**< UART Baud Rate Registers: Low, offset: 0x1 *\/$/;"	m	struct:UART_MemMap
BDTPAGE1	derivative.h	/^  uint8_t BDTPAGE1;                                \/**< BDT Page Register 1, offset: 0x9C *\/$/;"	m	struct:USB_MemMap
BDTPAGE2	derivative.h	/^  uint8_t BDTPAGE2;                                \/**< BDT Page Register 2, offset: 0xB0 *\/$/;"	m	struct:USB_MemMap
BDTPAGE3	derivative.h	/^  uint8_t BDTPAGE3;                                \/**< BDT Page Register 3, offset: 0xB4 *\/$/;"	m	struct:USB_MemMap
BFAR	derivative.h	/^  uint32_t BFAR;                                   \/**< BusFault Address Register, offset: 0xD38 *\/$/;"	m	struct:SCB_MemMap
BITBAND_REG	derivative.h	100;"	d
BITER_ELINKNO	derivative.h	/^      uint16_t BITER_ELINKNO;                          \/**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x101E, array step: 0x20 *\/$/;"	m	union:DMA_MemMap::__anon15::__anon18
BITER_ELINKYES	derivative.h	/^      uint16_t BITER_ELINKYES;                         \/**< TCD Beginning Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x101E, array step: 0x20 *\/$/;"	m	union:DMA_MemMap::__anon15::__anon18
BLKATTR	derivative.h	/^  uint32_t BLKATTR;                                \/**< Block Attributes Register, offset: 0x4 *\/$/;"	m	struct:SDHC_MemMap
BURSTSIZE	derivative.h	/^  uint32_t BURSTSIZE;                              \/**< Master Interface Data Burst Size Register, offset: 0x160 *\/$/;"	m	struct:USBHS_MemMap
C0	derivative.h	/^  uint8_t C0;                                      \/**< DAC Control Register, offset: 0x21 *\/$/;"	m	struct:DAC_MemMap
C1	derivative.h	/^    uint32_t C1;                                     \/**< Channel n Control Register 1, array offset: 0x10, array step: 0x28 *\/$/;"	m	struct:PDB_MemMap::__anon26
C1	derivative.h	/^  uint8_t C1;                                      \/**< DAC Control Register 1, offset: 0x22 *\/$/;"	m	struct:DAC_MemMap
C1	derivative.h	/^  uint8_t C1;                                      \/**< I2C Control Register 1, offset: 0x2 *\/$/;"	m	struct:I2C_MemMap
C1	derivative.h	/^  uint8_t C1;                                      \/**< MCG Control 1 Register, offset: 0x0 *\/$/;"	m	struct:MCG_MemMap
C1	derivative.h	/^  uint8_t C1;                                      \/**< UART Control Register 1, offset: 0x2 *\/$/;"	m	struct:UART_MemMap
C10	derivative.h	/^  uint8_t C10;                                     \/**< MCG Control 10 Register, offset: 0xF *\/$/;"	m	struct:MCG_MemMap
C11	derivative.h	/^  uint8_t C11;                                     \/**< MCG Control 11 Register, offset: 0x10 *\/$/;"	m	struct:MCG_MemMap
C12	derivative.h	/^  uint8_t C12;                                     \/**< MCG Control 12 Register, offset: 0x11 *\/$/;"	m	struct:MCG_MemMap
C2	derivative.h	/^  uint8_t C2;                                      \/**< DAC Control Register 2, offset: 0x23 *\/$/;"	m	struct:DAC_MemMap
C2	derivative.h	/^  uint8_t C2;                                      \/**< I2C Control Register 2, offset: 0x5 *\/$/;"	m	struct:I2C_MemMap
C2	derivative.h	/^  uint8_t C2;                                      \/**< MCG Control 2 Register, offset: 0x1 *\/$/;"	m	struct:MCG_MemMap
C2	derivative.h	/^  uint8_t C2;                                      \/**< UART Control Register 2, offset: 0x3 *\/$/;"	m	struct:UART_MemMap
C3	derivative.h	/^  uint8_t C3;                                      \/**< MCG Control 3 Register, offset: 0x2 *\/$/;"	m	struct:MCG_MemMap
C3	derivative.h	/^  uint8_t C3;                                      \/**< UART Control Register 3, offset: 0x6 *\/$/;"	m	struct:UART_MemMap
C4	derivative.h	/^  uint8_t C4;                                      \/**< MCG Control 4 Register, offset: 0x3 *\/$/;"	m	struct:MCG_MemMap
C4	derivative.h	/^  uint8_t C4;                                      \/**< UART Control Register 4, offset: 0xA *\/$/;"	m	struct:UART_MemMap
C5	derivative.h	/^  uint8_t C5;                                      \/**< MCG Control 5 Register, offset: 0x4 *\/$/;"	m	struct:MCG_MemMap
C5	derivative.h	/^  uint8_t C5;                                      \/**< UART Control Register 5, offset: 0xB *\/$/;"	m	struct:UART_MemMap
C6	derivative.h	/^  uint8_t C6;                                      \/**< MCG Control 6 Register, offset: 0x5 *\/$/;"	m	struct:MCG_MemMap
C6	derivative.h	/^  uint8_t C6;                                      \/**< UART CEA709.1-B Control Register 6, offset: 0x21 *\/$/;"	m	struct:UART_MemMap
C7	derivative.h	/^  uint8_t C7;                                      \/**< MCG Control 7 Register, offset: 0xC *\/$/;"	m	struct:MCG_MemMap
C7816	derivative.h	/^  uint8_t C7816;                                   \/**< UART 7816 Control Register, offset: 0x18 *\/$/;"	m	struct:UART_MemMap
C8	derivative.h	/^  uint8_t C8;                                      \/**< MCG Control 8 Register, offset: 0xD *\/$/;"	m	struct:MCG_MemMap
CALIB	derivative.h	/^  uint32_t CALIB;                                  \/**< SysTick Calibration Value Register, offset: 0xC *\/$/;"	m	struct:SysTick_MemMap
CAN0_BASE_PTR	derivative.h	2219;"	d
CAN0_CRCR	derivative.h	2251;"	d
CAN0_CS	derivative.h	2434;"	d
CAN0_CS0	derivative.h	2254;"	d
CAN0_CS1	derivative.h	2258;"	d
CAN0_CS10	derivative.h	2294;"	d
CAN0_CS11	derivative.h	2298;"	d
CAN0_CS12	derivative.h	2302;"	d
CAN0_CS13	derivative.h	2306;"	d
CAN0_CS14	derivative.h	2310;"	d
CAN0_CS15	derivative.h	2314;"	d
CAN0_CS2	derivative.h	2262;"	d
CAN0_CS3	derivative.h	2266;"	d
CAN0_CS4	derivative.h	2270;"	d
CAN0_CS5	derivative.h	2274;"	d
CAN0_CS6	derivative.h	2278;"	d
CAN0_CS7	derivative.h	2282;"	d
CAN0_CS8	derivative.h	2286;"	d
CAN0_CS9	derivative.h	2290;"	d
CAN0_CTRL1	derivative.h	2238;"	d
CAN0_CTRL2	derivative.h	2249;"	d
CAN0_ECR	derivative.h	2243;"	d
CAN0_ESR1	derivative.h	2244;"	d
CAN0_ESR2	derivative.h	2250;"	d
CAN0_ID	derivative.h	2436;"	d
CAN0_ID0	derivative.h	2255;"	d
CAN0_ID1	derivative.h	2259;"	d
CAN0_ID10	derivative.h	2295;"	d
CAN0_ID11	derivative.h	2299;"	d
CAN0_ID12	derivative.h	2303;"	d
CAN0_ID13	derivative.h	2307;"	d
CAN0_ID14	derivative.h	2311;"	d
CAN0_ID15	derivative.h	2315;"	d
CAN0_ID2	derivative.h	2263;"	d
CAN0_ID3	derivative.h	2267;"	d
CAN0_ID4	derivative.h	2271;"	d
CAN0_ID5	derivative.h	2275;"	d
CAN0_ID6	derivative.h	2279;"	d
CAN0_ID7	derivative.h	2283;"	d
CAN0_ID8	derivative.h	2287;"	d
CAN0_ID9	derivative.h	2291;"	d
CAN0_IFLAG1	derivative.h	2248;"	d
CAN0_IFLAG2	derivative.h	2247;"	d
CAN0_IMASK1	derivative.h	2246;"	d
CAN0_IMASK2	derivative.h	2245;"	d
CAN0_MCR	derivative.h	2237;"	d
CAN0_RX14MASK	derivative.h	2241;"	d
CAN0_RX15MASK	derivative.h	2242;"	d
CAN0_RXFGMASK	derivative.h	2252;"	d
CAN0_RXFIR	derivative.h	2253;"	d
CAN0_RXIMR	derivative.h	2442;"	d
CAN0_RXIMR0	derivative.h	2318;"	d
CAN0_RXIMR1	derivative.h	2319;"	d
CAN0_RXIMR10	derivative.h	2328;"	d
CAN0_RXIMR11	derivative.h	2329;"	d
CAN0_RXIMR12	derivative.h	2330;"	d
CAN0_RXIMR13	derivative.h	2331;"	d
CAN0_RXIMR14	derivative.h	2332;"	d
CAN0_RXIMR15	derivative.h	2333;"	d
CAN0_RXIMR2	derivative.h	2320;"	d
CAN0_RXIMR3	derivative.h	2321;"	d
CAN0_RXIMR4	derivative.h	2322;"	d
CAN0_RXIMR5	derivative.h	2323;"	d
CAN0_RXIMR6	derivative.h	2324;"	d
CAN0_RXIMR7	derivative.h	2325;"	d
CAN0_RXIMR8	derivative.h	2326;"	d
CAN0_RXIMR9	derivative.h	2327;"	d
CAN0_RXMGMASK	derivative.h	2240;"	d
CAN0_TIMER	derivative.h	2239;"	d
CAN0_WORD0	derivative.h	2438;"	d
CAN0_WORD00	derivative.h	2256;"	d
CAN0_WORD01	derivative.h	2260;"	d
CAN0_WORD010	derivative.h	2296;"	d
CAN0_WORD011	derivative.h	2300;"	d
CAN0_WORD012	derivative.h	2304;"	d
CAN0_WORD013	derivative.h	2308;"	d
CAN0_WORD014	derivative.h	2312;"	d
CAN0_WORD015	derivative.h	2316;"	d
CAN0_WORD02	derivative.h	2264;"	d
CAN0_WORD03	derivative.h	2268;"	d
CAN0_WORD04	derivative.h	2272;"	d
CAN0_WORD05	derivative.h	2276;"	d
CAN0_WORD06	derivative.h	2280;"	d
CAN0_WORD07	derivative.h	2284;"	d
CAN0_WORD08	derivative.h	2288;"	d
CAN0_WORD09	derivative.h	2292;"	d
CAN0_WORD1	derivative.h	2440;"	d
CAN0_WORD10	derivative.h	2257;"	d
CAN0_WORD11	derivative.h	2261;"	d
CAN0_WORD110	derivative.h	2297;"	d
CAN0_WORD111	derivative.h	2301;"	d
CAN0_WORD112	derivative.h	2305;"	d
CAN0_WORD113	derivative.h	2309;"	d
CAN0_WORD114	derivative.h	2313;"	d
CAN0_WORD115	derivative.h	2317;"	d
CAN0_WORD12	derivative.h	2265;"	d
CAN0_WORD13	derivative.h	2269;"	d
CAN0_WORD14	derivative.h	2273;"	d
CAN0_WORD15	derivative.h	2277;"	d
CAN0_WORD16	derivative.h	2281;"	d
CAN0_WORD17	derivative.h	2285;"	d
CAN0_WORD18	derivative.h	2289;"	d
CAN0_WORD19	derivative.h	2293;"	d
CAN1_BASE_PTR	derivative.h	2221;"	d
CAN1_CRCR	derivative.h	2349;"	d
CAN1_CS	derivative.h	2435;"	d
CAN1_CS0	derivative.h	2352;"	d
CAN1_CS1	derivative.h	2356;"	d
CAN1_CS10	derivative.h	2392;"	d
CAN1_CS11	derivative.h	2396;"	d
CAN1_CS12	derivative.h	2400;"	d
CAN1_CS13	derivative.h	2404;"	d
CAN1_CS14	derivative.h	2408;"	d
CAN1_CS15	derivative.h	2412;"	d
CAN1_CS2	derivative.h	2360;"	d
CAN1_CS3	derivative.h	2364;"	d
CAN1_CS4	derivative.h	2368;"	d
CAN1_CS5	derivative.h	2372;"	d
CAN1_CS6	derivative.h	2376;"	d
CAN1_CS7	derivative.h	2380;"	d
CAN1_CS8	derivative.h	2384;"	d
CAN1_CS9	derivative.h	2388;"	d
CAN1_CTRL1	derivative.h	2336;"	d
CAN1_CTRL2	derivative.h	2347;"	d
CAN1_ECR	derivative.h	2341;"	d
CAN1_ESR1	derivative.h	2342;"	d
CAN1_ESR2	derivative.h	2348;"	d
CAN1_ID	derivative.h	2437;"	d
CAN1_ID0	derivative.h	2353;"	d
CAN1_ID1	derivative.h	2357;"	d
CAN1_ID10	derivative.h	2393;"	d
CAN1_ID11	derivative.h	2397;"	d
CAN1_ID12	derivative.h	2401;"	d
CAN1_ID13	derivative.h	2405;"	d
CAN1_ID14	derivative.h	2409;"	d
CAN1_ID15	derivative.h	2413;"	d
CAN1_ID2	derivative.h	2361;"	d
CAN1_ID3	derivative.h	2365;"	d
CAN1_ID4	derivative.h	2369;"	d
CAN1_ID5	derivative.h	2373;"	d
CAN1_ID6	derivative.h	2377;"	d
CAN1_ID7	derivative.h	2381;"	d
CAN1_ID8	derivative.h	2385;"	d
CAN1_ID9	derivative.h	2389;"	d
CAN1_IFLAG1	derivative.h	2346;"	d
CAN1_IFLAG2	derivative.h	2345;"	d
CAN1_IMASK1	derivative.h	2344;"	d
CAN1_IMASK2	derivative.h	2343;"	d
CAN1_MCR	derivative.h	2335;"	d
CAN1_RX14MASK	derivative.h	2339;"	d
CAN1_RX15MASK	derivative.h	2340;"	d
CAN1_RXFGMASK	derivative.h	2350;"	d
CAN1_RXFIR	derivative.h	2351;"	d
CAN1_RXIMR	derivative.h	2443;"	d
CAN1_RXIMR0	derivative.h	2416;"	d
CAN1_RXIMR1	derivative.h	2417;"	d
CAN1_RXIMR10	derivative.h	2426;"	d
CAN1_RXIMR11	derivative.h	2427;"	d
CAN1_RXIMR12	derivative.h	2428;"	d
CAN1_RXIMR13	derivative.h	2429;"	d
CAN1_RXIMR14	derivative.h	2430;"	d
CAN1_RXIMR15	derivative.h	2431;"	d
CAN1_RXIMR2	derivative.h	2418;"	d
CAN1_RXIMR3	derivative.h	2419;"	d
CAN1_RXIMR4	derivative.h	2420;"	d
CAN1_RXIMR5	derivative.h	2421;"	d
CAN1_RXIMR6	derivative.h	2422;"	d
CAN1_RXIMR7	derivative.h	2423;"	d
CAN1_RXIMR8	derivative.h	2424;"	d
CAN1_RXIMR9	derivative.h	2425;"	d
CAN1_RXMGMASK	derivative.h	2338;"	d
CAN1_TIMER	derivative.h	2337;"	d
CAN1_WORD0	derivative.h	2439;"	d
CAN1_WORD00	derivative.h	2354;"	d
CAN1_WORD01	derivative.h	2358;"	d
CAN1_WORD010	derivative.h	2394;"	d
CAN1_WORD011	derivative.h	2398;"	d
CAN1_WORD012	derivative.h	2402;"	d
CAN1_WORD013	derivative.h	2406;"	d
CAN1_WORD014	derivative.h	2410;"	d
CAN1_WORD015	derivative.h	2414;"	d
CAN1_WORD02	derivative.h	2362;"	d
CAN1_WORD03	derivative.h	2366;"	d
CAN1_WORD04	derivative.h	2370;"	d
CAN1_WORD05	derivative.h	2374;"	d
CAN1_WORD06	derivative.h	2378;"	d
CAN1_WORD07	derivative.h	2382;"	d
CAN1_WORD08	derivative.h	2386;"	d
CAN1_WORD09	derivative.h	2390;"	d
CAN1_WORD1	derivative.h	2441;"	d
CAN1_WORD10	derivative.h	2355;"	d
CAN1_WORD11	derivative.h	2359;"	d
CAN1_WORD110	derivative.h	2395;"	d
CAN1_WORD111	derivative.h	2399;"	d
CAN1_WORD112	derivative.h	2403;"	d
CAN1_WORD113	derivative.h	2407;"	d
CAN1_WORD114	derivative.h	2411;"	d
CAN1_WORD115	derivative.h	2415;"	d
CAN1_WORD12	derivative.h	2363;"	d
CAN1_WORD13	derivative.h	2367;"	d
CAN1_WORD14	derivative.h	2371;"	d
CAN1_WORD15	derivative.h	2375;"	d
CAN1_WORD16	derivative.h	2379;"	d
CAN1_WORD17	derivative.h	2383;"	d
CAN1_WORD18	derivative.h	2387;"	d
CAN1_WORD19	derivative.h	2391;"	d
CAN_BASE_PTRS	derivative.h	2223;"	d
CAN_CRCR_MBCRC	derivative.h	2146;"	d
CAN_CRCR_MBCRC_MASK	derivative.h	2144;"	d
CAN_CRCR_MBCRC_SHIFT	derivative.h	2145;"	d
CAN_CRCR_REG	derivative.h	1931;"	d
CAN_CRCR_TXCRC	derivative.h	2143;"	d
CAN_CRCR_TXCRC_MASK	derivative.h	2141;"	d
CAN_CRCR_TXCRC_SHIFT	derivative.h	2142;"	d
CAN_CS_CODE	derivative.h	2170;"	d
CAN_CS_CODE_MASK	derivative.h	2168;"	d
CAN_CS_CODE_SHIFT	derivative.h	2169;"	d
CAN_CS_DLC	derivative.h	2161;"	d
CAN_CS_DLC_MASK	derivative.h	2159;"	d
CAN_CS_DLC_SHIFT	derivative.h	2160;"	d
CAN_CS_IDE_MASK	derivative.h	2164;"	d
CAN_CS_IDE_SHIFT	derivative.h	2165;"	d
CAN_CS_REG	derivative.h	1934;"	d
CAN_CS_RTR_MASK	derivative.h	2162;"	d
CAN_CS_RTR_SHIFT	derivative.h	2163;"	d
CAN_CS_SRR_MASK	derivative.h	2166;"	d
CAN_CS_SRR_SHIFT	derivative.h	2167;"	d
CAN_CS_TIME_STAMP	derivative.h	2158;"	d
CAN_CS_TIME_STAMP_MASK	derivative.h	2156;"	d
CAN_CS_TIME_STAMP_SHIFT	derivative.h	2157;"	d
CAN_CTRL1_BOFFMSK_MASK	derivative.h	2017;"	d
CAN_CTRL1_BOFFMSK_SHIFT	derivative.h	2018;"	d
CAN_CTRL1_BOFFREC_MASK	derivative.h	2003;"	d
CAN_CTRL1_BOFFREC_SHIFT	derivative.h	2004;"	d
CAN_CTRL1_CLKSRC_MASK	derivative.h	2013;"	d
CAN_CTRL1_CLKSRC_SHIFT	derivative.h	2014;"	d
CAN_CTRL1_ERRMSK_MASK	derivative.h	2015;"	d
CAN_CTRL1_ERRMSK_SHIFT	derivative.h	2016;"	d
CAN_CTRL1_LBUF_MASK	derivative.h	1999;"	d
CAN_CTRL1_LBUF_SHIFT	derivative.h	2000;"	d
CAN_CTRL1_LOM_MASK	derivative.h	1997;"	d
CAN_CTRL1_LOM_SHIFT	derivative.h	1998;"	d
CAN_CTRL1_LPB_MASK	derivative.h	2011;"	d
CAN_CTRL1_LPB_SHIFT	derivative.h	2012;"	d
CAN_CTRL1_PRESDIV	derivative.h	2030;"	d
CAN_CTRL1_PRESDIV_MASK	derivative.h	2028;"	d
CAN_CTRL1_PRESDIV_SHIFT	derivative.h	2029;"	d
CAN_CTRL1_PROPSEG	derivative.h	1996;"	d
CAN_CTRL1_PROPSEG_MASK	derivative.h	1994;"	d
CAN_CTRL1_PROPSEG_SHIFT	derivative.h	1995;"	d
CAN_CTRL1_PSEG1	derivative.h	2024;"	d
CAN_CTRL1_PSEG1_MASK	derivative.h	2022;"	d
CAN_CTRL1_PSEG1_SHIFT	derivative.h	2023;"	d
CAN_CTRL1_PSEG2	derivative.h	2021;"	d
CAN_CTRL1_PSEG2_MASK	derivative.h	2019;"	d
CAN_CTRL1_PSEG2_SHIFT	derivative.h	2020;"	d
CAN_CTRL1_REG	derivative.h	1918;"	d
CAN_CTRL1_RJW	derivative.h	2027;"	d
CAN_CTRL1_RJW_MASK	derivative.h	2025;"	d
CAN_CTRL1_RJW_SHIFT	derivative.h	2026;"	d
CAN_CTRL1_RWRNMSK_MASK	derivative.h	2007;"	d
CAN_CTRL1_RWRNMSK_SHIFT	derivative.h	2008;"	d
CAN_CTRL1_SMP_MASK	derivative.h	2005;"	d
CAN_CTRL1_SMP_SHIFT	derivative.h	2006;"	d
CAN_CTRL1_TSYN_MASK	derivative.h	2001;"	d
CAN_CTRL1_TSYN_SHIFT	derivative.h	2002;"	d
CAN_CTRL1_TWRNMSK_MASK	derivative.h	2009;"	d
CAN_CTRL1_TWRNMSK_SHIFT	derivative.h	2010;"	d
CAN_CTRL2_EACEN_MASK	derivative.h	2118;"	d
CAN_CTRL2_EACEN_SHIFT	derivative.h	2119;"	d
CAN_CTRL2_MRP_MASK	derivative.h	2122;"	d
CAN_CTRL2_MRP_SHIFT	derivative.h	2123;"	d
CAN_CTRL2_REG	derivative.h	1929;"	d
CAN_CTRL2_RFFN	derivative.h	2129;"	d
CAN_CTRL2_RFFN_MASK	derivative.h	2127;"	d
CAN_CTRL2_RFFN_SHIFT	derivative.h	2128;"	d
CAN_CTRL2_RRS_MASK	derivative.h	2120;"	d
CAN_CTRL2_RRS_SHIFT	derivative.h	2121;"	d
CAN_CTRL2_TASD	derivative.h	2126;"	d
CAN_CTRL2_TASD_MASK	derivative.h	2124;"	d
CAN_CTRL2_TASD_SHIFT	derivative.h	2125;"	d
CAN_CTRL2_WRMFRZ_MASK	derivative.h	2130;"	d
CAN_CTRL2_WRMFRZ_SHIFT	derivative.h	2131;"	d
CAN_ECR_REG	derivative.h	1923;"	d
CAN_ECR_RXERRCNT	derivative.h	2053;"	d
CAN_ECR_RXERRCNT_MASK	derivative.h	2051;"	d
CAN_ECR_RXERRCNT_SHIFT	derivative.h	2052;"	d
CAN_ECR_TXERRCNT	derivative.h	2050;"	d
CAN_ECR_TXERRCNT_MASK	derivative.h	2048;"	d
CAN_ECR_TXERRCNT_SHIFT	derivative.h	2049;"	d
CAN_ESR1_ACKERR_MASK	derivative.h	2080;"	d
CAN_ESR1_ACKERR_SHIFT	derivative.h	2081;"	d
CAN_ESR1_BIT0ERR_MASK	derivative.h	2082;"	d
CAN_ESR1_BIT0ERR_SHIFT	derivative.h	2083;"	d
CAN_ESR1_BIT1ERR_MASK	derivative.h	2084;"	d
CAN_ESR1_BIT1ERR_SHIFT	derivative.h	2085;"	d
CAN_ESR1_BOFFINT_MASK	derivative.h	2059;"	d
CAN_ESR1_BOFFINT_SHIFT	derivative.h	2060;"	d
CAN_ESR1_CRCERR_MASK	derivative.h	2078;"	d
CAN_ESR1_CRCERR_SHIFT	derivative.h	2079;"	d
CAN_ESR1_ERRINT_MASK	derivative.h	2057;"	d
CAN_ESR1_ERRINT_SHIFT	derivative.h	2058;"	d
CAN_ESR1_FLTCONF	derivative.h	2065;"	d
CAN_ESR1_FLTCONF_MASK	derivative.h	2063;"	d
CAN_ESR1_FLTCONF_SHIFT	derivative.h	2064;"	d
CAN_ESR1_FRMERR_MASK	derivative.h	2076;"	d
CAN_ESR1_FRMERR_SHIFT	derivative.h	2077;"	d
CAN_ESR1_IDLE_MASK	derivative.h	2068;"	d
CAN_ESR1_IDLE_SHIFT	derivative.h	2069;"	d
CAN_ESR1_REG	derivative.h	1924;"	d
CAN_ESR1_RWRNINT_MASK	derivative.h	2086;"	d
CAN_ESR1_RWRNINT_SHIFT	derivative.h	2087;"	d
CAN_ESR1_RXWRN_MASK	derivative.h	2070;"	d
CAN_ESR1_RXWRN_SHIFT	derivative.h	2071;"	d
CAN_ESR1_RX_MASK	derivative.h	2061;"	d
CAN_ESR1_RX_SHIFT	derivative.h	2062;"	d
CAN_ESR1_STFERR_MASK	derivative.h	2074;"	d
CAN_ESR1_STFERR_SHIFT	derivative.h	2075;"	d
CAN_ESR1_SYNCH_MASK	derivative.h	2090;"	d
CAN_ESR1_SYNCH_SHIFT	derivative.h	2091;"	d
CAN_ESR1_TWRNINT_MASK	derivative.h	2088;"	d
CAN_ESR1_TWRNINT_SHIFT	derivative.h	2089;"	d
CAN_ESR1_TXWRN_MASK	derivative.h	2072;"	d
CAN_ESR1_TXWRN_SHIFT	derivative.h	2073;"	d
CAN_ESR1_TX_MASK	derivative.h	2066;"	d
CAN_ESR1_TX_SHIFT	derivative.h	2067;"	d
CAN_ESR1_WAKINT_MASK	derivative.h	2055;"	d
CAN_ESR1_WAKINT_SHIFT	derivative.h	2056;"	d
CAN_ESR2_IMB_MASK	derivative.h	2133;"	d
CAN_ESR2_IMB_SHIFT	derivative.h	2134;"	d
CAN_ESR2_LPTM	derivative.h	2139;"	d
CAN_ESR2_LPTM_MASK	derivative.h	2137;"	d
CAN_ESR2_LPTM_SHIFT	derivative.h	2138;"	d
CAN_ESR2_REG	derivative.h	1930;"	d
CAN_ESR2_VPS_MASK	derivative.h	2135;"	d
CAN_ESR2_VPS_SHIFT	derivative.h	2136;"	d
CAN_ID_EXT	derivative.h	2174;"	d
CAN_ID_EXT_MASK	derivative.h	2172;"	d
CAN_ID_EXT_SHIFT	derivative.h	2173;"	d
CAN_ID_PRIO	derivative.h	2180;"	d
CAN_ID_PRIO_MASK	derivative.h	2178;"	d
CAN_ID_PRIO_SHIFT	derivative.h	2179;"	d
CAN_ID_REG	derivative.h	1935;"	d
CAN_ID_STD	derivative.h	2177;"	d
CAN_ID_STD_MASK	derivative.h	2175;"	d
CAN_ID_STD_SHIFT	derivative.h	2176;"	d
CAN_IFLAG1_BUF31TO8I	derivative.h	2116;"	d
CAN_IFLAG1_BUF31TO8I_MASK	derivative.h	2114;"	d
CAN_IFLAG1_BUF31TO8I_SHIFT	derivative.h	2115;"	d
CAN_IFLAG1_BUF4TO0I	derivative.h	2107;"	d
CAN_IFLAG1_BUF4TO0I_MASK	derivative.h	2105;"	d
CAN_IFLAG1_BUF4TO0I_SHIFT	derivative.h	2106;"	d
CAN_IFLAG1_BUF5I_MASK	derivative.h	2108;"	d
CAN_IFLAG1_BUF5I_SHIFT	derivative.h	2109;"	d
CAN_IFLAG1_BUF6I_MASK	derivative.h	2110;"	d
CAN_IFLAG1_BUF6I_SHIFT	derivative.h	2111;"	d
CAN_IFLAG1_BUF7I_MASK	derivative.h	2112;"	d
CAN_IFLAG1_BUF7I_SHIFT	derivative.h	2113;"	d
CAN_IFLAG1_REG	derivative.h	1928;"	d
CAN_IFLAG2_BUFHI	derivative.h	2103;"	d
CAN_IFLAG2_BUFHI_MASK	derivative.h	2101;"	d
CAN_IFLAG2_BUFHI_SHIFT	derivative.h	2102;"	d
CAN_IFLAG2_REG	derivative.h	1927;"	d
CAN_IMASK1_BUFLM	derivative.h	2099;"	d
CAN_IMASK1_BUFLM_MASK	derivative.h	2097;"	d
CAN_IMASK1_BUFLM_SHIFT	derivative.h	2098;"	d
CAN_IMASK1_REG	derivative.h	1926;"	d
CAN_IMASK2_BUFHM	derivative.h	2095;"	d
CAN_IMASK2_BUFHM_MASK	derivative.h	2093;"	d
CAN_IMASK2_BUFHM_SHIFT	derivative.h	2094;"	d
CAN_IMASK2_REG	derivative.h	1925;"	d
CAN_MCR_AEN_MASK	derivative.h	1961;"	d
CAN_MCR_AEN_SHIFT	derivative.h	1962;"	d
CAN_MCR_FRZACK_MASK	derivative.h	1977;"	d
CAN_MCR_FRZACK_SHIFT	derivative.h	1978;"	d
CAN_MCR_FRZ_MASK	derivative.h	1989;"	d
CAN_MCR_FRZ_SHIFT	derivative.h	1990;"	d
CAN_MCR_HALT_MASK	derivative.h	1985;"	d
CAN_MCR_HALT_SHIFT	derivative.h	1986;"	d
CAN_MCR_IDAM	derivative.h	1960;"	d
CAN_MCR_IDAM_MASK	derivative.h	1958;"	d
CAN_MCR_IDAM_SHIFT	derivative.h	1959;"	d
CAN_MCR_IRMQ_MASK	derivative.h	1965;"	d
CAN_MCR_IRMQ_SHIFT	derivative.h	1966;"	d
CAN_MCR_LPMACK_MASK	derivative.h	1969;"	d
CAN_MCR_LPMACK_SHIFT	derivative.h	1970;"	d
CAN_MCR_LPRIOEN_MASK	derivative.h	1963;"	d
CAN_MCR_LPRIOEN_SHIFT	derivative.h	1964;"	d
CAN_MCR_MAXMB	derivative.h	1957;"	d
CAN_MCR_MAXMB_MASK	derivative.h	1955;"	d
CAN_MCR_MAXMB_SHIFT	derivative.h	1956;"	d
CAN_MCR_MDIS_MASK	derivative.h	1991;"	d
CAN_MCR_MDIS_SHIFT	derivative.h	1992;"	d
CAN_MCR_NOTRDY_MASK	derivative.h	1983;"	d
CAN_MCR_NOTRDY_SHIFT	derivative.h	1984;"	d
CAN_MCR_REG	derivative.h	1917;"	d
CAN_MCR_RFEN_MASK	derivative.h	1987;"	d
CAN_MCR_RFEN_SHIFT	derivative.h	1988;"	d
CAN_MCR_SLFWAK_MASK	derivative.h	1973;"	d
CAN_MCR_SLFWAK_SHIFT	derivative.h	1974;"	d
CAN_MCR_SOFTRST_MASK	derivative.h	1979;"	d
CAN_MCR_SOFTRST_SHIFT	derivative.h	1980;"	d
CAN_MCR_SRXDIS_MASK	derivative.h	1967;"	d
CAN_MCR_SRXDIS_SHIFT	derivative.h	1968;"	d
CAN_MCR_SUPV_MASK	derivative.h	1975;"	d
CAN_MCR_SUPV_SHIFT	derivative.h	1976;"	d
CAN_MCR_WAKMSK_MASK	derivative.h	1981;"	d
CAN_MCR_WAKMSK_SHIFT	derivative.h	1982;"	d
CAN_MCR_WRNEN_MASK	derivative.h	1971;"	d
CAN_MCR_WRNEN_SHIFT	derivative.h	1972;"	d
CAN_MemMap	derivative.h	/^typedef struct CAN_MemMap {$/;"	s
CAN_MemMapPtr	derivative.h	/^} volatile *CAN_MemMapPtr;$/;"	t
CAN_RX14MASK_REG	derivative.h	1921;"	d
CAN_RX14MASK_RX14M	derivative.h	2042;"	d
CAN_RX14MASK_RX14M_MASK	derivative.h	2040;"	d
CAN_RX14MASK_RX14M_SHIFT	derivative.h	2041;"	d
CAN_RX15MASK_REG	derivative.h	1922;"	d
CAN_RX15MASK_RX15M	derivative.h	2046;"	d
CAN_RX15MASK_RX15M_MASK	derivative.h	2044;"	d
CAN_RX15MASK_RX15M_SHIFT	derivative.h	2045;"	d
CAN_RXFGMASK_FGM	derivative.h	2150;"	d
CAN_RXFGMASK_FGM_MASK	derivative.h	2148;"	d
CAN_RXFGMASK_FGM_SHIFT	derivative.h	2149;"	d
CAN_RXFGMASK_REG	derivative.h	1932;"	d
CAN_RXFIR_IDHIT	derivative.h	2154;"	d
CAN_RXFIR_IDHIT_MASK	derivative.h	2152;"	d
CAN_RXFIR_IDHIT_SHIFT	derivative.h	2153;"	d
CAN_RXFIR_REG	derivative.h	1933;"	d
CAN_RXIMR_MI	derivative.h	2210;"	d
CAN_RXIMR_MI_MASK	derivative.h	2208;"	d
CAN_RXIMR_MI_SHIFT	derivative.h	2209;"	d
CAN_RXIMR_REG	derivative.h	1938;"	d
CAN_RXMGMASK_MG	derivative.h	2038;"	d
CAN_RXMGMASK_MG_MASK	derivative.h	2036;"	d
CAN_RXMGMASK_MG_SHIFT	derivative.h	2037;"	d
CAN_RXMGMASK_REG	derivative.h	1920;"	d
CAN_TIMER_REG	derivative.h	1919;"	d
CAN_TIMER_TIMER	derivative.h	2034;"	d
CAN_TIMER_TIMER_MASK	derivative.h	2032;"	d
CAN_TIMER_TIMER_SHIFT	derivative.h	2033;"	d
CAN_WORD0_DATA_BYTE_0	derivative.h	2193;"	d
CAN_WORD0_DATA_BYTE_0_MASK	derivative.h	2191;"	d
CAN_WORD0_DATA_BYTE_0_SHIFT	derivative.h	2192;"	d
CAN_WORD0_DATA_BYTE_1	derivative.h	2190;"	d
CAN_WORD0_DATA_BYTE_1_MASK	derivative.h	2188;"	d
CAN_WORD0_DATA_BYTE_1_SHIFT	derivative.h	2189;"	d
CAN_WORD0_DATA_BYTE_2	derivative.h	2187;"	d
CAN_WORD0_DATA_BYTE_2_MASK	derivative.h	2185;"	d
CAN_WORD0_DATA_BYTE_2_SHIFT	derivative.h	2186;"	d
CAN_WORD0_DATA_BYTE_3	derivative.h	2184;"	d
CAN_WORD0_DATA_BYTE_3_MASK	derivative.h	2182;"	d
CAN_WORD0_DATA_BYTE_3_SHIFT	derivative.h	2183;"	d
CAN_WORD0_REG	derivative.h	1936;"	d
CAN_WORD1_DATA_BYTE_4	derivative.h	2206;"	d
CAN_WORD1_DATA_BYTE_4_MASK	derivative.h	2204;"	d
CAN_WORD1_DATA_BYTE_4_SHIFT	derivative.h	2205;"	d
CAN_WORD1_DATA_BYTE_5	derivative.h	2203;"	d
CAN_WORD1_DATA_BYTE_5_MASK	derivative.h	2201;"	d
CAN_WORD1_DATA_BYTE_5_SHIFT	derivative.h	2202;"	d
CAN_WORD1_DATA_BYTE_6	derivative.h	2200;"	d
CAN_WORD1_DATA_BYTE_6_MASK	derivative.h	2198;"	d
CAN_WORD1_DATA_BYTE_6_SHIFT	derivative.h	2199;"	d
CAN_WORD1_DATA_BYTE_7	derivative.h	2197;"	d
CAN_WORD1_DATA_BYTE_7_MASK	derivative.h	2195;"	d
CAN_WORD1_DATA_BYTE_7_SHIFT	derivative.h	2196;"	d
CAN_WORD1_REG	derivative.h	1937;"	d
CAPACITIVEPAD	io.h	/^    CAPACITIVEPAD,$/;"	e	enum:__anon37
CAPACITIVEPAD1	io.h	/^    CAPACITIVEPAD1,$/;"	e	enum:__anon38
CAPACITIVEPAD2	io.h	/^    CAPACITIVEPAD2,$/;"	e	enum:__anon38
CAPACITIVEPAD3	io.h	/^    CAPACITIVEPAD3,$/;"	e	enum:__anon38
CAPACITIVEPAD4	io.h	/^    CAPACITIVEPAD4 $/;"	e	enum:__anon38
CAR	derivative.h	/^  uint32_t CAR;                                    \/**< Column address, offset: 0x3F08 *\/$/;"	m	struct:NFC_MemMap
CAU_ADR_CA	derivative.h	2749;"	d
CAU_ADR_CA0	derivative.h	2680;"	d
CAU_ADR_CA1	derivative.h	2681;"	d
CAU_ADR_CA2	derivative.h	2682;"	d
CAU_ADR_CA3	derivative.h	2683;"	d
CAU_ADR_CA4	derivative.h	2684;"	d
CAU_ADR_CA5	derivative.h	2685;"	d
CAU_ADR_CA6	derivative.h	2686;"	d
CAU_ADR_CA7	derivative.h	2687;"	d
CAU_ADR_CA8	derivative.h	2688;"	d
CAU_ADR_CAA	derivative.h	2679;"	d
CAU_ADR_CAA_REG	derivative.h	2520;"	d
CAU_ADR_CASR	derivative.h	2678;"	d
CAU_ADR_CASR_DPE_MASK	derivative.h	2571;"	d
CAU_ADR_CASR_DPE_SHIFT	derivative.h	2572;"	d
CAU_ADR_CASR_IC_MASK	derivative.h	2569;"	d
CAU_ADR_CASR_IC_SHIFT	derivative.h	2570;"	d
CAU_ADR_CASR_REG	derivative.h	2519;"	d
CAU_ADR_CASR_VER	derivative.h	2575;"	d
CAU_ADR_CASR_VER_MASK	derivative.h	2573;"	d
CAU_ADR_CASR_VER_SHIFT	derivative.h	2574;"	d
CAU_ADR_CA_REG	derivative.h	2521;"	d
CAU_AESC_CA	derivative.h	2753;"	d
CAU_AESC_CA0	derivative.h	2724;"	d
CAU_AESC_CA1	derivative.h	2725;"	d
CAU_AESC_CA2	derivative.h	2726;"	d
CAU_AESC_CA3	derivative.h	2727;"	d
CAU_AESC_CA4	derivative.h	2728;"	d
CAU_AESC_CA5	derivative.h	2729;"	d
CAU_AESC_CA6	derivative.h	2730;"	d
CAU_AESC_CA7	derivative.h	2731;"	d
CAU_AESC_CA8	derivative.h	2732;"	d
CAU_AESC_CAA	derivative.h	2723;"	d
CAU_AESC_CAA_REG	derivative.h	2532;"	d
CAU_AESC_CASR	derivative.h	2722;"	d
CAU_AESC_CASR_DPE_MASK	derivative.h	2603;"	d
CAU_AESC_CASR_DPE_SHIFT	derivative.h	2604;"	d
CAU_AESC_CASR_IC_MASK	derivative.h	2601;"	d
CAU_AESC_CASR_IC_SHIFT	derivative.h	2602;"	d
CAU_AESC_CASR_REG	derivative.h	2531;"	d
CAU_AESC_CASR_VER	derivative.h	2607;"	d
CAU_AESC_CASR_VER_MASK	derivative.h	2605;"	d
CAU_AESC_CASR_VER_SHIFT	derivative.h	2606;"	d
CAU_AESC_CA_REG	derivative.h	2533;"	d
CAU_AESIC_CA	derivative.h	2754;"	d
CAU_AESIC_CA0	derivative.h	2735;"	d
CAU_AESIC_CA1	derivative.h	2736;"	d
CAU_AESIC_CA2	derivative.h	2737;"	d
CAU_AESIC_CA3	derivative.h	2738;"	d
CAU_AESIC_CA4	derivative.h	2739;"	d
CAU_AESIC_CA5	derivative.h	2740;"	d
CAU_AESIC_CA6	derivative.h	2741;"	d
CAU_AESIC_CA7	derivative.h	2742;"	d
CAU_AESIC_CA8	derivative.h	2743;"	d
CAU_AESIC_CAA	derivative.h	2734;"	d
CAU_AESIC_CAA_REG	derivative.h	2535;"	d
CAU_AESIC_CASR	derivative.h	2733;"	d
CAU_AESIC_CASR_DPE_MASK	derivative.h	2611;"	d
CAU_AESIC_CASR_DPE_SHIFT	derivative.h	2612;"	d
CAU_AESIC_CASR_IC_MASK	derivative.h	2609;"	d
CAU_AESIC_CASR_IC_SHIFT	derivative.h	2610;"	d
CAU_AESIC_CASR_REG	derivative.h	2534;"	d
CAU_AESIC_CASR_VER	derivative.h	2615;"	d
CAU_AESIC_CASR_VER_MASK	derivative.h	2613;"	d
CAU_AESIC_CASR_VER_SHIFT	derivative.h	2614;"	d
CAU_AESIC_CA_REG	derivative.h	2536;"	d
CAU_BASE_PTR	derivative.h	2624;"	d
CAU_BASE_PTRS	derivative.h	2626;"	d
CAU_DIRECT	derivative.h	2746;"	d
CAU_DIRECT0	derivative.h	2640;"	d
CAU_DIRECT1	derivative.h	2641;"	d
CAU_DIRECT10	derivative.h	2650;"	d
CAU_DIRECT11	derivative.h	2651;"	d
CAU_DIRECT12	derivative.h	2652;"	d
CAU_DIRECT13	derivative.h	2653;"	d
CAU_DIRECT14	derivative.h	2654;"	d
CAU_DIRECT15	derivative.h	2655;"	d
CAU_DIRECT2	derivative.h	2642;"	d
CAU_DIRECT3	derivative.h	2643;"	d
CAU_DIRECT4	derivative.h	2644;"	d
CAU_DIRECT5	derivative.h	2645;"	d
CAU_DIRECT6	derivative.h	2646;"	d
CAU_DIRECT7	derivative.h	2647;"	d
CAU_DIRECT8	derivative.h	2648;"	d
CAU_DIRECT9	derivative.h	2649;"	d
CAU_DIRECT_REG	derivative.h	2512;"	d
CAU_LDR_CA	derivative.h	2747;"	d
CAU_LDR_CA0	derivative.h	2658;"	d
CAU_LDR_CA1	derivative.h	2659;"	d
CAU_LDR_CA2	derivative.h	2660;"	d
CAU_LDR_CA3	derivative.h	2661;"	d
CAU_LDR_CA4	derivative.h	2662;"	d
CAU_LDR_CA5	derivative.h	2663;"	d
CAU_LDR_CA6	derivative.h	2664;"	d
CAU_LDR_CA7	derivative.h	2665;"	d
CAU_LDR_CA8	derivative.h	2666;"	d
CAU_LDR_CAA	derivative.h	2657;"	d
CAU_LDR_CAA_REG	derivative.h	2514;"	d
CAU_LDR_CASR	derivative.h	2656;"	d
CAU_LDR_CASR_DPE_MASK	derivative.h	2555;"	d
CAU_LDR_CASR_DPE_SHIFT	derivative.h	2556;"	d
CAU_LDR_CASR_IC_MASK	derivative.h	2553;"	d
CAU_LDR_CASR_IC_SHIFT	derivative.h	2554;"	d
CAU_LDR_CASR_REG	derivative.h	2513;"	d
CAU_LDR_CASR_VER	derivative.h	2559;"	d
CAU_LDR_CASR_VER_MASK	derivative.h	2557;"	d
CAU_LDR_CASR_VER_SHIFT	derivative.h	2558;"	d
CAU_LDR_CA_REG	derivative.h	2515;"	d
CAU_MemMap	derivative.h	/^typedef struct CAU_MemMap {$/;"	s
CAU_MemMapPtr	derivative.h	/^} volatile *CAU_MemMapPtr;$/;"	t
CAU_RADR_CA	derivative.h	2750;"	d
CAU_RADR_CA0	derivative.h	2691;"	d
CAU_RADR_CA1	derivative.h	2692;"	d
CAU_RADR_CA2	derivative.h	2693;"	d
CAU_RADR_CA3	derivative.h	2694;"	d
CAU_RADR_CA4	derivative.h	2695;"	d
CAU_RADR_CA5	derivative.h	2696;"	d
CAU_RADR_CA6	derivative.h	2697;"	d
CAU_RADR_CA7	derivative.h	2698;"	d
CAU_RADR_CA8	derivative.h	2699;"	d
CAU_RADR_CAA	derivative.h	2690;"	d
CAU_RADR_CAA_REG	derivative.h	2523;"	d
CAU_RADR_CASR	derivative.h	2689;"	d
CAU_RADR_CASR_DPE_MASK	derivative.h	2579;"	d
CAU_RADR_CASR_DPE_SHIFT	derivative.h	2580;"	d
CAU_RADR_CASR_IC_MASK	derivative.h	2577;"	d
CAU_RADR_CASR_IC_SHIFT	derivative.h	2578;"	d
CAU_RADR_CASR_REG	derivative.h	2522;"	d
CAU_RADR_CASR_VER	derivative.h	2583;"	d
CAU_RADR_CASR_VER_MASK	derivative.h	2581;"	d
CAU_RADR_CASR_VER_SHIFT	derivative.h	2582;"	d
CAU_RADR_CA_REG	derivative.h	2524;"	d
CAU_ROTL_CA	derivative.h	2752;"	d
CAU_ROTL_CA0	derivative.h	2713;"	d
CAU_ROTL_CA1	derivative.h	2714;"	d
CAU_ROTL_CA2	derivative.h	2715;"	d
CAU_ROTL_CA3	derivative.h	2716;"	d
CAU_ROTL_CA4	derivative.h	2717;"	d
CAU_ROTL_CA5	derivative.h	2718;"	d
CAU_ROTL_CA6	derivative.h	2719;"	d
CAU_ROTL_CA7	derivative.h	2720;"	d
CAU_ROTL_CA8	derivative.h	2721;"	d
CAU_ROTL_CAA	derivative.h	2712;"	d
CAU_ROTL_CAA_REG	derivative.h	2529;"	d
CAU_ROTL_CASR	derivative.h	2711;"	d
CAU_ROTL_CASR_DPE_MASK	derivative.h	2595;"	d
CAU_ROTL_CASR_DPE_SHIFT	derivative.h	2596;"	d
CAU_ROTL_CASR_IC_MASK	derivative.h	2593;"	d
CAU_ROTL_CASR_IC_SHIFT	derivative.h	2594;"	d
CAU_ROTL_CASR_REG	derivative.h	2528;"	d
CAU_ROTL_CASR_VER	derivative.h	2599;"	d
CAU_ROTL_CASR_VER_MASK	derivative.h	2597;"	d
CAU_ROTL_CASR_VER_SHIFT	derivative.h	2598;"	d
CAU_ROTL_CA_REG	derivative.h	2530;"	d
CAU_STR_CA	derivative.h	2748;"	d
CAU_STR_CA0	derivative.h	2669;"	d
CAU_STR_CA1	derivative.h	2670;"	d
CAU_STR_CA2	derivative.h	2671;"	d
CAU_STR_CA3	derivative.h	2672;"	d
CAU_STR_CA4	derivative.h	2673;"	d
CAU_STR_CA5	derivative.h	2674;"	d
CAU_STR_CA6	derivative.h	2675;"	d
CAU_STR_CA7	derivative.h	2676;"	d
CAU_STR_CA8	derivative.h	2677;"	d
CAU_STR_CAA	derivative.h	2668;"	d
CAU_STR_CAA_REG	derivative.h	2517;"	d
CAU_STR_CASR	derivative.h	2667;"	d
CAU_STR_CASR_DPE_MASK	derivative.h	2563;"	d
CAU_STR_CASR_DPE_SHIFT	derivative.h	2564;"	d
CAU_STR_CASR_IC_MASK	derivative.h	2561;"	d
CAU_STR_CASR_IC_SHIFT	derivative.h	2562;"	d
CAU_STR_CASR_REG	derivative.h	2516;"	d
CAU_STR_CASR_VER	derivative.h	2567;"	d
CAU_STR_CASR_VER_MASK	derivative.h	2565;"	d
CAU_STR_CASR_VER_SHIFT	derivative.h	2566;"	d
CAU_STR_CA_REG	derivative.h	2518;"	d
CAU_XOR_CA	derivative.h	2751;"	d
CAU_XOR_CA0	derivative.h	2702;"	d
CAU_XOR_CA1	derivative.h	2703;"	d
CAU_XOR_CA2	derivative.h	2704;"	d
CAU_XOR_CA3	derivative.h	2705;"	d
CAU_XOR_CA4	derivative.h	2706;"	d
CAU_XOR_CA5	derivative.h	2707;"	d
CAU_XOR_CA6	derivative.h	2708;"	d
CAU_XOR_CA7	derivative.h	2709;"	d
CAU_XOR_CA8	derivative.h	2710;"	d
CAU_XOR_CAA	derivative.h	2701;"	d
CAU_XOR_CAA_REG	derivative.h	2526;"	d
CAU_XOR_CASR	derivative.h	2700;"	d
CAU_XOR_CASR_DPE_MASK	derivative.h	2587;"	d
CAU_XOR_CASR_DPE_SHIFT	derivative.h	2588;"	d
CAU_XOR_CASR_IC_MASK	derivative.h	2585;"	d
CAU_XOR_CASR_IC_SHIFT	derivative.h	2586;"	d
CAU_XOR_CASR_REG	derivative.h	2525;"	d
CAU_XOR_CASR_VER	derivative.h	2591;"	d
CAU_XOR_CASR_VER_MASK	derivative.h	2589;"	d
CAU_XOR_CASR_VER_SHIFT	derivative.h	2590;"	d
CAU_XOR_CA_REG	derivative.h	2527;"	d
CCER	derivative.h	/^  uint32_t CCER;                                   \/**< Configuration Code Extension Register, offset: 0x1E8 *\/$/;"	m	struct:ETM_MemMap
CCR	derivative.h	/^  uint32_t CCR;                                    \/**< Configuration Code Register, offset: 0x4 *\/$/;"	m	struct:ETM_MemMap
CCR	derivative.h	/^  uint32_t CCR;                                    \/**< Configuration and Control Register, offset: 0xD14 *\/$/;"	m	struct:SCB_MemMap
CDNE	derivative.h	/^  uint8_t CDNE;                                    \/**< Clear DONE Status Bit Register, offset: 0x1C *\/$/;"	m	struct:DMA_MemMap
CEEI	derivative.h	/^  uint8_t CEEI;                                    \/**< Clear Enable Error Interrupt Register, offset: 0x18 *\/$/;"	m	struct:DMA_MemMap
CERQ	derivative.h	/^  uint8_t CERQ;                                    \/**< Clear Enable Request Register, offset: 0x1A *\/$/;"	m	struct:DMA_MemMap
CERR	derivative.h	/^  uint8_t CERR;                                    \/**< Clear Error Register, offset: 0x1E *\/$/;"	m	struct:DMA_MemMap
CESR	derivative.h	/^  uint32_t CESR;                                   \/**< Control\/Error Status Register, offset: 0x0 *\/$/;"	m	struct:MPU_MemMap
CFG	derivative.h	/^  uint32_t CFG;                                    \/**< Flash configuration, offset: 0x3F30 *\/$/;"	m	struct:NFC_MemMap
CFG1	derivative.h	/^  uint32_t CFG1;                                   \/**< ADC configuration register 1, offset: 0x8 *\/$/;"	m	struct:ADC_MemMap
CFG2	derivative.h	/^  uint32_t CFG2;                                   \/**< Configuration register 2, offset: 0xC *\/$/;"	m	struct:ADC_MemMap
CFIFO	derivative.h	/^  uint8_t CFIFO;                                   \/**< UART FIFO Control Register, offset: 0x11 *\/$/;"	m	struct:UART_MemMap
CFSR	derivative.h	/^  uint32_t CFSR;                                   \/**< Configurable Fault Status Registers, offset: 0xD28 *\/$/;"	m	struct:SCB_MemMap
CGH1	derivative.h	/^  uint8_t CGH1;                                    \/**< CMT Carrier Generator High Data Register 1, offset: 0x0 *\/$/;"	m	struct:CMT_MemMap
CGH2	derivative.h	/^  uint8_t CGH2;                                    \/**< CMT Carrier Generator High Data Register 2, offset: 0x2 *\/$/;"	m	struct:CMT_MemMap
CGL1	derivative.h	/^  uint8_t CGL1;                                    \/**< CMT Carrier Generator Low Data Register 1, offset: 0x1 *\/$/;"	m	struct:CMT_MemMap
CGL2	derivative.h	/^  uint8_t CGL2;                                    \/**< CMT Carrier Generator Low Data Register 2, offset: 0x3 *\/$/;"	m	struct:CMT_MemMap
CH	derivative.h	/^  } CH[4];$/;"	m	struct:PDB_MemMap	typeref:struct:PDB_MemMap::__anon26
CHANNEL	derivative.h	/^  } CHANNEL[4];$/;"	m	struct:ENET_MemMap	typeref:struct:ENET_MemMap::__anon20
CHANNEL	derivative.h	/^  } CHANNEL[4];$/;"	m	struct:PIT_MemMap	typeref:struct:PIT_MemMap::__anon28
CHAR_EOF	main.c	39;"	d	file:
CHCFG	derivative.h	/^  uint8_t CHCFG[16];                               \/**< Channel Configuration Register, array offset: 0x0, array step: 0x1 *\/$/;"	m	struct:DMAMUX_MemMap
CID0	derivative.h	/^  uint32_t CID0;                                   \/**< Component Identification Register 0., offset: 0xFF0 *\/$/;"	m	struct:DWT_MemMap
CID0	derivative.h	/^  uint32_t CID0;                                   \/**< Component Identification Register 0., offset: 0xFF0 *\/$/;"	m	struct:FPB_MemMap
CID0	derivative.h	/^  uint32_t CID0;                                   \/**< Component Identification Register 0., offset: 0xFF0 *\/$/;"	m	struct:ITM_MemMap
CID0	derivative.h	/^  uint32_t CID0;                                   \/**< Component Identification Register 0., offset: 0xFF0 *\/$/;"	m	struct:TPIU_MemMap
CID1	derivative.h	/^  uint32_t CID1;                                   \/**< Component Identification Register 1., offset: 0xFF4 *\/$/;"	m	struct:DWT_MemMap
CID1	derivative.h	/^  uint32_t CID1;                                   \/**< Component Identification Register 1., offset: 0xFF4 *\/$/;"	m	struct:FPB_MemMap
CID1	derivative.h	/^  uint32_t CID1;                                   \/**< Component Identification Register 1., offset: 0xFF4 *\/$/;"	m	struct:ITM_MemMap
CID1	derivative.h	/^  uint32_t CID1;                                   \/**< Component Identification Register 1., offset: 0xFF4 *\/$/;"	m	struct:TPIU_MemMap
CID2	derivative.h	/^  uint32_t CID2;                                   \/**< Component Identification Register 2., offset: 0xFF8 *\/$/;"	m	struct:DWT_MemMap
CID2	derivative.h	/^  uint32_t CID2;                                   \/**< Component Identification Register 2., offset: 0xFF8 *\/$/;"	m	struct:FPB_MemMap
CID2	derivative.h	/^  uint32_t CID2;                                   \/**< Component Identification Register 2., offset: 0xFF8 *\/$/;"	m	struct:ITM_MemMap
CID2	derivative.h	/^  uint32_t CID2;                                   \/**< Component Identification Register 2., offset: 0xFF8 *\/$/;"	m	struct:TPIU_MemMap
CID3	derivative.h	/^  uint32_t CID3;                                   \/**< Component Identification Register 3., offset: 0xFFC *\/$/;"	m	struct:DWT_MemMap
CID3	derivative.h	/^  uint32_t CID3;                                   \/**< Component Identification Register 3., offset: 0xFFC *\/$/;"	m	struct:FPB_MemMap
CID3	derivative.h	/^  uint32_t CID3;                                   \/**< Component Identification Register 3., offset: 0xFFC *\/$/;"	m	struct:ITM_MemMap
CID4	derivative.h	/^  uint32_t CID4;                                   \/**< Component Identification Register 3., offset: 0xFFC *\/$/;"	m	struct:TPIU_MemMap
CIDR0	derivative.h	/^  uint32_t CIDR0;                                  \/**< Component Identification Register 0, offset: 0xFF0 *\/$/;"	m	struct:ETB_MemMap
CIDR0	derivative.h	/^  uint32_t CIDR0;                                  \/**< Component Identification Register 0, offset: 0xFF0 *\/$/;"	m	struct:ETF_MemMap
CIDR0	derivative.h	/^  uint32_t CIDR0;                                  \/**< Component Identification Register 0, offset: 0xFF0 *\/$/;"	m	struct:ETM_MemMap
CIDR1	derivative.h	/^  uint32_t CIDR1;                                  \/**< Component Identification Register 1, offset: 0xFF4 *\/$/;"	m	struct:ETB_MemMap
CIDR1	derivative.h	/^  uint32_t CIDR1;                                  \/**< Component Identification Register 1, offset: 0xFF4 *\/$/;"	m	struct:ETF_MemMap
CIDR1	derivative.h	/^  uint32_t CIDR1;                                  \/**< Component Identification Register 1, offset: 0xFF4 *\/$/;"	m	struct:ETM_MemMap
CIDR2	derivative.h	/^  uint32_t CIDR2;                                  \/**< Component Identification Register 2, offset: 0xFF8 *\/$/;"	m	struct:ETB_MemMap
CIDR2	derivative.h	/^  uint32_t CIDR2;                                  \/**< Component Identification Register 2, offset: 0xFF8 *\/$/;"	m	struct:ETF_MemMap
CIDR2	derivative.h	/^  uint32_t CIDR2;                                  \/**< Component Identification Register 2, offset: 0xFF8 *\/$/;"	m	struct:ETM_MemMap
CIDR3	derivative.h	/^  uint32_t CIDR3;                                  \/**< Component Identification Register 3, offset: 0xFFC *\/$/;"	m	struct:ETB_MemMap
CIDR3	derivative.h	/^  uint32_t CIDR3;                                  \/**< Component Identification Register 3, offset: 0xFFC *\/$/;"	m	struct:ETF_MemMap
CIDR3	derivative.h	/^  uint32_t CIDR3;                                  \/**< Component Identification Register 3, offset: 0xFFC *\/$/;"	m	struct:ETM_MemMap
CINT	derivative.h	/^  uint8_t CINT;                                    \/**< Clear Interrupt Request Register, offset: 0x1F *\/$/;"	m	struct:DMA_MemMap
CITER_ELINKNO	derivative.h	/^      uint16_t CITER_ELINKNO;                          \/**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Disabled), array offset: 0x1016, array step: 0x20 *\/$/;"	m	union:DMA_MemMap::__anon15::__anon17
CITER_ELINKYES	derivative.h	/^      uint16_t CITER_ELINKYES;                         \/**< TCD Current Minor Loop Link, Major Loop Count (Channel Linking Enabled), array offset: 0x1016, array step: 0x20 *\/$/;"	m	union:DMA_MemMap::__anon15::__anon17
CLAIMCLR	derivative.h	/^  uint32_t CLAIMCLR;                               \/**< Claim Tag Clear Register, offset: 0xFA4 *\/$/;"	m	struct:ETB_MemMap
CLAIMCLR	derivative.h	/^  uint32_t CLAIMCLR;                               \/**< Claim Tag Clear Register, offset: 0xFA4 *\/$/;"	m	struct:ETF_MemMap
CLAIMCLR	derivative.h	/^  uint32_t CLAIMCLR;                               \/**< Claim Tag Clear Register, offset: 0xFA4 *\/$/;"	m	struct:ETM_MemMap
CLAIMCLR	derivative.h	/^  uint32_t CLAIMCLR;                               \/**< Claim Tag Clear Register, offset: 0xFA4 *\/$/;"	m	struct:TPIU_MemMap
CLAIMSET	derivative.h	/^  uint32_t CLAIMSET;                               \/**< Claim Tag Set Register, offset: 0xFA0 *\/$/;"	m	struct:ETB_MemMap
CLAIMSET	derivative.h	/^  uint32_t CLAIMSET;                               \/**< Claim Tag Set Register, offset: 0xFA0 *\/$/;"	m	struct:ETF_MemMap
CLAIMSET	derivative.h	/^  uint32_t CLAIMSET;                               \/**< Claim Tag Set Register, offset: 0xFA0 *\/$/;"	m	struct:ETM_MemMap
CLAIMSET	derivative.h	/^  uint32_t CLAIMSET;                               \/**< Claim Tag Set Register, offset: 0xFA0 *\/$/;"	m	struct:TPIU_MemMap
CLKDIV1	derivative.h	/^  uint32_t CLKDIV1;                                \/**< System Clock Divider Register 1, offset: 0x1044 *\/$/;"	m	struct:SIM_MemMap
CLKDIV2	derivative.h	/^  uint32_t CLKDIV2;                                \/**< System Clock Divider Register 2, offset: 0x1048 *\/$/;"	m	struct:SIM_MemMap
CLKDIV3	derivative.h	/^  uint32_t CLKDIV3;                                \/**< System Clock Divider Register 3, offset: 0x1064 *\/$/;"	m	struct:SIM_MemMap
CLKDIV4	derivative.h	/^  uint32_t CLKDIV4;                                \/**< System Clock Divider Register 4, offset: 0x1068 *\/$/;"	m	struct:SIM_MemMap
CLM0	derivative.h	/^  uint32_t CLM0;                                   \/**< ADC minus-side general calibration value register, offset: 0x6C *\/$/;"	m	struct:ADC_MemMap
CLM1	derivative.h	/^  uint32_t CLM1;                                   \/**< ADC minus-side general calibration value register, offset: 0x68 *\/$/;"	m	struct:ADC_MemMap
CLM2	derivative.h	/^  uint32_t CLM2;                                   \/**< ADC minus-side general calibration value register, offset: 0x64 *\/$/;"	m	struct:ADC_MemMap
CLM3	derivative.h	/^  uint32_t CLM3;                                   \/**< ADC minus-side general calibration value register, offset: 0x60 *\/$/;"	m	struct:ADC_MemMap
CLM4	derivative.h	/^  uint32_t CLM4;                                   \/**< ADC minus-side general calibration value register, offset: 0x5C *\/$/;"	m	struct:ADC_MemMap
CLMD	derivative.h	/^  uint32_t CLMD;                                   \/**< ADC minus-side general calibration value register, offset: 0x54 *\/$/;"	m	struct:ADC_MemMap
CLMS	derivative.h	/^  uint32_t CLMS;                                   \/**< ADC minus-side general calibration value register, offset: 0x58 *\/$/;"	m	struct:ADC_MemMap
CLOCK	derivative.h	/^  uint32_t CLOCK;                                  \/**< Clock Register, offset: 0x4 *\/$/;"	m	struct:USBDCD_MemMap
CLP0	derivative.h	/^  uint32_t CLP0;                                   \/**< ADC plus-side general calibration value register, offset: 0x4C *\/$/;"	m	struct:ADC_MemMap
CLP1	derivative.h	/^  uint32_t CLP1;                                   \/**< ADC plus-side general calibration value register, offset: 0x48 *\/$/;"	m	struct:ADC_MemMap
CLP2	derivative.h	/^  uint32_t CLP2;                                   \/**< ADC plus-side general calibration value register, offset: 0x44 *\/$/;"	m	struct:ADC_MemMap
CLP3	derivative.h	/^  uint32_t CLP3;                                   \/**< ADC plus-side general calibration value register, offset: 0x40 *\/$/;"	m	struct:ADC_MemMap
CLP4	derivative.h	/^  uint32_t CLP4;                                   \/**< ADC plus-side general calibration value register, offset: 0x3C *\/$/;"	m	struct:ADC_MemMap
CLPD	derivative.h	/^  uint32_t CLPD;                                   \/**< ADC plus-side general calibration value register, offset: 0x34 *\/$/;"	m	struct:ADC_MemMap
CLPS	derivative.h	/^  uint32_t CLPS;                                   \/**< ADC plus-side general calibration value register, offset: 0x38 *\/$/;"	m	struct:ADC_MemMap
CMD1	derivative.h	/^  uint32_t CMD1;                                   \/**< Flash command 1, offset: 0x3F00 *\/$/;"	m	struct:NFC_MemMap
CMD1	derivative.h	/^  uint8_t CMD1;                                    \/**< CMT Modulator Data Register Mark High, offset: 0x6 *\/$/;"	m	struct:CMT_MemMap
CMD2	derivative.h	/^  uint32_t CMD2;                                   \/**< Flash command 2, offset: 0x3F04 *\/$/;"	m	struct:NFC_MemMap
CMD2	derivative.h	/^  uint8_t CMD2;                                    \/**< CMT Modulator Data Register Mark Low, offset: 0x7 *\/$/;"	m	struct:CMT_MemMap
CMD3	derivative.h	/^  uint8_t CMD3;                                    \/**< CMT Modulator Data Register Space High, offset: 0x8 *\/$/;"	m	struct:CMT_MemMap
CMD4	derivative.h	/^  uint8_t CMD4;                                    \/**< CMT Modulator Data Register Space Low, offset: 0x9 *\/$/;"	m	struct:CMT_MemMap
CMDARG	derivative.h	/^  uint32_t CMDARG;                                 \/**< Command Argument Register, offset: 0x8 *\/$/;"	m	struct:SDHC_MemMap
CMDRSP	derivative.h	/^  uint32_t CMDRSP[4];                              \/**< Command Response 0..Command Response 3, array offset: 0x10, array step: 0x4 *\/$/;"	m	struct:SDHC_MemMap
CMP0_BASE_PTR	derivative.h	2879;"	d
CMP0_CR0	derivative.h	2901;"	d
CMP0_CR1	derivative.h	2902;"	d
CMP0_DACCR	derivative.h	2905;"	d
CMP0_FPR	derivative.h	2903;"	d
CMP0_MUXCR	derivative.h	2906;"	d
CMP0_SCR	derivative.h	2904;"	d
CMP1_BASE_PTR	derivative.h	2881;"	d
CMP1_CR0	derivative.h	2908;"	d
CMP1_CR1	derivative.h	2909;"	d
CMP1_DACCR	derivative.h	2912;"	d
CMP1_FPR	derivative.h	2910;"	d
CMP1_MUXCR	derivative.h	2913;"	d
CMP1_SCR	derivative.h	2911;"	d
CMP2_BASE_PTR	derivative.h	2883;"	d
CMP2_CR0	derivative.h	2915;"	d
CMP2_CR1	derivative.h	2916;"	d
CMP2_DACCR	derivative.h	2919;"	d
CMP2_FPR	derivative.h	2917;"	d
CMP2_MUXCR	derivative.h	2920;"	d
CMP2_SCR	derivative.h	2918;"	d
CMP3_BASE_PTR	derivative.h	2885;"	d
CMP3_CR0	derivative.h	2922;"	d
CMP3_CR1	derivative.h	2923;"	d
CMP3_DACCR	derivative.h	2926;"	d
CMP3_FPR	derivative.h	2924;"	d
CMP3_MUXCR	derivative.h	2927;"	d
CMP3_SCR	derivative.h	2925;"	d
CMPH	derivative.h	/^  uint8_t CMPH;                                    \/**< Compare High Register, offset: 0x3 *\/$/;"	m	struct:EWM_MemMap
CMPL	derivative.h	/^  uint8_t CMPL;                                    \/**< Compare Low Register, offset: 0x2 *\/$/;"	m	struct:EWM_MemMap
CMP_BASE_PTRS	derivative.h	2887;"	d
CMP_CR0_FILTER_CNT	derivative.h	2823;"	d
CMP_CR0_FILTER_CNT_MASK	derivative.h	2821;"	d
CMP_CR0_FILTER_CNT_SHIFT	derivative.h	2822;"	d
CMP_CR0_HYSTCTR	derivative.h	2820;"	d
CMP_CR0_HYSTCTR_MASK	derivative.h	2818;"	d
CMP_CR0_HYSTCTR_SHIFT	derivative.h	2819;"	d
CMP_CR0_REG	derivative.h	2796;"	d
CMP_CR1_COS_MASK	derivative.h	2829;"	d
CMP_CR1_COS_SHIFT	derivative.h	2830;"	d
CMP_CR1_EN_MASK	derivative.h	2825;"	d
CMP_CR1_EN_SHIFT	derivative.h	2826;"	d
CMP_CR1_INV_MASK	derivative.h	2831;"	d
CMP_CR1_INV_SHIFT	derivative.h	2832;"	d
CMP_CR1_OPE_MASK	derivative.h	2827;"	d
CMP_CR1_OPE_SHIFT	derivative.h	2828;"	d
CMP_CR1_PMODE_MASK	derivative.h	2833;"	d
CMP_CR1_PMODE_SHIFT	derivative.h	2834;"	d
CMP_CR1_REG	derivative.h	2797;"	d
CMP_CR1_SE_MASK	derivative.h	2837;"	d
CMP_CR1_SE_SHIFT	derivative.h	2838;"	d
CMP_CR1_WE_MASK	derivative.h	2835;"	d
CMP_CR1_WE_SHIFT	derivative.h	2836;"	d
CMP_DACCR_DACEN_MASK	derivative.h	2862;"	d
CMP_DACCR_DACEN_SHIFT	derivative.h	2863;"	d
CMP_DACCR_REG	derivative.h	2800;"	d
CMP_DACCR_VOSEL	derivative.h	2859;"	d
CMP_DACCR_VOSEL_MASK	derivative.h	2857;"	d
CMP_DACCR_VOSEL_SHIFT	derivative.h	2858;"	d
CMP_DACCR_VRSEL_MASK	derivative.h	2860;"	d
CMP_DACCR_VRSEL_SHIFT	derivative.h	2861;"	d
CMP_FPR_FILT_PER	derivative.h	2842;"	d
CMP_FPR_FILT_PER_MASK	derivative.h	2840;"	d
CMP_FPR_FILT_PER_SHIFT	derivative.h	2841;"	d
CMP_FPR_REG	derivative.h	2798;"	d
CMP_MUXCR_MSEL	derivative.h	2867;"	d
CMP_MUXCR_MSEL_MASK	derivative.h	2865;"	d
CMP_MUXCR_MSEL_SHIFT	derivative.h	2866;"	d
CMP_MUXCR_PSEL	derivative.h	2870;"	d
CMP_MUXCR_PSEL_MASK	derivative.h	2868;"	d
CMP_MUXCR_PSEL_SHIFT	derivative.h	2869;"	d
CMP_MUXCR_REG	derivative.h	2801;"	d
CMP_MemMap	derivative.h	/^typedef struct CMP_MemMap {$/;"	s
CMP_MemMapPtr	derivative.h	/^} volatile *CMP_MemMapPtr;$/;"	t
CMP_SCR_CFF_MASK	derivative.h	2846;"	d
CMP_SCR_CFF_SHIFT	derivative.h	2847;"	d
CMP_SCR_CFR_MASK	derivative.h	2848;"	d
CMP_SCR_CFR_SHIFT	derivative.h	2849;"	d
CMP_SCR_COUT_MASK	derivative.h	2844;"	d
CMP_SCR_COUT_SHIFT	derivative.h	2845;"	d
CMP_SCR_DMAEN_MASK	derivative.h	2854;"	d
CMP_SCR_DMAEN_SHIFT	derivative.h	2855;"	d
CMP_SCR_IEF_MASK	derivative.h	2850;"	d
CMP_SCR_IEF_SHIFT	derivative.h	2851;"	d
CMP_SCR_IER_MASK	derivative.h	2852;"	d
CMP_SCR_IER_SHIFT	derivative.h	2853;"	d
CMP_SCR_REG	derivative.h	2799;"	d
CMR	derivative.h	/^  uint32_t CMR;                                    \/**< Low Power Timer Compare Register, offset: 0x8 *\/$/;"	m	struct:LPTMR_MemMap
CMT_BASE_PTR	derivative.h	3072;"	d
CMT_BASE_PTRS	derivative.h	3074;"	d
CMT_CGH1	derivative.h	3088;"	d
CMT_CGH1_PH	derivative.h	3005;"	d
CMT_CGH1_PH_MASK	derivative.h	3003;"	d
CMT_CGH1_PH_SHIFT	derivative.h	3004;"	d
CMT_CGH1_REG	derivative.h	2975;"	d
CMT_CGH2	derivative.h	3090;"	d
CMT_CGH2_REG	derivative.h	2977;"	d
CMT_CGH2_SH	derivative.h	3013;"	d
CMT_CGH2_SH_MASK	derivative.h	3011;"	d
CMT_CGH2_SH_SHIFT	derivative.h	3012;"	d
CMT_CGL1	derivative.h	3089;"	d
CMT_CGL1_PL	derivative.h	3009;"	d
CMT_CGL1_PL_MASK	derivative.h	3007;"	d
CMT_CGL1_PL_SHIFT	derivative.h	3008;"	d
CMT_CGL1_REG	derivative.h	2976;"	d
CMT_CGL2	derivative.h	3091;"	d
CMT_CGL2_REG	derivative.h	2978;"	d
CMT_CGL2_SL	derivative.h	3017;"	d
CMT_CGL2_SL_MASK	derivative.h	3015;"	d
CMT_CGL2_SL_SHIFT	derivative.h	3016;"	d
CMT_CMD1	derivative.h	3094;"	d
CMT_CMD1_MB	derivative.h	3044;"	d
CMT_CMD1_MB_MASK	derivative.h	3042;"	d
CMT_CMD1_MB_SHIFT	derivative.h	3043;"	d
CMT_CMD1_REG	derivative.h	2981;"	d
CMT_CMD2	derivative.h	3095;"	d
CMT_CMD2_MB	derivative.h	3048;"	d
CMT_CMD2_MB_MASK	derivative.h	3046;"	d
CMT_CMD2_MB_SHIFT	derivative.h	3047;"	d
CMT_CMD2_REG	derivative.h	2982;"	d
CMT_CMD3	derivative.h	3096;"	d
CMT_CMD3_REG	derivative.h	2983;"	d
CMT_CMD3_SB	derivative.h	3052;"	d
CMT_CMD3_SB_MASK	derivative.h	3050;"	d
CMT_CMD3_SB_SHIFT	derivative.h	3051;"	d
CMT_CMD4	derivative.h	3097;"	d
CMT_CMD4_REG	derivative.h	2984;"	d
CMT_CMD4_SB	derivative.h	3056;"	d
CMT_CMD4_SB_MASK	derivative.h	3054;"	d
CMT_CMD4_SB_SHIFT	derivative.h	3055;"	d
CMT_DMA	derivative.h	3099;"	d
CMT_DMA_DMA_MASK	derivative.h	3062;"	d
CMT_DMA_DMA_SHIFT	derivative.h	3063;"	d
CMT_DMA_REG	derivative.h	2986;"	d
CMT_MSC	derivative.h	3093;"	d
CMT_MSC_BASE_MASK	derivative.h	3032;"	d
CMT_MSC_BASE_SHIFT	derivative.h	3033;"	d
CMT_MSC_CMTDIV	derivative.h	3038;"	d
CMT_MSC_CMTDIV_MASK	derivative.h	3036;"	d
CMT_MSC_CMTDIV_SHIFT	derivative.h	3037;"	d
CMT_MSC_EOCF_MASK	derivative.h	3039;"	d
CMT_MSC_EOCF_SHIFT	derivative.h	3040;"	d
CMT_MSC_EOCIE_MASK	derivative.h	3028;"	d
CMT_MSC_EOCIE_SHIFT	derivative.h	3029;"	d
CMT_MSC_EXSPC_MASK	derivative.h	3034;"	d
CMT_MSC_EXSPC_SHIFT	derivative.h	3035;"	d
CMT_MSC_FSK_MASK	derivative.h	3030;"	d
CMT_MSC_FSK_SHIFT	derivative.h	3031;"	d
CMT_MSC_MCGEN_MASK	derivative.h	3026;"	d
CMT_MSC_MCGEN_SHIFT	derivative.h	3027;"	d
CMT_MSC_REG	derivative.h	2980;"	d
CMT_MemMap	derivative.h	/^typedef struct CMT_MemMap {$/;"	s
CMT_MemMapPtr	derivative.h	/^} volatile *CMT_MemMapPtr;$/;"	t
CMT_OC	derivative.h	3092;"	d
CMT_OC_CMTPOL_MASK	derivative.h	3021;"	d
CMT_OC_CMTPOL_SHIFT	derivative.h	3022;"	d
CMT_OC_IROL_MASK	derivative.h	3023;"	d
CMT_OC_IROL_SHIFT	derivative.h	3024;"	d
CMT_OC_IROPEN_MASK	derivative.h	3019;"	d
CMT_OC_IROPEN_SHIFT	derivative.h	3020;"	d
CMT_OC_REG	derivative.h	2979;"	d
CMT_PPS	derivative.h	3098;"	d
CMT_PPS_PPSDIV	derivative.h	3060;"	d
CMT_PPS_PPSDIV_MASK	derivative.h	3058;"	d
CMT_PPS_PPSDIV_SHIFT	derivative.h	3059;"	d
CMT_PPS_REG	derivative.h	2985;"	d
CNR	derivative.h	/^  uint32_t CNR;                                    \/**< Low Power Timer Counter Register, offset: 0xC *\/$/;"	m	struct:LPTMR_MemMap
CNT	derivative.h	/^  uint32_t CNT;                                    \/**< Counter Register, offset: 0x8 *\/$/;"	m	struct:PDB_MemMap
CNT	derivative.h	/^  uint32_t CNT;                                    \/**< Counter, offset: 0x4 *\/$/;"	m	struct:FTM_MemMap
CNTIN	derivative.h	/^  uint32_t CNTIN;                                  \/**< Counter Initial Value, offset: 0x4C *\/$/;"	m	struct:FTM_MemMap
CNTR1	derivative.h	/^  uint32_t CNTR1;                                  \/**< Counter Register, offset: 0x100 *\/$/;"	m	struct:TSI_MemMap
CNTR11	derivative.h	/^  uint32_t CNTR11;                                 \/**< Counter Register, offset: 0x114 *\/$/;"	m	struct:TSI_MemMap
CNTR13	derivative.h	/^  uint32_t CNTR13;                                 \/**< Counter Register, offset: 0x118 *\/$/;"	m	struct:TSI_MemMap
CNTR15	derivative.h	/^  uint32_t CNTR15;                                 \/**< Counter Register, offset: 0x11C *\/$/;"	m	struct:TSI_MemMap
CNTR3	derivative.h	/^  uint32_t CNTR3;                                  \/**< Counter Register, offset: 0x104 *\/$/;"	m	struct:TSI_MemMap
CNTR5	derivative.h	/^  uint32_t CNTR5;                                  \/**< Counter Register, offset: 0x108 *\/$/;"	m	struct:TSI_MemMap
CNTR7	derivative.h	/^  uint32_t CNTR7;                                  \/**< Counter Register, offset: 0x10C *\/$/;"	m	struct:TSI_MemMap
CNTR9	derivative.h	/^  uint32_t CNTR9;                                  \/**< Counter Register, offset: 0x110 *\/$/;"	m	struct:TSI_MemMap
CNTRLDVR1	derivative.h	/^  uint32_t CNTRLDVR1;                              \/**< Free-running counter reload value, offset: 0x140 *\/$/;"	m	struct:ETM_MemMap
COMBINE	derivative.h	/^  uint32_t COMBINE;                                \/**< Function for Linked Channels, offset: 0x64 *\/$/;"	m	struct:FTM_MemMap
COMP	derivative.h	/^    uint32_t COMP;                                   \/**< Comparator Register 0..Comparator Register 3, array offset: 0x20, array step: 0x10 *\/$/;"	m	struct:DWT_MemMap::__anon19
COMP	derivative.h	/^  uint32_t COMP[8];                                \/**< FlashPatch Comparator Register 0..FlashPatch Comparator Register 7, array offset: 0x8, array step: 0x4 *\/$/;"	m	struct:FPB_MemMap
COMPARATOR	derivative.h	/^  } COMPARATOR[4];$/;"	m	struct:DWT_MemMap	typeref:struct:DWT_MemMap::__anon19
CONF	derivative.h	/^  uint32_t CONF;                                   \/**< Configuration, offset: 0x84 *\/$/;"	m	struct:FTM_MemMap
CONFIGFLAG	derivative.h	/^  uint32_t CONFIGFLAG;                             \/**< Configure Flag Register, offset: 0x180 *\/$/;"	m	struct:USBHS_MemMap
CONTROL	derivative.h	/^  uint32_t CONTROL;                                \/**< Control Register, offset: 0x0 *\/$/;"	m	struct:USBDCD_MemMap
CONTROL	derivative.h	/^  uint8_t CONTROL;                                 \/**< USB OTG Control Register, offset: 0x108 *\/$/;"	m	struct:USB_MemMap
CONTROLS	derivative.h	/^  } CONTROLS[8];$/;"	m	struct:FTM_MemMap	typeref:struct:FTM_MemMap::__anon23
CPACR	derivative.h	/^  uint32_t CPACR;                                  \/**< Debug Fault Status Register, offset: 0xD88 *\/$/;"	m	struct:SCB_MemMap
CPICNT	derivative.h	/^  uint32_t CPICNT;                                 \/**< CPI Count Register, offset: 0x8 *\/$/;"	m	struct:DWT_MemMap
CPUID	derivative.h	/^  uint32_t CPUID;                                  \/**< CPUID Base Register, offset: 0xD00 *\/$/;"	m	struct:SCB_MemMap
CPW	derivative.h	/^  uint8_t CPW;                                     \/**< UART CEA709.1-B Collision Pulse Width, offset: 0x2F *\/$/;"	m	struct:UART_MemMap
CR	derivative.h	/^  uint32_t CR;                                     \/**< Control Register, offset: 0x0 *\/$/;"	m	struct:DMA_MemMap
CR	derivative.h	/^  uint32_t CR;                                     \/**< Control Register, offset: 0xC *\/$/;"	m	struct:MCM_MemMap
CR	derivative.h	/^  uint32_t CR;                                     \/**< Main Control Register, offset: 0x0 *\/$/;"	m	struct:ETM_MemMap
CR	derivative.h	/^  uint32_t CR;                                     \/**< RNGA Control Register, offset: 0x0 *\/$/;"	m	struct:RNG_MemMap
CR	derivative.h	/^  uint32_t CR;                                     \/**< RTC Control Register, offset: 0x10 *\/$/;"	m	struct:RTC_MemMap
CR	derivative.h	/^  uint8_t CR;                                      \/**< OSC Control Register, offset: 0x0 *\/$/;"	m	struct:OSC_MemMap
CR0	derivative.h	/^  uint8_t CR0;                                     \/**< CMP Control Register 0, offset: 0x0 *\/$/;"	m	struct:CMP_MemMap
CR00	derivative.h	/^  uint32_t CR00;                                   \/**< DDR Control Register 0, offset: 0x0 *\/$/;"	m	struct:DDR_MemMap
CR01	derivative.h	/^  uint32_t CR01;                                   \/**< DDR Control Register 1, offset: 0x4 *\/$/;"	m	struct:DDR_MemMap
CR02	derivative.h	/^  uint32_t CR02;                                   \/**< DDR Control Register 2, offset: 0x8 *\/$/;"	m	struct:DDR_MemMap
CR03	derivative.h	/^  uint32_t CR03;                                   \/**< DDR Control Register 3, offset: 0xC *\/$/;"	m	struct:DDR_MemMap
CR04	derivative.h	/^  uint32_t CR04;                                   \/**< DDR Control Register 4, offset: 0x10 *\/$/;"	m	struct:DDR_MemMap
CR05	derivative.h	/^  uint32_t CR05;                                   \/**< DDR Control Register 5, offset: 0x14 *\/$/;"	m	struct:DDR_MemMap
CR06	derivative.h	/^  uint32_t CR06;                                   \/**< DDR Control Register 6, offset: 0x18 *\/$/;"	m	struct:DDR_MemMap
CR07	derivative.h	/^  uint32_t CR07;                                   \/**< DDR Control Register 7, offset: 0x1C *\/$/;"	m	struct:DDR_MemMap
CR08	derivative.h	/^  uint32_t CR08;                                   \/**< DDR Control Register 8, offset: 0x20 *\/$/;"	m	struct:DDR_MemMap
CR09	derivative.h	/^  uint32_t CR09;                                   \/**< DDR Control Register 9, offset: 0x24 *\/$/;"	m	struct:DDR_MemMap
CR1	derivative.h	/^  uint8_t CR1;                                     \/**< CMP Control Register 1, offset: 0x1 *\/$/;"	m	struct:CMP_MemMap
CR10	derivative.h	/^  uint32_t CR10;                                   \/**< DDR Control Register 10, offset: 0x28 *\/$/;"	m	struct:DDR_MemMap
CR11	derivative.h	/^  uint32_t CR11;                                   \/**< DDR Control Register 11, offset: 0x2C *\/$/;"	m	struct:DDR_MemMap
CR12	derivative.h	/^  uint32_t CR12;                                   \/**< DDR Control Register 12, offset: 0x30 *\/$/;"	m	struct:DDR_MemMap
CR13	derivative.h	/^  uint32_t CR13;                                   \/**< DDR Control Register 13, offset: 0x34 *\/$/;"	m	struct:DDR_MemMap
CR14	derivative.h	/^  uint32_t CR14;                                   \/**< DDR Control Register 14, offset: 0x38 *\/$/;"	m	struct:DDR_MemMap
CR15	derivative.h	/^  uint32_t CR15;                                   \/**< DDR Control Register 15, offset: 0x3C *\/$/;"	m	struct:DDR_MemMap
CR16	derivative.h	/^  uint32_t CR16;                                   \/**< DDR Control Register 16, offset: 0x40 *\/$/;"	m	struct:DDR_MemMap
CR17	derivative.h	/^  uint32_t CR17;                                   \/**< DDR Control Register 17, offset: 0x44 *\/$/;"	m	struct:DDR_MemMap
CR18	derivative.h	/^  uint32_t CR18;                                   \/**< DDR Control Register 18, offset: 0x48 *\/$/;"	m	struct:DDR_MemMap
CR19	derivative.h	/^  uint32_t CR19;                                   \/**< DDR Control Register 19, offset: 0x4C *\/$/;"	m	struct:DDR_MemMap
CR20	derivative.h	/^  uint32_t CR20;                                   \/**< DDR Control Register 20, offset: 0x50 *\/$/;"	m	struct:DDR_MemMap
CR21	derivative.h	/^  uint32_t CR21;                                   \/**< DDR Control Register 21, offset: 0x54 *\/$/;"	m	struct:DDR_MemMap
CR22	derivative.h	/^  uint32_t CR22;                                   \/**< DDR Control Register 22, offset: 0x58 *\/$/;"	m	struct:DDR_MemMap
CR23	derivative.h	/^  uint32_t CR23;                                   \/**< DDR Control Register 23, offset: 0x5C *\/$/;"	m	struct:DDR_MemMap
CR24	derivative.h	/^  uint32_t CR24;                                   \/**< DDR Control Register 24, offset: 0x60 *\/$/;"	m	struct:DDR_MemMap
CR25	derivative.h	/^  uint32_t CR25;                                   \/**< DDR Control Register 25, offset: 0x64 *\/$/;"	m	struct:DDR_MemMap
CR26	derivative.h	/^  uint32_t CR26;                                   \/**< DDR Control Register 26, offset: 0x68 *\/$/;"	m	struct:DDR_MemMap
CR27	derivative.h	/^  uint32_t CR27;                                   \/**< DDR Control Register 27, offset: 0x6C *\/$/;"	m	struct:DDR_MemMap
CR28	derivative.h	/^  uint32_t CR28;                                   \/**< DDR Control Register 28, offset: 0x70 *\/$/;"	m	struct:DDR_MemMap
CR29	derivative.h	/^  uint32_t CR29;                                   \/**< DDR Control Register 29, offset: 0x74 *\/$/;"	m	struct:DDR_MemMap
CR30	derivative.h	/^  uint32_t CR30;                                   \/**< DDR Control Register 30, offset: 0x78 *\/$/;"	m	struct:DDR_MemMap
CR31	derivative.h	/^  uint32_t CR31;                                   \/**< DDR Control Register 31, offset: 0x7C *\/$/;"	m	struct:DDR_MemMap
CR32	derivative.h	/^  uint32_t CR32;                                   \/**< DDR Control Register 32, offset: 0x80 *\/$/;"	m	struct:DDR_MemMap
CR33	derivative.h	/^  uint32_t CR33;                                   \/**< DDR Control Register 33, offset: 0x84 *\/$/;"	m	struct:DDR_MemMap
CR34	derivative.h	/^  uint32_t CR34;                                   \/**< DDR Control Register 34, offset: 0x88 *\/$/;"	m	struct:DDR_MemMap
CR35	derivative.h	/^  uint32_t CR35;                                   \/**< DDR Control Register 35, offset: 0x8C *\/$/;"	m	struct:DDR_MemMap
CR36	derivative.h	/^  uint32_t CR36;                                   \/**< DDR Control Register 36, offset: 0x90 *\/$/;"	m	struct:DDR_MemMap
CR37	derivative.h	/^  uint32_t CR37;                                   \/**< DDR Control Register 37, offset: 0x94 *\/$/;"	m	struct:DDR_MemMap
CR38	derivative.h	/^  uint32_t CR38;                                   \/**< DDR Control Register 38, offset: 0x98 *\/$/;"	m	struct:DDR_MemMap
CR39	derivative.h	/^  uint32_t CR39;                                   \/**< DDR Control Register 39, offset: 0x9C *\/$/;"	m	struct:DDR_MemMap
CR40	derivative.h	/^  uint32_t CR40;                                   \/**< DDR Control Register 40, offset: 0xA0 *\/$/;"	m	struct:DDR_MemMap
CR41	derivative.h	/^  uint32_t CR41;                                   \/**< DDR Control Register 41, offset: 0xA4 *\/$/;"	m	struct:DDR_MemMap
CR42	derivative.h	/^  uint32_t CR42;                                   \/**< DDR Control Register 42, offset: 0xA8 *\/$/;"	m	struct:DDR_MemMap
CR43	derivative.h	/^  uint32_t CR43;                                   \/**< DDR Control Register 43, offset: 0xAC *\/$/;"	m	struct:DDR_MemMap
CR44	derivative.h	/^  uint32_t CR44;                                   \/**< DDR Control Register 44, offset: 0xB0 *\/$/;"	m	struct:DDR_MemMap
CR45	derivative.h	/^  uint32_t CR45;                                   \/**< DDR Control Register 45, offset: 0xB4 *\/$/;"	m	struct:DDR_MemMap
CR46	derivative.h	/^  uint32_t CR46;                                   \/**< DDR Control Register 46, offset: 0xB8 *\/$/;"	m	struct:DDR_MemMap
CR47	derivative.h	/^  uint32_t CR47;                                   \/**< DDR Control Register 47, offset: 0xBC *\/$/;"	m	struct:DDR_MemMap
CR48	derivative.h	/^  uint32_t CR48;                                   \/**< DDR Control Register 48, offset: 0xC0 *\/$/;"	m	struct:DDR_MemMap
CR49	derivative.h	/^  uint32_t CR49;                                   \/**< DDR Control Register 49, offset: 0xC4 *\/$/;"	m	struct:DDR_MemMap
CR50	derivative.h	/^  uint32_t CR50;                                   \/**< DDR Control Register 50, offset: 0xC8 *\/$/;"	m	struct:DDR_MemMap
CR51	derivative.h	/^  uint32_t CR51;                                   \/**< DDR Control Register 51, offset: 0xCC *\/$/;"	m	struct:DDR_MemMap
CR52	derivative.h	/^  uint32_t CR52;                                   \/**< DDR Control Register 52, offset: 0xD0 *\/$/;"	m	struct:DDR_MemMap
CR53	derivative.h	/^  uint32_t CR53;                                   \/**< DDR Control Register 53, offset: 0xD4 *\/$/;"	m	struct:DDR_MemMap
CR54	derivative.h	/^  uint32_t CR54;                                   \/**< DDR Control Register 54, offset: 0xD8 *\/$/;"	m	struct:DDR_MemMap
CR55	derivative.h	/^  uint32_t CR55;                                   \/**< DDR Control Register 55, offset: 0xDC *\/$/;"	m	struct:DDR_MemMap
CR56	derivative.h	/^  uint32_t CR56;                                   \/**< DDR Control Register 56, offset: 0xE0 *\/$/;"	m	struct:DDR_MemMap
CR57	derivative.h	/^  uint32_t CR57;                                   \/**< DDR Control Register 57, offset: 0xE4 *\/$/;"	m	struct:DDR_MemMap
CR58	derivative.h	/^  uint32_t CR58;                                   \/**< DDR Control Register 58, offset: 0xE8 *\/$/;"	m	struct:DDR_MemMap
CR59	derivative.h	/^  uint32_t CR59;                                   \/**< DDR Control Register 59, offset: 0xEC *\/$/;"	m	struct:DDR_MemMap
CR60	derivative.h	/^  uint32_t CR60;                                   \/**< DDR Control Register 60, offset: 0xF0 *\/$/;"	m	struct:DDR_MemMap
CR61	derivative.h	/^  uint32_t CR61;                                   \/**< DDR Control Register 61, offset: 0xF4 *\/$/;"	m	struct:DDR_MemMap
CR62	derivative.h	/^  uint32_t CR62;                                   \/**< DDR Control Register 62, offset: 0xF8 *\/$/;"	m	struct:DDR_MemMap
CR63	derivative.h	/^  uint32_t CR63;                                   \/**< DDR Control Register 63, offset: 0xFC *\/$/;"	m	struct:DDR_MemMap
CRC	derivative.h	/^    uint32_t CRC;                                    \/**< CRC Data Register, offset: 0x0 *\/$/;"	m	union:CRC_MemMap::__anon5
CRCH	derivative.h	/^      uint16_t CRCH;                                   \/**< CRC_CRCH register., offset: 0x2 *\/$/;"	m	struct:CRC_MemMap::__anon5::__anon6
CRCHL	derivative.h	/^      uint8_t CRCHL;                                   \/**< CRC_CRCHL register., offset: 0x2 *\/$/;"	m	struct:CRC_MemMap::__anon5::__anon7
CRCHU	derivative.h	/^      uint8_t CRCHU;                                   \/**< CRC_CRCHU register., offset: 0x3 *\/$/;"	m	struct:CRC_MemMap::__anon5::__anon7
CRCL	derivative.h	/^      uint16_t CRCL;                                   \/**< CRC_CRCL register., offset: 0x0 *\/$/;"	m	struct:CRC_MemMap::__anon5::__anon6
CRCLL	derivative.h	/^      uint8_t CRCLL;                                   \/**< CRC_CRCLL register., offset: 0x0 *\/$/;"	m	struct:CRC_MemMap::__anon5::__anon7
CRCLU	derivative.h	/^      uint8_t CRCLU;                                   \/**< CRC_CRCLU register., offset: 0x1 *\/$/;"	m	struct:CRC_MemMap::__anon5::__anon7
CRCR	derivative.h	/^  uint32_t CRCR;                                   \/**< CRC Register, offset: 0x44 *\/$/;"	m	struct:CAN_MemMap
CRC_BASE_PTR	derivative.h	3301;"	d
CRC_BASE_PTRS	derivative.h	3303;"	d
CRC_CRC	derivative.h	3317;"	d
CRC_CRCH	derivative.h	3321;"	d
CRC_CRCHL	derivative.h	3322;"	d
CRC_CRCHL_CRCHL	derivative.h	3231;"	d
CRC_CRCHL_CRCHL_MASK	derivative.h	3229;"	d
CRC_CRCHL_CRCHL_SHIFT	derivative.h	3230;"	d
CRC_CRCHL_REG	derivative.h	3173;"	d
CRC_CRCHU	derivative.h	3323;"	d
CRC_CRCHU_CRCHU	derivative.h	3235;"	d
CRC_CRCHU_CRCHU_MASK	derivative.h	3233;"	d
CRC_CRCHU_CRCHU_SHIFT	derivative.h	3234;"	d
CRC_CRCHU_REG	derivative.h	3174;"	d
CRC_CRCH_CRCH	derivative.h	3206;"	d
CRC_CRCH_CRCH_MASK	derivative.h	3204;"	d
CRC_CRCH_CRCH_SHIFT	derivative.h	3205;"	d
CRC_CRCH_REG	derivative.h	3169;"	d
CRC_CRCL	derivative.h	3318;"	d
CRC_CRCLL	derivative.h	3319;"	d
CRC_CRCLL_CRCLL	derivative.h	3223;"	d
CRC_CRCLL_CRCLL_MASK	derivative.h	3221;"	d
CRC_CRCLL_CRCLL_SHIFT	derivative.h	3222;"	d
CRC_CRCLL_REG	derivative.h	3171;"	d
CRC_CRCLU	derivative.h	3320;"	d
CRC_CRCLU_CRCLU	derivative.h	3227;"	d
CRC_CRCLU_CRCLU_MASK	derivative.h	3225;"	d
CRC_CRCLU_CRCLU_SHIFT	derivative.h	3226;"	d
CRC_CRCLU_REG	derivative.h	3172;"	d
CRC_CRCL_CRCL	derivative.h	3202;"	d
CRC_CRCL_CRCL_MASK	derivative.h	3200;"	d
CRC_CRCL_CRCL_SHIFT	derivative.h	3201;"	d
CRC_CRCL_REG	derivative.h	3168;"	d
CRC_CRC_HL	derivative.h	3216;"	d
CRC_CRC_HL_MASK	derivative.h	3214;"	d
CRC_CRC_HL_SHIFT	derivative.h	3215;"	d
CRC_CRC_HU	derivative.h	3219;"	d
CRC_CRC_HU_MASK	derivative.h	3217;"	d
CRC_CRC_HU_SHIFT	derivative.h	3218;"	d
CRC_CRC_LL	derivative.h	3210;"	d
CRC_CRC_LL_MASK	derivative.h	3208;"	d
CRC_CRC_LL_SHIFT	derivative.h	3209;"	d
CRC_CRC_LU	derivative.h	3213;"	d
CRC_CRC_LU_MASK	derivative.h	3211;"	d
CRC_CRC_LU_SHIFT	derivative.h	3212;"	d
CRC_CRC_REG	derivative.h	3170;"	d
CRC_CTRL	derivative.h	3331;"	d
CRC_CTRLHU	derivative.h	3332;"	d
CRC_CTRLHU_FXOR_MASK	derivative.h	3285;"	d
CRC_CTRLHU_FXOR_SHIFT	derivative.h	3286;"	d
CRC_CTRLHU_REG	derivative.h	3183;"	d
CRC_CTRLHU_TCRC_MASK	derivative.h	3281;"	d
CRC_CTRLHU_TCRC_SHIFT	derivative.h	3282;"	d
CRC_CTRLHU_TOT	derivative.h	3292;"	d
CRC_CTRLHU_TOTR	derivative.h	3289;"	d
CRC_CTRLHU_TOTR_MASK	derivative.h	3287;"	d
CRC_CTRLHU_TOTR_SHIFT	derivative.h	3288;"	d
CRC_CTRLHU_TOT_MASK	derivative.h	3290;"	d
CRC_CTRLHU_TOT_SHIFT	derivative.h	3291;"	d
CRC_CTRLHU_WAS_MASK	derivative.h	3283;"	d
CRC_CTRLHU_WAS_SHIFT	derivative.h	3284;"	d
CRC_CTRL_FXOR_MASK	derivative.h	3272;"	d
CRC_CTRL_FXOR_SHIFT	derivative.h	3273;"	d
CRC_CTRL_REG	derivative.h	3182;"	d
CRC_CTRL_TCRC_MASK	derivative.h	3268;"	d
CRC_CTRL_TCRC_SHIFT	derivative.h	3269;"	d
CRC_CTRL_TOT	derivative.h	3279;"	d
CRC_CTRL_TOTR	derivative.h	3276;"	d
CRC_CTRL_TOTR_MASK	derivative.h	3274;"	d
CRC_CTRL_TOTR_SHIFT	derivative.h	3275;"	d
CRC_CTRL_TOT_MASK	derivative.h	3277;"	d
CRC_CTRL_TOT_SHIFT	derivative.h	3278;"	d
CRC_CTRL_WAS_MASK	derivative.h	3270;"	d
CRC_CTRL_WAS_SHIFT	derivative.h	3271;"	d
CRC_GPOLY	derivative.h	3324;"	d
CRC_GPOLYH	derivative.h	3328;"	d
CRC_GPOLYHL	derivative.h	3329;"	d
CRC_GPOLYHL_GPOLYHL	derivative.h	3262;"	d
CRC_GPOLYHL_GPOLYHL_MASK	derivative.h	3260;"	d
CRC_GPOLYHL_GPOLYHL_SHIFT	derivative.h	3261;"	d
CRC_GPOLYHL_REG	derivative.h	3180;"	d
CRC_GPOLYHU	derivative.h	3330;"	d
CRC_GPOLYHU_GPOLYHU	derivative.h	3266;"	d
CRC_GPOLYHU_GPOLYHU_MASK	derivative.h	3264;"	d
CRC_GPOLYHU_GPOLYHU_SHIFT	derivative.h	3265;"	d
CRC_GPOLYHU_REG	derivative.h	3181;"	d
CRC_GPOLYH_GPOLYH	derivative.h	3243;"	d
CRC_GPOLYH_GPOLYH_MASK	derivative.h	3241;"	d
CRC_GPOLYH_GPOLYH_SHIFT	derivative.h	3242;"	d
CRC_GPOLYH_REG	derivative.h	3176;"	d
CRC_GPOLYL	derivative.h	3325;"	d
CRC_GPOLYLL	derivative.h	3326;"	d
CRC_GPOLYLL_GPOLYLL	derivative.h	3254;"	d
CRC_GPOLYLL_GPOLYLL_MASK	derivative.h	3252;"	d
CRC_GPOLYLL_GPOLYLL_SHIFT	derivative.h	3253;"	d
CRC_GPOLYLL_REG	derivative.h	3178;"	d
CRC_GPOLYLU	derivative.h	3327;"	d
CRC_GPOLYLU_GPOLYLU	derivative.h	3258;"	d
CRC_GPOLYLU_GPOLYLU_MASK	derivative.h	3256;"	d
CRC_GPOLYLU_GPOLYLU_SHIFT	derivative.h	3257;"	d
CRC_GPOLYLU_REG	derivative.h	3179;"	d
CRC_GPOLYL_GPOLYL	derivative.h	3239;"	d
CRC_GPOLYL_GPOLYL_MASK	derivative.h	3237;"	d
CRC_GPOLYL_GPOLYL_SHIFT	derivative.h	3238;"	d
CRC_GPOLYL_REG	derivative.h	3175;"	d
CRC_GPOLY_HIGH	derivative.h	3250;"	d
CRC_GPOLY_HIGH_MASK	derivative.h	3248;"	d
CRC_GPOLY_HIGH_SHIFT	derivative.h	3249;"	d
CRC_GPOLY_LOW	derivative.h	3247;"	d
CRC_GPOLY_LOW_MASK	derivative.h	3245;"	d
CRC_GPOLY_LOW_SHIFT	derivative.h	3246;"	d
CRC_GPOLY_REG	derivative.h	3177;"	d
CRC_MemMap	derivative.h	/^typedef struct CRC_MemMap {$/;"	s
CRC_MemMapPtr	derivative.h	/^} volatile *CRC_MemMapPtr;$/;"	t
CRS	derivative.h	/^    uint32_t CRS;                                    \/**< Control Register, array offset: 0x10, array step: 0x100 *\/$/;"	m	struct:AXBS_MemMap::__anon3
CS	derivative.h	/^    uint32_t CS;                                     \/**< Message Buffer 0 CS Register..Message Buffer 15 CS Register, array offset: 0x80, array step: 0x10 *\/$/;"	m	struct:CAN_MemMap::__anon4
CS	derivative.h	/^  } CS[6];$/;"	m	struct:FB_MemMap	typeref:struct:FB_MemMap::__anon21
CSAR	derivative.h	/^    uint32_t CSAR;                                   \/**< Chip select address register, array offset: 0x0, array step: 0xC *\/$/;"	m	struct:FB_MemMap::__anon21
CSCR	derivative.h	/^    uint32_t CSCR;                                   \/**< Chip select control register, array offset: 0x8, array step: 0xC *\/$/;"	m	struct:FB_MemMap::__anon21
CSMR	derivative.h	/^    uint32_t CSMR;                                   \/**< Chip select mask register, array offset: 0x4, array step: 0xC *\/$/;"	m	struct:FB_MemMap::__anon21
CSPMCR	derivative.h	/^  uint32_t CSPMCR;                                 \/**< Chip select port multiplexing control register, offset: 0x60 *\/$/;"	m	struct:FB_MemMap
CSPSR	derivative.h	/^  uint32_t CSPSR;                                  \/**< Current Parallel Port Size Register, offset: 0x4 *\/$/;"	m	struct:TPIU_MemMap
CSR	derivative.h	/^    uint16_t CSR;                                    \/**< TCD Control and Status, array offset: 0x101C, array step: 0x20 *\/$/;"	m	struct:DMA_MemMap::__anon15
CSR	derivative.h	/^  uint32_t CSR;                                    \/**< Low Power Timer Control Status Register, offset: 0x0 *\/$/;"	m	struct:LPTMR_MemMap
CSR	derivative.h	/^  uint32_t CSR;                                    \/**< SysTick Control and Status Register, offset: 0x0 *\/$/;"	m	struct:SysTick_MemMap
CTAR	derivative.h	/^    uint32_t CTAR[2];                                \/**< DSPI Clock and Transfer Attributes Register (In Master Mode), array offset: 0xC, array step: 0x4 *\/$/;"	m	union:SPI_MemMap::__anon29
CTAR_SLAVE	derivative.h	/^    uint32_t CTAR_SLAVE[1];                          \/**< DSPI Clock and Transfer Attributes Register (In Slave Mode), array offset: 0xC, array step: 0x4 *\/$/;"	m	union:SPI_MemMap::__anon29
CTL	derivative.h	/^  uint32_t CTL;                                    \/**< Control Register, offset: 0x20 *\/$/;"	m	struct:ETB_MemMap
CTL	derivative.h	/^  uint8_t CTL;                                     \/**< Control Register, offset: 0x94 *\/$/;"	m	struct:USB_MemMap
CTRL	derivative.h	/^    uint32_t CTRL;                                   \/**< CRC Control Register, offset: 0x8 *\/$/;"	m	union:CRC_MemMap::__anon11
CTRL	derivative.h	/^  uint32_t CTRL;                                   \/**< Control Register, offset: 0x0 *\/$/;"	m	struct:DWT_MemMap
CTRL	derivative.h	/^  uint32_t CTRL;                                   \/**< FlashPatch Control Register, offset: 0x0 *\/$/;"	m	struct:FPB_MemMap
CTRL	derivative.h	/^  uint8_t CTRL;                                    \/**< Control Register, offset: 0x0 *\/$/;"	m	struct:EWM_MemMap
CTRL1	derivative.h	/^  uint32_t CTRL1;                                  \/**< Control 1 Register, offset: 0x4 *\/$/;"	m	struct:CAN_MemMap
CTRL2	derivative.h	/^  uint32_t CTRL2;                                  \/**< Control 2 Register, offset: 0x34 *\/$/;"	m	struct:CAN_MemMap
CTRLHU	derivative.h	/^      uint8_t CTRLHU;                                  \/**< CRC_CTRLHU register., offset: 0xB *\/$/;"	m	struct:CRC_MemMap::__anon11::__anon12
CTRL_ACCESS8BIT	derivative.h	/^    } CTRL_ACCESS8BIT;$/;"	m	union:CRC_MemMap::__anon11	typeref:struct:CRC_MemMap::__anon11::__anon12
CV1	derivative.h	/^  uint32_t CV1;                                    \/**< Compare value registers, offset: 0x18 *\/$/;"	m	struct:ADC_MemMap
CV2	derivative.h	/^  uint32_t CV2;                                    \/**< Compare value registers, offset: 0x1C *\/$/;"	m	struct:ADC_MemMap
CVAL	derivative.h	/^    uint32_t CVAL;                                   \/**< Current Timer Value Register, array offset: 0x104, array step: 0x10 *\/$/;"	m	struct:PIT_MemMap::__anon28
CVR	derivative.h	/^  uint32_t CVR;                                    \/**< SysTick Current Value Register, offset: 0x8 *\/$/;"	m	struct:SysTick_MemMap
CYCCNT	derivative.h	/^  uint32_t CYCCNT;                                 \/**< Cycle Count Register, offset: 0x4 *\/$/;"	m	struct:DWT_MemMap
CnSC	derivative.h	/^    uint32_t CnSC;                                   \/**< Channel (n) Status and Control, array offset: 0xC, array step: 0x8 *\/$/;"	m	struct:FTM_MemMap::__anon23
CnV	derivative.h	/^    uint32_t CnV;                                    \/**< Channel (n) Value, array offset: 0x10, array step: 0x8 *\/$/;"	m	struct:FTM_MemMap::__anon23
CoreDebug_BASE_PTR	derivative.h	3403;"	d
CoreDebug_BASE_PTRS	derivative.h	3405;"	d
CoreDebug_MemMap	derivative.h	/^typedef struct CoreDebug_MemMap {$/;"	s
CoreDebug_MemMapPtr	derivative.h	/^} volatile *CoreDebug_MemMapPtr;$/;"	t
CoreDebug_base_DCRDR_REG	derivative.h	3378;"	d
CoreDebug_base_DCRSR_REG	derivative.h	3377;"	d
CoreDebug_base_DEMCR_REG	derivative.h	3379;"	d
CoreDebug_base_DHCSR_Read_REG	derivative.h	3375;"	d
CoreDebug_base_DHCSR_Write_REG	derivative.h	3376;"	d
D	derivative.h	/^  uint8_t D;                                       \/**< I2C Data I\/O register, offset: 0x4 *\/$/;"	m	struct:I2C_MemMap
D	derivative.h	/^  uint8_t D;                                       \/**< UART Data Register, offset: 0x7 *\/$/;"	m	struct:UART_MemMap
DAC	derivative.h	/^  } DAC[2];$/;"	m	struct:PDB_MemMap	typeref:struct:PDB_MemMap::__anon27
DAC0_BASE_PTR	derivative.h	3546;"	d
DAC0_C0	derivative.h	3597;"	d
DAC0_C1	derivative.h	3598;"	d
DAC0_C2	derivative.h	3599;"	d
DAC0_DAT0H	derivative.h	3565;"	d
DAC0_DAT0L	derivative.h	3564;"	d
DAC0_DAT10H	derivative.h	3585;"	d
DAC0_DAT10L	derivative.h	3584;"	d
DAC0_DAT11H	derivative.h	3587;"	d
DAC0_DAT11L	derivative.h	3586;"	d
DAC0_DAT12H	derivative.h	3589;"	d
DAC0_DAT12L	derivative.h	3588;"	d
DAC0_DAT13H	derivative.h	3591;"	d
DAC0_DAT13L	derivative.h	3590;"	d
DAC0_DAT14H	derivative.h	3593;"	d
DAC0_DAT14L	derivative.h	3592;"	d
DAC0_DAT15H	derivative.h	3595;"	d
DAC0_DAT15L	derivative.h	3594;"	d
DAC0_DAT1H	derivative.h	3567;"	d
DAC0_DAT1L	derivative.h	3566;"	d
DAC0_DAT2H	derivative.h	3569;"	d
DAC0_DAT2L	derivative.h	3568;"	d
DAC0_DAT3H	derivative.h	3571;"	d
DAC0_DAT3L	derivative.h	3570;"	d
DAC0_DAT4H	derivative.h	3573;"	d
DAC0_DAT4L	derivative.h	3572;"	d
DAC0_DAT5H	derivative.h	3575;"	d
DAC0_DAT5L	derivative.h	3574;"	d
DAC0_DAT6H	derivative.h	3577;"	d
DAC0_DAT6L	derivative.h	3576;"	d
DAC0_DAT7H	derivative.h	3579;"	d
DAC0_DAT7L	derivative.h	3578;"	d
DAC0_DAT8H	derivative.h	3581;"	d
DAC0_DAT8L	derivative.h	3580;"	d
DAC0_DAT9H	derivative.h	3583;"	d
DAC0_DAT9L	derivative.h	3582;"	d
DAC0_DATH	derivative.h	3641;"	d
DAC0_DATL	derivative.h	3639;"	d
DAC0_SR	derivative.h	3596;"	d
DAC1_BASE_PTR	derivative.h	3548;"	d
DAC1_C0	derivative.h	3634;"	d
DAC1_C1	derivative.h	3635;"	d
DAC1_C2	derivative.h	3636;"	d
DAC1_DAT0H	derivative.h	3602;"	d
DAC1_DAT0L	derivative.h	3601;"	d
DAC1_DAT10H	derivative.h	3622;"	d
DAC1_DAT10L	derivative.h	3621;"	d
DAC1_DAT11H	derivative.h	3624;"	d
DAC1_DAT11L	derivative.h	3623;"	d
DAC1_DAT12H	derivative.h	3626;"	d
DAC1_DAT12L	derivative.h	3625;"	d
DAC1_DAT13H	derivative.h	3628;"	d
DAC1_DAT13L	derivative.h	3627;"	d
DAC1_DAT14H	derivative.h	3630;"	d
DAC1_DAT14L	derivative.h	3629;"	d
DAC1_DAT15H	derivative.h	3632;"	d
DAC1_DAT15L	derivative.h	3631;"	d
DAC1_DAT1H	derivative.h	3604;"	d
DAC1_DAT1L	derivative.h	3603;"	d
DAC1_DAT2H	derivative.h	3606;"	d
DAC1_DAT2L	derivative.h	3605;"	d
DAC1_DAT3H	derivative.h	3608;"	d
DAC1_DAT3L	derivative.h	3607;"	d
DAC1_DAT4H	derivative.h	3610;"	d
DAC1_DAT4L	derivative.h	3609;"	d
DAC1_DAT5H	derivative.h	3612;"	d
DAC1_DAT5L	derivative.h	3611;"	d
DAC1_DAT6H	derivative.h	3614;"	d
DAC1_DAT6L	derivative.h	3613;"	d
DAC1_DAT7H	derivative.h	3616;"	d
DAC1_DAT7L	derivative.h	3615;"	d
DAC1_DAT8H	derivative.h	3618;"	d
DAC1_DAT8L	derivative.h	3617;"	d
DAC1_DAT9H	derivative.h	3620;"	d
DAC1_DAT9L	derivative.h	3619;"	d
DAC1_DATH	derivative.h	3642;"	d
DAC1_DATL	derivative.h	3640;"	d
DAC1_SR	derivative.h	3633;"	d
DACCR	derivative.h	/^  uint8_t DACCR;                                   \/**< DAC Control Register, offset: 0x4 *\/$/;"	m	struct:CMP_MemMap
DAC_BASE_PTRS	derivative.h	3550;"	d
DAC_C0_DACBBIEN_MASK	derivative.h	3504;"	d
DAC_C0_DACBBIEN_SHIFT	derivative.h	3505;"	d
DAC_C0_DACBTIEN_MASK	derivative.h	3506;"	d
DAC_C0_DACBTIEN_SHIFT	derivative.h	3507;"	d
DAC_C0_DACBWIEN_MASK	derivative.h	3508;"	d
DAC_C0_DACBWIEN_SHIFT	derivative.h	3509;"	d
DAC_C0_DACEN_MASK	derivative.h	3518;"	d
DAC_C0_DACEN_SHIFT	derivative.h	3519;"	d
DAC_C0_DACRFS_MASK	derivative.h	3516;"	d
DAC_C0_DACRFS_SHIFT	derivative.h	3517;"	d
DAC_C0_DACSWTRG_MASK	derivative.h	3512;"	d
DAC_C0_DACSWTRG_SHIFT	derivative.h	3513;"	d
DAC_C0_DACTRGSEL_MASK	derivative.h	3514;"	d
DAC_C0_DACTRGSEL_SHIFT	derivative.h	3515;"	d
DAC_C0_LPEN_MASK	derivative.h	3510;"	d
DAC_C0_LPEN_SHIFT	derivative.h	3511;"	d
DAC_C0_REG	derivative.h	3470;"	d
DAC_C1_DACBFEN_MASK	derivative.h	3521;"	d
DAC_C1_DACBFEN_SHIFT	derivative.h	3522;"	d
DAC_C1_DACBFMD	derivative.h	3525;"	d
DAC_C1_DACBFMD_MASK	derivative.h	3523;"	d
DAC_C1_DACBFMD_SHIFT	derivative.h	3524;"	d
DAC_C1_DACBFWM	derivative.h	3528;"	d
DAC_C1_DACBFWM_MASK	derivative.h	3526;"	d
DAC_C1_DACBFWM_SHIFT	derivative.h	3527;"	d
DAC_C1_DMAEN_MASK	derivative.h	3529;"	d
DAC_C1_DMAEN_SHIFT	derivative.h	3530;"	d
DAC_C1_REG	derivative.h	3471;"	d
DAC_C2_DACBFRP	derivative.h	3537;"	d
DAC_C2_DACBFRP_MASK	derivative.h	3535;"	d
DAC_C2_DACBFRP_SHIFT	derivative.h	3536;"	d
DAC_C2_DACBFUP	derivative.h	3534;"	d
DAC_C2_DACBFUP_MASK	derivative.h	3532;"	d
DAC_C2_DACBFUP_SHIFT	derivative.h	3533;"	d
DAC_C2_REG	derivative.h	3472;"	d
DAC_DATH_DATA	derivative.h	3495;"	d
DAC_DATH_DATA_MASK	derivative.h	3493;"	d
DAC_DATH_DATA_SHIFT	derivative.h	3494;"	d
DAC_DATH_REG	derivative.h	3468;"	d
DAC_DATL_DATA	derivative.h	3491;"	d
DAC_DATL_DATA_MASK	derivative.h	3489;"	d
DAC_DATL_DATA_SHIFT	derivative.h	3490;"	d
DAC_DATL_REG	derivative.h	3467;"	d
DAC_MemMap	derivative.h	/^typedef struct DAC_MemMap {$/;"	s
DAC_MemMapPtr	derivative.h	/^} volatile *DAC_MemMapPtr;$/;"	t
DAC_SR_DACBFRPBF_MASK	derivative.h	3497;"	d
DAC_SR_DACBFRPBF_SHIFT	derivative.h	3498;"	d
DAC_SR_DACBFRPTF_MASK	derivative.h	3499;"	d
DAC_SR_DACBFRPTF_SHIFT	derivative.h	3500;"	d
DAC_SR_DACBFWMF_MASK	derivative.h	3501;"	d
DAC_SR_DACBFWMF_SHIFT	derivative.h	3502;"	d
DAC_SR_REG	derivative.h	3469;"	d
DADDR	derivative.h	/^    uint32_t DADDR;                                  \/**< TCD Destination Address, array offset: 0x1010, array step: 0x20 *\/$/;"	m	struct:DMA_MemMap::__anon15
DAT	derivative.h	/^  } DAT[16];$/;"	m	struct:DAC_MemMap	typeref:struct:DAC_MemMap::__anon14
DATA_LM	derivative.h	/^    uint32_t DATA_LM;                                \/**< Cache Data Storage (lowermost word), array offset: 0x20C, array step: index*0x40, index2*0x10 *\/$/;"	m	struct:FMC_MemMap::__anon22
DATA_ML	derivative.h	/^    uint32_t DATA_ML;                                \/**< Cache Data Storage (mid-lower word), array offset: 0x208, array step: index*0x40, index2*0x10 *\/$/;"	m	struct:FMC_MemMap::__anon22
DATA_MU	derivative.h	/^    uint32_t DATA_MU;                                \/**< Cache Data Storage (mid-upper word), array offset: 0x204, array step: index*0x40, index2*0x10 *\/$/;"	m	struct:FMC_MemMap::__anon22
DATA_UM	derivative.h	/^    uint32_t DATA_UM;                                \/**< Cache Data Storage (uppermost word), array offset: 0x200, array step: index*0x40, index2*0x10 *\/$/;"	m	struct:FMC_MemMap::__anon22
DATH	derivative.h	/^    uint8_t DATH;                                    \/**< DAC Data High Register, array offset: 0x1, array step: 0x2 *\/$/;"	m	struct:DAC_MemMap::__anon14
DATL	derivative.h	/^    uint8_t DATL;                                    \/**< DAC Data Low Register, array offset: 0x0, array step: 0x2 *\/$/;"	m	struct:DAC_MemMap::__anon14
DATPORT	derivative.h	/^  uint32_t DATPORT;                                \/**< Buffer Data Port Register, offset: 0x20 *\/$/;"	m	struct:SDHC_MemMap
DCCPARAMS	derivative.h	/^  uint32_t DCCPARAMS;                              \/**< Device Controller Capability Parameters, offset: 0x124 *\/$/;"	m	struct:USBHS_MemMap
DCHPRI0	derivative.h	/^  uint8_t DCHPRI0;                                 \/**< Channel n Priority Register, offset: 0x103 *\/$/;"	m	struct:DMA_MemMap
DCHPRI1	derivative.h	/^  uint8_t DCHPRI1;                                 \/**< Channel n Priority Register, offset: 0x102 *\/$/;"	m	struct:DMA_MemMap
DCHPRI10	derivative.h	/^  uint8_t DCHPRI10;                                \/**< Channel n Priority Register, offset: 0x109 *\/$/;"	m	struct:DMA_MemMap
DCHPRI11	derivative.h	/^  uint8_t DCHPRI11;                                \/**< Channel n Priority Register, offset: 0x108 *\/$/;"	m	struct:DMA_MemMap
DCHPRI12	derivative.h	/^  uint8_t DCHPRI12;                                \/**< Channel n Priority Register, offset: 0x10F *\/$/;"	m	struct:DMA_MemMap
DCHPRI13	derivative.h	/^  uint8_t DCHPRI13;                                \/**< Channel n Priority Register, offset: 0x10E *\/$/;"	m	struct:DMA_MemMap
DCHPRI14	derivative.h	/^  uint8_t DCHPRI14;                                \/**< Channel n Priority Register, offset: 0x10D *\/$/;"	m	struct:DMA_MemMap
DCHPRI15	derivative.h	/^  uint8_t DCHPRI15;                                \/**< Channel n Priority Register, offset: 0x10C *\/$/;"	m	struct:DMA_MemMap
DCHPRI16	derivative.h	/^  uint8_t DCHPRI16;                                \/**< Channel n Priority Register, offset: 0x113 *\/$/;"	m	struct:DMA_MemMap
DCHPRI17	derivative.h	/^  uint8_t DCHPRI17;                                \/**< Channel n Priority Register, offset: 0x112 *\/$/;"	m	struct:DMA_MemMap
DCHPRI18	derivative.h	/^  uint8_t DCHPRI18;                                \/**< Channel n Priority Register, offset: 0x111 *\/$/;"	m	struct:DMA_MemMap
DCHPRI19	derivative.h	/^  uint8_t DCHPRI19;                                \/**< Channel n Priority Register, offset: 0x110 *\/$/;"	m	struct:DMA_MemMap
DCHPRI2	derivative.h	/^  uint8_t DCHPRI2;                                 \/**< Channel n Priority Register, offset: 0x101 *\/$/;"	m	struct:DMA_MemMap
DCHPRI20	derivative.h	/^  uint8_t DCHPRI20;                                \/**< Channel n Priority Register, offset: 0x117 *\/$/;"	m	struct:DMA_MemMap
DCHPRI21	derivative.h	/^  uint8_t DCHPRI21;                                \/**< Channel n Priority Register, offset: 0x116 *\/$/;"	m	struct:DMA_MemMap
DCHPRI22	derivative.h	/^  uint8_t DCHPRI22;                                \/**< Channel n Priority Register, offset: 0x115 *\/$/;"	m	struct:DMA_MemMap
DCHPRI23	derivative.h	/^  uint8_t DCHPRI23;                                \/**< Channel n Priority Register, offset: 0x114 *\/$/;"	m	struct:DMA_MemMap
DCHPRI24	derivative.h	/^  uint8_t DCHPRI24;                                \/**< Channel n Priority Register, offset: 0x11B *\/$/;"	m	struct:DMA_MemMap
DCHPRI25	derivative.h	/^  uint8_t DCHPRI25;                                \/**< Channel n Priority Register, offset: 0x11A *\/$/;"	m	struct:DMA_MemMap
DCHPRI26	derivative.h	/^  uint8_t DCHPRI26;                                \/**< Channel n Priority Register, offset: 0x119 *\/$/;"	m	struct:DMA_MemMap
DCHPRI27	derivative.h	/^  uint8_t DCHPRI27;                                \/**< Channel n Priority Register, offset: 0x118 *\/$/;"	m	struct:DMA_MemMap
DCHPRI28	derivative.h	/^  uint8_t DCHPRI28;                                \/**< Channel n Priority Register, offset: 0x11F *\/$/;"	m	struct:DMA_MemMap
DCHPRI29	derivative.h	/^  uint8_t DCHPRI29;                                \/**< Channel n Priority Register, offset: 0x11E *\/$/;"	m	struct:DMA_MemMap
DCHPRI3	derivative.h	/^  uint8_t DCHPRI3;                                 \/**< Channel n Priority Register, offset: 0x100 *\/$/;"	m	struct:DMA_MemMap
DCHPRI30	derivative.h	/^  uint8_t DCHPRI30;                                \/**< Channel n Priority Register, offset: 0x11D *\/$/;"	m	struct:DMA_MemMap
DCHPRI31	derivative.h	/^  uint8_t DCHPRI31;                                \/**< Channel n Priority Register, offset: 0x11C *\/$/;"	m	struct:DMA_MemMap
DCHPRI4	derivative.h	/^  uint8_t DCHPRI4;                                 \/**< Channel n Priority Register, offset: 0x107 *\/$/;"	m	struct:DMA_MemMap
DCHPRI5	derivative.h	/^  uint8_t DCHPRI5;                                 \/**< Channel n Priority Register, offset: 0x106 *\/$/;"	m	struct:DMA_MemMap
DCHPRI6	derivative.h	/^  uint8_t DCHPRI6;                                 \/**< Channel n Priority Register, offset: 0x105 *\/$/;"	m	struct:DMA_MemMap
DCHPRI7	derivative.h	/^  uint8_t DCHPRI7;                                 \/**< Channel n Priority Register, offset: 0x104 *\/$/;"	m	struct:DMA_MemMap
DCHPRI8	derivative.h	/^  uint8_t DCHPRI8;                                 \/**< Channel n Priority Register, offset: 0x10B *\/$/;"	m	struct:DMA_MemMap
DCHPRI9	derivative.h	/^  uint8_t DCHPRI9;                                 \/**< Channel n Priority Register, offset: 0x10A *\/$/;"	m	struct:DMA_MemMap
DCIVERSION	derivative.h	/^  uint16_t DCIVERSION;                             \/**< Device Controller Interface Version, offset: 0x122 *\/$/;"	m	struct:USBHS_MemMap
DCRDR	derivative.h	3422;"	d
DCRSR	derivative.h	3421;"	d
DDR_BASE_PTR	derivative.h	4408;"	d
DDR_BASE_PTRS	derivative.h	4410;"	d
DDR_CR00	derivative.h	4424;"	d
DDR_CR00_DDRCLS	derivative.h	3832;"	d
DDR_CR00_DDRCLS_DDR	sdram.h	36;"	d
DDR_CR00_DDRCLS_DDR2	sdram.h	38;"	d
DDR_CR00_DDRCLS_LPDDR	sdram.h	37;"	d
DDR_CR00_DDRCLS_MASK	derivative.h	3830;"	d
DDR_CR00_DDRCLS_SHIFT	derivative.h	3831;"	d
DDR_CR00_REG	derivative.h	3746;"	d
DDR_CR00_START_MASK	derivative.h	3828;"	d
DDR_CR00_START_SHIFT	derivative.h	3829;"	d
DDR_CR00_VERSION	derivative.h	3835;"	d
DDR_CR00_VERSION_MASK	derivative.h	3833;"	d
DDR_CR00_VERSION_SHIFT	derivative.h	3834;"	d
DDR_CR01	derivative.h	4425;"	d
DDR_CR01_CSMAX	derivative.h	3845;"	d
DDR_CR01_CSMAX_MASK	derivative.h	3843;"	d
DDR_CR01_CSMAX_SHIFT	derivative.h	3844;"	d
DDR_CR01_MAXCOL	derivative.h	3842;"	d
DDR_CR01_MAXCOL_MASK	derivative.h	3840;"	d
DDR_CR01_MAXCOL_SHIFT	derivative.h	3841;"	d
DDR_CR01_MAXROW	derivative.h	3839;"	d
DDR_CR01_MAXROW_MASK	derivative.h	3837;"	d
DDR_CR01_MAXROW_SHIFT	derivative.h	3838;"	d
DDR_CR01_REG	derivative.h	3747;"	d
DDR_CR02	derivative.h	4426;"	d
DDR_CR02_INITAREF	derivative.h	3852;"	d
DDR_CR02_INITAREF_MASK	derivative.h	3850;"	d
DDR_CR02_INITAREF_SHIFT	derivative.h	3851;"	d
DDR_CR02_REG	derivative.h	3748;"	d
DDR_CR02_TINIT	derivative.h	3849;"	d
DDR_CR02_TINIT_MASK	derivative.h	3847;"	d
DDR_CR02_TINIT_SHIFT	derivative.h	3848;"	d
DDR_CR03	derivative.h	4427;"	d
DDR_CR03_LATGATE	derivative.h	3859;"	d
DDR_CR03_LATGATE_MASK	derivative.h	3857;"	d
DDR_CR03_LATGATE_SHIFT	derivative.h	3858;"	d
DDR_CR03_LATLIN	derivative.h	3856;"	d
DDR_CR03_LATLIN_MASK	derivative.h	3854;"	d
DDR_CR03_LATLIN_SHIFT	derivative.h	3855;"	d
DDR_CR03_REG	derivative.h	3749;"	d
DDR_CR03_TCCD	derivative.h	3865;"	d
DDR_CR03_TCCD_MASK	derivative.h	3863;"	d
DDR_CR03_TCCD_SHIFT	derivative.h	3864;"	d
DDR_CR03_WRLAT	derivative.h	3862;"	d
DDR_CR03_WRLAT_MASK	derivative.h	3860;"	d
DDR_CR03_WRLAT_SHIFT	derivative.h	3861;"	d
DDR_CR04	derivative.h	4428;"	d
DDR_CR04_REG	derivative.h	3750;"	d
DDR_CR04_TBINT	derivative.h	3869;"	d
DDR_CR04_TBINT_MASK	derivative.h	3867;"	d
DDR_CR04_TBINT_SHIFT	derivative.h	3868;"	d
DDR_CR04_TRASMIN	derivative.h	3878;"	d
DDR_CR04_TRASMIN_MASK	derivative.h	3876;"	d
DDR_CR04_TRASMIN_SHIFT	derivative.h	3877;"	d
DDR_CR04_TRC	derivative.h	3875;"	d
DDR_CR04_TRC_MASK	derivative.h	3873;"	d
DDR_CR04_TRC_SHIFT	derivative.h	3874;"	d
DDR_CR04_TRRD	derivative.h	3872;"	d
DDR_CR04_TRRD_MASK	derivative.h	3870;"	d
DDR_CR04_TRRD_SHIFT	derivative.h	3871;"	d
DDR_CR05	derivative.h	4429;"	d
DDR_CR05_REG	derivative.h	3751;"	d
DDR_CR05_TMRD	derivative.h	3891;"	d
DDR_CR05_TMRD_MASK	derivative.h	3889;"	d
DDR_CR05_TMRD_SHIFT	derivative.h	3890;"	d
DDR_CR05_TRP	derivative.h	3885;"	d
DDR_CR05_TRP_MASK	derivative.h	3883;"	d
DDR_CR05_TRP_SHIFT	derivative.h	3884;"	d
DDR_CR05_TRTP	derivative.h	3888;"	d
DDR_CR05_TRTP_MASK	derivative.h	3886;"	d
DDR_CR05_TRTP_SHIFT	derivative.h	3887;"	d
DDR_CR05_TWTR	derivative.h	3882;"	d
DDR_CR05_TWTR_MASK	derivative.h	3880;"	d
DDR_CR05_TWTR_SHIFT	derivative.h	3881;"	d
DDR_CR06	derivative.h	4430;"	d
DDR_CR06_INTWBR_MASK	derivative.h	3899;"	d
DDR_CR06_INTWBR_SHIFT	derivative.h	3900;"	d
DDR_CR06_REG	derivative.h	3752;"	d
DDR_CR06_TMOD	derivative.h	3895;"	d
DDR_CR06_TMOD_MASK	derivative.h	3893;"	d
DDR_CR06_TMOD_SHIFT	derivative.h	3894;"	d
DDR_CR06_TRASMAX	derivative.h	3898;"	d
DDR_CR06_TRASMAX_MASK	derivative.h	3896;"	d
DDR_CR06_TRASMAX_SHIFT	derivative.h	3897;"	d
DDR_CR07	derivative.h	4431;"	d
DDR_CR07_AP_MASK	derivative.h	3908;"	d
DDR_CR07_AP_SHIFT	derivative.h	3909;"	d
DDR_CR07_CCAPEN_MASK	derivative.h	3910;"	d
DDR_CR07_CCAPEN_SHIFT	derivative.h	3911;"	d
DDR_CR07_CLKPW	derivative.h	3904;"	d
DDR_CR07_CLKPW_MASK	derivative.h	3902;"	d
DDR_CR07_CLKPW_SHIFT	derivative.h	3903;"	d
DDR_CR07_REG	derivative.h	3753;"	d
DDR_CR07_TCKESR	derivative.h	3907;"	d
DDR_CR07_TCKESR_MASK	derivative.h	3905;"	d
DDR_CR07_TCKESR_SHIFT	derivative.h	3906;"	d
DDR_CR08	derivative.h	4432;"	d
DDR_CR08_REG	derivative.h	3754;"	d
DDR_CR08_TDAL	derivative.h	3923;"	d
DDR_CR08_TDAL_MASK	derivative.h	3921;"	d
DDR_CR08_TDAL_SHIFT	derivative.h	3922;"	d
DDR_CR08_TRASDI	derivative.h	3917;"	d
DDR_CR08_TRASDI_MASK	derivative.h	3915;"	d
DDR_CR08_TRASDI_SHIFT	derivative.h	3916;"	d
DDR_CR08_TRAS_MASK	derivative.h	3913;"	d
DDR_CR08_TRAS_SHIFT	derivative.h	3914;"	d
DDR_CR08_TWR	derivative.h	3920;"	d
DDR_CR08_TWR_MASK	derivative.h	3918;"	d
DDR_CR08_TWR_SHIFT	derivative.h	3919;"	d
DDR_CR09	derivative.h	4433;"	d
DDR_CR09_BSTLEN	derivative.h	3932;"	d
DDR_CR09_BSTLEN_2_WORDS	sdram.h	40;"	d
DDR_CR09_BSTLEN_4_WORDS	sdram.h	41;"	d
DDR_CR09_BSTLEN_8_WORDS	sdram.h	42;"	d
DDR_CR09_BSTLEN_MASK	derivative.h	3930;"	d
DDR_CR09_BSTLEN_SHIFT	derivative.h	3931;"	d
DDR_CR09_NOCMD_MASK	derivative.h	3928;"	d
DDR_CR09_NOCMD_SHIFT	derivative.h	3929;"	d
DDR_CR09_REG	derivative.h	3755;"	d
DDR_CR09_TDLL	derivative.h	3927;"	d
DDR_CR09_TDLL_MASK	derivative.h	3925;"	d
DDR_CR09_TDLL_SHIFT	derivative.h	3926;"	d
DDR_CR10	derivative.h	4434;"	d
DDR_CR10_REG	derivative.h	3756;"	d
DDR_CR10_TCPD	derivative.h	3939;"	d
DDR_CR10_TCPD_MASK	derivative.h	3937;"	d
DDR_CR10_TCPD_SHIFT	derivative.h	3938;"	d
DDR_CR10_TFAW	derivative.h	3936;"	d
DDR_CR10_TFAW_MASK	derivative.h	3934;"	d
DDR_CR10_TFAW_SHIFT	derivative.h	3935;"	d
DDR_CR10_TRPAB	derivative.h	3942;"	d
DDR_CR10_TRPAB_MASK	derivative.h	3940;"	d
DDR_CR10_TRPAB_SHIFT	derivative.h	3941;"	d
DDR_CR11	derivative.h	4435;"	d
DDR_CR11_AREFMODE_MASK	derivative.h	3948;"	d
DDR_CR11_AREFMODE_SHIFT	derivative.h	3949;"	d
DDR_CR11_AREF_MASK	derivative.h	3946;"	d
DDR_CR11_AREF_SHIFT	derivative.h	3947;"	d
DDR_CR11_REG	derivative.h	3757;"	d
DDR_CR11_REGDIMM_MASK	derivative.h	3944;"	d
DDR_CR11_REGDIMM_SHIFT	derivative.h	3945;"	d
DDR_CR11_TREFEN_MASK	derivative.h	3950;"	d
DDR_CR11_TREFEN_SHIFT	derivative.h	3951;"	d
DDR_CR12	derivative.h	4436;"	d
DDR_CR12_REG	derivative.h	3758;"	d
DDR_CR12_TREF	derivative.h	3958;"	d
DDR_CR12_TREF_MASK	derivative.h	3956;"	d
DDR_CR12_TREF_SHIFT	derivative.h	3957;"	d
DDR_CR12_TRFC	derivative.h	3955;"	d
DDR_CR12_TRFC_MASK	derivative.h	3953;"	d
DDR_CR12_TRFC_SHIFT	derivative.h	3954;"	d
DDR_CR13	derivative.h	4437;"	d
DDR_CR13_PD_MASK	derivative.h	3963;"	d
DDR_CR13_PD_SHIFT	derivative.h	3964;"	d
DDR_CR13_REG	derivative.h	3759;"	d
DDR_CR13_TREFINT	derivative.h	3962;"	d
DDR_CR13_TREFINT_MASK	derivative.h	3960;"	d
DDR_CR13_TREFINT_SHIFT	derivative.h	3961;"	d
DDR_CR14	derivative.h	4438;"	d
DDR_CR14_REG	derivative.h	3760;"	d
DDR_CR14_TPDEX	derivative.h	3968;"	d
DDR_CR14_TPDEX_MASK	derivative.h	3966;"	d
DDR_CR14_TPDEX_SHIFT	derivative.h	3967;"	d
DDR_CR14_TXSR	derivative.h	3971;"	d
DDR_CR14_TXSR_MASK	derivative.h	3969;"	d
DDR_CR14_TXSR_SHIFT	derivative.h	3970;"	d
DDR_CR15	derivative.h	4439;"	d
DDR_CR15_PUREF_MASK	derivative.h	3978;"	d
DDR_CR15_PUREF_SHIFT	derivative.h	3979;"	d
DDR_CR15_REG	derivative.h	3761;"	d
DDR_CR15_SREF_MASK	derivative.h	3976;"	d
DDR_CR15_SREF_SHIFT	derivative.h	3977;"	d
DDR_CR15_TXSNR	derivative.h	3975;"	d
DDR_CR15_TXSNR_MASK	derivative.h	3973;"	d
DDR_CR15_TXSNR_SHIFT	derivative.h	3974;"	d
DDR_CR16	derivative.h	4440;"	d
DDR_CR16_CLKDLY	derivative.h	3985;"	d
DDR_CR16_CLKDLY_MASK	derivative.h	3983;"	d
DDR_CR16_CLKDLY_SHIFT	derivative.h	3984;"	d
DDR_CR16_LPCTRL	derivative.h	3988;"	d
DDR_CR16_LPCTRL_MASK	derivative.h	3986;"	d
DDR_CR16_LPCTRL_SHIFT	derivative.h	3987;"	d
DDR_CR16_QKREF_MASK	derivative.h	3981;"	d
DDR_CR16_QKREF_SHIFT	derivative.h	3982;"	d
DDR_CR16_REG	derivative.h	3762;"	d
DDR_CR17	derivative.h	4441;"	d
DDR_CR17_LPPDCNT	derivative.h	3992;"	d
DDR_CR17_LPPDCNT_MASK	derivative.h	3990;"	d
DDR_CR17_LPPDCNT_SHIFT	derivative.h	3991;"	d
DDR_CR17_LPRFCNT	derivative.h	3995;"	d
DDR_CR17_LPRFCNT_MASK	derivative.h	3993;"	d
DDR_CR17_LPRFCNT_SHIFT	derivative.h	3994;"	d
DDR_CR17_REG	derivative.h	3763;"	d
DDR_CR18	derivative.h	4442;"	d
DDR_CR18_LPAUTO	derivative.h	4002;"	d
DDR_CR18_LPAUTO_MASK	derivative.h	4000;"	d
DDR_CR18_LPAUTO_SHIFT	derivative.h	4001;"	d
DDR_CR18_LPEXTCNT	derivative.h	3999;"	d
DDR_CR18_LPEXTCNT_MASK	derivative.h	3997;"	d
DDR_CR18_LPEXTCNT_SHIFT	derivative.h	3998;"	d
DDR_CR18_REG	derivative.h	3764;"	d
DDR_CR19	derivative.h	4443;"	d
DDR_CR19_LPINTCNT	derivative.h	4006;"	d
DDR_CR19_LPINTCNT_MASK	derivative.h	4004;"	d
DDR_CR19_LPINTCNT_SHIFT	derivative.h	4005;"	d
DDR_CR19_LPRFHOLD	derivative.h	4009;"	d
DDR_CR19_LPRFHOLD_MASK	derivative.h	4007;"	d
DDR_CR19_LPRFHOLD_SHIFT	derivative.h	4008;"	d
DDR_CR19_REG	derivative.h	3765;"	d
DDR_CR20	derivative.h	4444;"	d
DDR_CR20_CKSRE	derivative.h	4016;"	d
DDR_CR20_CKSRE_MASK	derivative.h	4014;"	d
DDR_CR20_CKSRE_SHIFT	derivative.h	4015;"	d
DDR_CR20_CKSRX	derivative.h	4019;"	d
DDR_CR20_CKSRX_MASK	derivative.h	4017;"	d
DDR_CR20_CKSRX_SHIFT	derivative.h	4018;"	d
DDR_CR20_LPRE	derivative.h	4013;"	d
DDR_CR20_LPRE_MASK	derivative.h	4011;"	d
DDR_CR20_LPRE_SHIFT	derivative.h	4012;"	d
DDR_CR20_REG	derivative.h	3766;"	d
DDR_CR20_WRMD_MASK	derivative.h	4020;"	d
DDR_CR20_WRMD_SHIFT	derivative.h	4021;"	d
DDR_CR21	derivative.h	4445;"	d
DDR_CR21_MR0DAT0	derivative.h	4025;"	d
DDR_CR21_MR0DAT0_MASK	derivative.h	4023;"	d
DDR_CR21_MR0DAT0_SHIFT	derivative.h	4024;"	d
DDR_CR21_MR1DAT0	derivative.h	4028;"	d
DDR_CR21_MR1DAT0_MASK	derivative.h	4026;"	d
DDR_CR21_MR1DAT0_SHIFT	derivative.h	4027;"	d
DDR_CR21_REG	derivative.h	3767;"	d
DDR_CR22	derivative.h	4446;"	d
DDR_CR22_MR2DATA0	derivative.h	4032;"	d
DDR_CR22_MR2DATA0_MASK	derivative.h	4030;"	d
DDR_CR22_MR2DATA0_SHIFT	derivative.h	4031;"	d
DDR_CR22_MR3DAT0	derivative.h	4035;"	d
DDR_CR22_MR3DAT0_MASK	derivative.h	4033;"	d
DDR_CR22_MR3DAT0_SHIFT	derivative.h	4034;"	d
DDR_CR22_REG	derivative.h	3768;"	d
DDR_CR23	derivative.h	4447;"	d
DDR_CR23_NOT_USED	derivative.h	4042;"	d
DDR_CR23_NOT_USED_MASK	derivative.h	4040;"	d
DDR_CR23_NOT_USED_SHIFT	derivative.h	4041;"	d
DDR_CR23_Not_Used	derivative.h	4039;"	d
DDR_CR23_Not_Used_MASK	derivative.h	4037;"	d
DDR_CR23_Not_Used_SHIFT	derivative.h	4038;"	d
DDR_CR23_REG	derivative.h	3769;"	d
DDR_CR24	derivative.h	4448;"	d
DDR_CR24_REG	derivative.h	3770;"	d
DDR_CR25	derivative.h	4449;"	d
DDR_CR25_ADDPINS	derivative.h	4048;"	d
DDR_CR25_ADDPINS_MASK	derivative.h	4046;"	d
DDR_CR25_ADDPINS_SHIFT	derivative.h	4047;"	d
DDR_CR25_APREBIT	derivative.h	4054;"	d
DDR_CR25_APREBIT_MASK	derivative.h	4052;"	d
DDR_CR25_APREBIT_SHIFT	derivative.h	4053;"	d
DDR_CR25_BNK8_MASK	derivative.h	4044;"	d
DDR_CR25_BNK8_SHIFT	derivative.h	4045;"	d
DDR_CR25_COLSIZ	derivative.h	4051;"	d
DDR_CR25_COLSIZ_MASK	derivative.h	4049;"	d
DDR_CR25_COLSIZ_SHIFT	derivative.h	4050;"	d
DDR_CR25_REG	derivative.h	3771;"	d
DDR_CR26	derivative.h	4450;"	d
DDR_CR26_ADDCOL_MASK	derivative.h	4062;"	d
DDR_CR26_ADDCOL_SHIFT	derivative.h	4063;"	d
DDR_CR26_AGECNT	derivative.h	4058;"	d
DDR_CR26_AGECNT_MASK	derivative.h	4056;"	d
DDR_CR26_AGECNT_SHIFT	derivative.h	4057;"	d
DDR_CR26_BNKSPT_MASK	derivative.h	4064;"	d
DDR_CR26_BNKSPT_SHIFT	derivative.h	4065;"	d
DDR_CR26_CMDAGE	derivative.h	4061;"	d
DDR_CR26_CMDAGE_MASK	derivative.h	4059;"	d
DDR_CR26_CMDAGE_SHIFT	derivative.h	4060;"	d
DDR_CR26_REG	derivative.h	3772;"	d
DDR_CR27	derivative.h	4451;"	d
DDR_CR27_PLEN_MASK	derivative.h	4067;"	d
DDR_CR27_PLEN_SHIFT	derivative.h	4068;"	d
DDR_CR27_PRIEN_MASK	derivative.h	4069;"	d
DDR_CR27_PRIEN_SHIFT	derivative.h	4070;"	d
DDR_CR27_REG	derivative.h	3773;"	d
DDR_CR27_RWEN_MASK	derivative.h	4071;"	d
DDR_CR27_RWEN_SHIFT	derivative.h	4072;"	d
DDR_CR27_SWPEN_MASK	derivative.h	4073;"	d
DDR_CR27_SWPEN_SHIFT	derivative.h	4074;"	d
DDR_CR28	derivative.h	4452;"	d
DDR_CR28_BIGEND_MASK	derivative.h	4080;"	d
DDR_CR28_BIGEND_SHIFT	derivative.h	4081;"	d
DDR_CR28_CMDLATR_MASK	derivative.h	4082;"	d
DDR_CR28_CMDLATR_SHIFT	derivative.h	4083;"	d
DDR_CR28_CSMAP_MASK	derivative.h	4076;"	d
DDR_CR28_CSMAP_SHIFT	derivative.h	4077;"	d
DDR_CR28_REDUC_MASK	derivative.h	4078;"	d
DDR_CR28_REDUC_SHIFT	derivative.h	4079;"	d
DDR_CR28_REG	derivative.h	3774;"	d
DDR_CR29	derivative.h	4453;"	d
DDR_CR29_FSTWR_MASK	derivative.h	4087;"	d
DDR_CR29_FSTWR_SHIFT	derivative.h	4088;"	d
DDR_CR29_QFULL	derivative.h	4091;"	d
DDR_CR29_QFULL_MASK	derivative.h	4089;"	d
DDR_CR29_QFULL_SHIFT	derivative.h	4090;"	d
DDR_CR29_REG	derivative.h	3775;"	d
DDR_CR29_RESYNC_MASK	derivative.h	4092;"	d
DDR_CR29_RESYNC_SHIFT	derivative.h	4093;"	d
DDR_CR29_WRLATR_MASK	derivative.h	4085;"	d
DDR_CR29_WRLATR_SHIFT	derivative.h	4086;"	d
DDR_CR30	derivative.h	4454;"	d
DDR_CR30_INTACK	derivative.h	4102;"	d
DDR_CR30_INTACK_MASK	derivative.h	4100;"	d
DDR_CR30_INTACK_SHIFT	derivative.h	4101;"	d
DDR_CR30_INTSTAT	derivative.h	4099;"	d
DDR_CR30_INTSTAT_ANY_MASK	sdram.h	61;"	d
DDR_CR30_INTSTAT_ANY_SHIFT	sdram.h	60;"	d
DDR_CR30_INTSTAT_CAS_3_ERROR_MASK	sdram.h	53;"	d
DDR_CR30_INTSTAT_CAS_3_ERROR_SHIFT	sdram.h	52;"	d
DDR_CR30_INTSTAT_DDR2_AND_MOBILE_EN_MASK	sdram.h	51;"	d
DDR_CR30_INTSTAT_DDR2_AND_MOBILE_EN_SHIFT	sdram.h	50;"	d
DDR_CR30_INTSTAT_DFI_INT_COMPLETE_CHANGE_MASK	sdram.h	57;"	d
DDR_CR30_INTSTAT_DFI_INT_COMPLETE_CHANGE_SHIFT	sdram.h	56;"	d
DDR_CR30_INTSTAT_DLL_RESYNC_FINISH_MASK	sdram.h	59;"	d
DDR_CR30_INTSTAT_DLL_RESYNC_FINISH_SHIFT	sdram.h	58;"	d
DDR_CR30_INTSTAT_DRAM_INIT_COMPLETE_MASK	sdram.h	49;"	d
DDR_CR30_INTSTAT_DRAM_INIT_COMPLETE_SHIFT	sdram.h	48;"	d
DDR_CR30_INTSTAT_MASK	derivative.h	4097;"	d
DDR_CR30_INTSTAT_MULTIPLE_OUTSIDE_MASK	sdram.h	47;"	d
DDR_CR30_INTSTAT_MULTIPLE_OUTSIDE_SHIFT	sdram.h	46;"	d
DDR_CR30_INTSTAT_SHIFT	derivative.h	4098;"	d
DDR_CR30_INTSTAT_SINGLE_OUTSIDE_MASK	sdram.h	45;"	d
DDR_CR30_INTSTAT_SINGLE_OUTSIDE_SHIFT	sdram.h	44;"	d
DDR_CR30_INTSTAT_WRITE_FINISH_MASK	sdram.h	55;"	d
DDR_CR30_INTSTAT_WRITE_FINISH_SHIFT	sdram.h	54;"	d
DDR_CR30_REG	derivative.h	3776;"	d
DDR_CR30_RSYNCRF_MASK	derivative.h	4095;"	d
DDR_CR30_RSYNCRF_SHIFT	derivative.h	4096;"	d
DDR_CR31	derivative.h	4455;"	d
DDR_CR31_INTMASK	derivative.h	4106;"	d
DDR_CR31_INTMASK_MASK	derivative.h	4104;"	d
DDR_CR31_INTMASK_SHIFT	derivative.h	4105;"	d
DDR_CR31_REG	derivative.h	3777;"	d
DDR_CR32	derivative.h	4456;"	d
DDR_CR32_OORAD	derivative.h	4110;"	d
DDR_CR32_OORAD_MASK	derivative.h	4108;"	d
DDR_CR32_OORAD_SHIFT	derivative.h	4109;"	d
DDR_CR32_REG	derivative.h	3778;"	d
DDR_CR33	derivative.h	4457;"	d
DDR_CR33_OORID	derivative.h	4120;"	d
DDR_CR33_OORID_MASK	derivative.h	4118;"	d
DDR_CR33_OORID_SHIFT	derivative.h	4119;"	d
DDR_CR33_OORLEN	derivative.h	4114;"	d
DDR_CR33_OORLEN_MASK	derivative.h	4112;"	d
DDR_CR33_OORLEN_SHIFT	derivative.h	4113;"	d
DDR_CR33_OORTYP	derivative.h	4117;"	d
DDR_CR33_OORTYP_MASK	derivative.h	4115;"	d
DDR_CR33_OORTYP_SHIFT	derivative.h	4116;"	d
DDR_CR33_REG	derivative.h	3779;"	d
DDR_CR34	derivative.h	4458;"	d
DDR_CR34_ODTRDC_MASK	derivative.h	4122;"	d
DDR_CR34_ODTRDC_SHIFT	derivative.h	4123;"	d
DDR_CR34_ODTWRCS_MASK	derivative.h	4124;"	d
DDR_CR34_ODTWRCS_SHIFT	derivative.h	4125;"	d
DDR_CR34_REG	derivative.h	3780;"	d
DDR_CR35	derivative.h	4459;"	d
DDR_CR35_R2WSMCS	derivative.h	4129;"	d
DDR_CR35_R2WSMCS_MASK	derivative.h	4127;"	d
DDR_CR35_R2WSMCS_SHIFT	derivative.h	4128;"	d
DDR_CR35_REG	derivative.h	3781;"	d
DDR_CR35_W2RSMCS	derivative.h	4132;"	d
DDR_CR35_W2RSMCS_MASK	derivative.h	4130;"	d
DDR_CR35_W2RSMCS_SHIFT	derivative.h	4131;"	d
DDR_CR36	derivative.h	4460;"	d
DDR_CR36_NOT_USED	derivative.h	4139;"	d
DDR_CR36_NOT_USED_MASK	derivative.h	4137;"	d
DDR_CR36_NOT_USED_SHIFT	derivative.h	4138;"	d
DDR_CR36_Not_Used	derivative.h	4136;"	d
DDR_CR36_Not_Used_MASK	derivative.h	4134;"	d
DDR_CR36_Not_Used_SHIFT	derivative.h	4135;"	d
DDR_CR36_REG	derivative.h	3782;"	d
DDR_CR37	derivative.h	4461;"	d
DDR_CR37_R2RSAME	derivative.h	4143;"	d
DDR_CR37_R2RSAME_MASK	derivative.h	4141;"	d
DDR_CR37_R2RSAME_SHIFT	derivative.h	4142;"	d
DDR_CR37_R2WSAME	derivative.h	4146;"	d
DDR_CR37_R2WSAME_MASK	derivative.h	4144;"	d
DDR_CR37_R2WSAME_SHIFT	derivative.h	4145;"	d
DDR_CR37_REG	derivative.h	3783;"	d
DDR_CR37_W2RSAME	derivative.h	4149;"	d
DDR_CR37_W2RSAME_MASK	derivative.h	4147;"	d
DDR_CR37_W2RSAME_SHIFT	derivative.h	4148;"	d
DDR_CR37_W2WSAME	derivative.h	4152;"	d
DDR_CR37_W2WSAME_MASK	derivative.h	4150;"	d
DDR_CR37_W2WSAME_SHIFT	derivative.h	4151;"	d
DDR_CR38	derivative.h	4462;"	d
DDR_CR38_PDNCS	derivative.h	4156;"	d
DDR_CR38_PDNCS_MASK	derivative.h	4154;"	d
DDR_CR38_PDNCS_SHIFT	derivative.h	4155;"	d
DDR_CR38_PUPCS	derivative.h	4159;"	d
DDR_CR38_PUPCS_MASK	derivative.h	4157;"	d
DDR_CR38_PUPCS_SHIFT	derivative.h	4158;"	d
DDR_CR38_PWRCNT	derivative.h	4162;"	d
DDR_CR38_PWRCNT_MASK	derivative.h	4160;"	d
DDR_CR38_PWRCNT_SHIFT	derivative.h	4161;"	d
DDR_CR38_REG	derivative.h	3784;"	d
DDR_CR39	derivative.h	4463;"	d
DDR_CR39_P0RDCNT	derivative.h	4166;"	d
DDR_CR39_P0RDCNT_MASK	derivative.h	4164;"	d
DDR_CR39_P0RDCNT_SHIFT	derivative.h	4165;"	d
DDR_CR39_REG	derivative.h	3785;"	d
DDR_CR39_RP0	derivative.h	4169;"	d
DDR_CR39_RP0_MASK	derivative.h	4167;"	d
DDR_CR39_RP0_SHIFT	derivative.h	4168;"	d
DDR_CR39_WP0	derivative.h	4172;"	d
DDR_CR39_WP0_MASK	derivative.h	4170;"	d
DDR_CR39_WP0_SHIFT	derivative.h	4171;"	d
DDR_CR40	derivative.h	4464;"	d
DDR_CR40_P0TYP	derivative.h	4176;"	d
DDR_CR40_P0TYP_MASK	derivative.h	4174;"	d
DDR_CR40_P0TYP_SHIFT	derivative.h	4175;"	d
DDR_CR40_P1WRCNT	derivative.h	4179;"	d
DDR_CR40_P1WRCNT_MASK	derivative.h	4177;"	d
DDR_CR40_P1WRCNT_SHIFT	derivative.h	4178;"	d
DDR_CR40_REG	derivative.h	3786;"	d
DDR_CR41	derivative.h	4465;"	d
DDR_CR41_P1RDCNT	derivative.h	4183;"	d
DDR_CR41_P1RDCNT_MASK	derivative.h	4181;"	d
DDR_CR41_P1RDCNT_SHIFT	derivative.h	4182;"	d
DDR_CR41_REG	derivative.h	3787;"	d
DDR_CR41_RP1	derivative.h	4186;"	d
DDR_CR41_RP1_MASK	derivative.h	4184;"	d
DDR_CR41_RP1_SHIFT	derivative.h	4185;"	d
DDR_CR41_WP1	derivative.h	4189;"	d
DDR_CR41_WP1_MASK	derivative.h	4187;"	d
DDR_CR41_WP1_SHIFT	derivative.h	4188;"	d
DDR_CR42	derivative.h	4466;"	d
DDR_CR42_P1TYP	derivative.h	4193;"	d
DDR_CR42_P1TYP_MASK	derivative.h	4191;"	d
DDR_CR42_P1TYP_SHIFT	derivative.h	4192;"	d
DDR_CR42_P2WRCNT	derivative.h	4196;"	d
DDR_CR42_P2WRCNT_MASK	derivative.h	4194;"	d
DDR_CR42_P2WRCNT_SHIFT	derivative.h	4195;"	d
DDR_CR42_REG	derivative.h	3788;"	d
DDR_CR43	derivative.h	4467;"	d
DDR_CR43_P2RDCNT	derivative.h	4200;"	d
DDR_CR43_P2RDCNT_MASK	derivative.h	4198;"	d
DDR_CR43_P2RDCNT_SHIFT	derivative.h	4199;"	d
DDR_CR43_REG	derivative.h	3789;"	d
DDR_CR43_RP2	derivative.h	4203;"	d
DDR_CR43_RP2_MASK	derivative.h	4201;"	d
DDR_CR43_RP2_SHIFT	derivative.h	4202;"	d
DDR_CR43_WP2	derivative.h	4206;"	d
DDR_CR43_WP2_MASK	derivative.h	4204;"	d
DDR_CR43_WP2_SHIFT	derivative.h	4205;"	d
DDR_CR44	derivative.h	4468;"	d
DDR_CR44_P2TYP	derivative.h	4210;"	d
DDR_CR44_P2TYP_MASK	derivative.h	4208;"	d
DDR_CR44_P2TYP_SHIFT	derivative.h	4209;"	d
DDR_CR44_REG	derivative.h	3790;"	d
DDR_CR44_WRRERR	derivative.h	4217;"	d
DDR_CR44_WRRERR_MASK	derivative.h	4215;"	d
DDR_CR44_WRRERR_SHIFT	derivative.h	4216;"	d
DDR_CR44_WRRLAT_MASK	derivative.h	4211;"	d
DDR_CR44_WRRLAT_SHIFT	derivative.h	4212;"	d
DDR_CR44_WRRSHARE_MASK	derivative.h	4213;"	d
DDR_CR44_WRRSHARE_SHIFT	derivative.h	4214;"	d
DDR_CR45	derivative.h	4469;"	d
DDR_CR45_P0PRI0	derivative.h	4221;"	d
DDR_CR45_P0PRI0_MASK	derivative.h	4219;"	d
DDR_CR45_P0PRI0_SHIFT	derivative.h	4220;"	d
DDR_CR45_P0PRI1	derivative.h	4224;"	d
DDR_CR45_P0PRI1_MASK	derivative.h	4222;"	d
DDR_CR45_P0PRI1_SHIFT	derivative.h	4223;"	d
DDR_CR45_P0PRI2	derivative.h	4227;"	d
DDR_CR45_P0PRI2_MASK	derivative.h	4225;"	d
DDR_CR45_P0PRI2_SHIFT	derivative.h	4226;"	d
DDR_CR45_P0PRI3	derivative.h	4230;"	d
DDR_CR45_P0PRI3_MASK	derivative.h	4228;"	d
DDR_CR45_P0PRI3_SHIFT	derivative.h	4229;"	d
DDR_CR45_REG	derivative.h	3791;"	d
DDR_CR46	derivative.h	4470;"	d
DDR_CR46_P0ORD	derivative.h	4234;"	d
DDR_CR46_P0ORD_MASK	derivative.h	4232;"	d
DDR_CR46_P0ORD_SHIFT	derivative.h	4233;"	d
DDR_CR46_P0PRIRLX	derivative.h	4237;"	d
DDR_CR46_P0PRIRLX_MASK	derivative.h	4235;"	d
DDR_CR46_P0PRIRLX_SHIFT	derivative.h	4236;"	d
DDR_CR46_P1PRI0	derivative.h	4240;"	d
DDR_CR46_P1PRI0_MASK	derivative.h	4238;"	d
DDR_CR46_P1PRI0_SHIFT	derivative.h	4239;"	d
DDR_CR46_REG	derivative.h	3792;"	d
DDR_CR47	derivative.h	4471;"	d
DDR_CR47_P1ORD	derivative.h	4253;"	d
DDR_CR47_P1ORD_MASK	derivative.h	4251;"	d
DDR_CR47_P1ORD_SHIFT	derivative.h	4252;"	d
DDR_CR47_P1PRI1	derivative.h	4244;"	d
DDR_CR47_P1PRI1_MASK	derivative.h	4242;"	d
DDR_CR47_P1PRI1_SHIFT	derivative.h	4243;"	d
DDR_CR47_P1PRI2	derivative.h	4247;"	d
DDR_CR47_P1PRI2_MASK	derivative.h	4245;"	d
DDR_CR47_P1PRI2_SHIFT	derivative.h	4246;"	d
DDR_CR47_P1PRI3	derivative.h	4250;"	d
DDR_CR47_P1PRI3_MASK	derivative.h	4248;"	d
DDR_CR47_P1PRI3_SHIFT	derivative.h	4249;"	d
DDR_CR47_REG	derivative.h	3793;"	d
DDR_CR48	derivative.h	4472;"	d
DDR_CR48_P1PRIRLX	derivative.h	4257;"	d
DDR_CR48_P1PRIRLX_MASK	derivative.h	4255;"	d
DDR_CR48_P1PRIRLX_SHIFT	derivative.h	4256;"	d
DDR_CR48_P2PRI0	derivative.h	4260;"	d
DDR_CR48_P2PRI0_MASK	derivative.h	4258;"	d
DDR_CR48_P2PRI0_SHIFT	derivative.h	4259;"	d
DDR_CR48_P2PRI1	derivative.h	4263;"	d
DDR_CR48_P2PRI1_MASK	derivative.h	4261;"	d
DDR_CR48_P2PRI1_SHIFT	derivative.h	4262;"	d
DDR_CR48_REG	derivative.h	3794;"	d
DDR_CR49	derivative.h	4473;"	d
DDR_CR49_P2ORD	derivative.h	4273;"	d
DDR_CR49_P2ORD_MASK	derivative.h	4271;"	d
DDR_CR49_P2ORD_SHIFT	derivative.h	4272;"	d
DDR_CR49_P2PRI2	derivative.h	4267;"	d
DDR_CR49_P2PRI2_MASK	derivative.h	4265;"	d
DDR_CR49_P2PRI2_SHIFT	derivative.h	4266;"	d
DDR_CR49_P2PRI3	derivative.h	4270;"	d
DDR_CR49_P2PRI3_MASK	derivative.h	4268;"	d
DDR_CR49_P2PRI3_SHIFT	derivative.h	4269;"	d
DDR_CR49_REG	derivative.h	3795;"	d
DDR_CR50	derivative.h	4474;"	d
DDR_CR50_CLKSTATUS_MASK	derivative.h	4278;"	d
DDR_CR50_CLKSTATUS_SHIFT	derivative.h	4279;"	d
DDR_CR50_P2PRIRLX	derivative.h	4277;"	d
DDR_CR50_P2PRIRLX_MASK	derivative.h	4275;"	d
DDR_CR50_P2PRIRLX_SHIFT	derivative.h	4276;"	d
DDR_CR50_REG	derivative.h	3796;"	d
DDR_CR51	derivative.h	4475;"	d
DDR_CR51_DLLRADLY	derivative.h	4286;"	d
DDR_CR51_DLLRADLY_MASK	derivative.h	4284;"	d
DDR_CR51_DLLRADLY_SHIFT	derivative.h	4285;"	d
DDR_CR51_DLLRSTDLY	derivative.h	4283;"	d
DDR_CR51_DLLRSTDLY_MASK	derivative.h	4281;"	d
DDR_CR51_DLLRSTDLY_SHIFT	derivative.h	4282;"	d
DDR_CR51_PHYWRLAT	derivative.h	4289;"	d
DDR_CR51_PHYWRLAT_MASK	derivative.h	4287;"	d
DDR_CR51_PHYWRLAT_SHIFT	derivative.h	4288;"	d
DDR_CR51_REG	derivative.h	3797;"	d
DDR_CR52	derivative.h	4476;"	d
DDR_CR52_PHYRDLAT	derivative.h	4296;"	d
DDR_CR52_PHYRDLAT_MASK	derivative.h	4294;"	d
DDR_CR52_PHYRDLAT_SHIFT	derivative.h	4295;"	d
DDR_CR52_PYWRLTBS	derivative.h	4293;"	d
DDR_CR52_PYWRLTBS_MASK	derivative.h	4291;"	d
DDR_CR52_PYWRLTBS_SHIFT	derivative.h	4292;"	d
DDR_CR52_RDDATAEN	derivative.h	4299;"	d
DDR_CR52_RDDATAEN_MASK	derivative.h	4297;"	d
DDR_CR52_RDDATAEN_SHIFT	derivative.h	4298;"	d
DDR_CR52_RDDTENBAS	derivative.h	4302;"	d
DDR_CR52_RDDTENBAS_MASK	derivative.h	4300;"	d
DDR_CR52_RDDTENBAS_SHIFT	derivative.h	4301;"	d
DDR_CR52_REG	derivative.h	3798;"	d
DDR_CR53	derivative.h	4477;"	d
DDR_CR53_CLKDISCS_MASK	derivative.h	4304;"	d
DDR_CR53_CLKDISCS_SHIFT	derivative.h	4305;"	d
DDR_CR53_CRTLUPDMN	derivative.h	4308;"	d
DDR_CR53_CRTLUPDMN_MASK	derivative.h	4306;"	d
DDR_CR53_CRTLUPDMN_SHIFT	derivative.h	4307;"	d
DDR_CR53_CTRLUPDMX	derivative.h	4311;"	d
DDR_CR53_CTRLUPDMX_MASK	derivative.h	4309;"	d
DDR_CR53_CTRLUPDMX_SHIFT	derivative.h	4310;"	d
DDR_CR53_REG	derivative.h	3799;"	d
DDR_CR54	derivative.h	4478;"	d
DDR_CR54_PHYUPDTY0	derivative.h	4315;"	d
DDR_CR54_PHYUPDTY0_MASK	derivative.h	4313;"	d
DDR_CR54_PHYUPDTY0_SHIFT	derivative.h	4314;"	d
DDR_CR54_PHYUPDTY1	derivative.h	4318;"	d
DDR_CR54_PHYUPDTY1_MASK	derivative.h	4316;"	d
DDR_CR54_PHYUPDTY1_SHIFT	derivative.h	4317;"	d
DDR_CR54_REG	derivative.h	3800;"	d
DDR_CR55	derivative.h	4479;"	d
DDR_CR55_PHYUPDTY2	derivative.h	4322;"	d
DDR_CR55_PHYUPDTY2_MASK	derivative.h	4320;"	d
DDR_CR55_PHYUPDTY2_SHIFT	derivative.h	4321;"	d
DDR_CR55_PHYUPDTY3	derivative.h	4325;"	d
DDR_CR55_PHYUPDTY3_MASK	derivative.h	4323;"	d
DDR_CR55_PHYUPDTY3_SHIFT	derivative.h	4324;"	d
DDR_CR55_REG	derivative.h	3801;"	d
DDR_CR56	derivative.h	4480;"	d
DDR_CR56_PHYUPDRESP	derivative.h	4329;"	d
DDR_CR56_PHYUPDRESP_MASK	derivative.h	4327;"	d
DDR_CR56_PHYUPDRESP_SHIFT	derivative.h	4328;"	d
DDR_CR56_RDLATADJ	derivative.h	4332;"	d
DDR_CR56_RDLATADJ_MASK	derivative.h	4330;"	d
DDR_CR56_RDLATADJ_SHIFT	derivative.h	4331;"	d
DDR_CR56_REG	derivative.h	3802;"	d
DDR_CR56_WRLATADJ	derivative.h	4335;"	d
DDR_CR56_WRLATADJ_MASK	derivative.h	4333;"	d
DDR_CR56_WRLATADJ_SHIFT	derivative.h	4334;"	d
DDR_CR57	derivative.h	4481;"	d
DDR_CR57_CLKDISDLY	derivative.h	4342;"	d
DDR_CR57_CLKDISDLY_MASK	derivative.h	4340;"	d
DDR_CR57_CLKDISDLY_SHIFT	derivative.h	4341;"	d
DDR_CR57_CLKENDLY	derivative.h	4345;"	d
DDR_CR57_CLKENDLY_MASK	derivative.h	4343;"	d
DDR_CR57_CLKENDLY_SHIFT	derivative.h	4344;"	d
DDR_CR57_CMDDLY	derivative.h	4339;"	d
DDR_CR57_CMDDLY_MASK	derivative.h	4337;"	d
DDR_CR57_CMDDLY_SHIFT	derivative.h	4338;"	d
DDR_CR57_ODTALTEN_MASK	derivative.h	4346;"	d
DDR_CR57_ODTALTEN_SHIFT	derivative.h	4347;"	d
DDR_CR57_REG	derivative.h	3803;"	d
DDR_CR58	derivative.h	4482;"	d
DDR_CR58_NOT_USED	derivative.h	4354;"	d
DDR_CR58_NOT_USED_MASK	derivative.h	4352;"	d
DDR_CR58_NOT_USED_SHIFT	derivative.h	4353;"	d
DDR_CR58_Not_Used	derivative.h	4351;"	d
DDR_CR58_Not_Used_MASK	derivative.h	4349;"	d
DDR_CR58_Not_Used_SHIFT	derivative.h	4350;"	d
DDR_CR58_REG	derivative.h	3804;"	d
DDR_CR59	derivative.h	4483;"	d
DDR_CR59_NOT_USED	derivative.h	4361;"	d
DDR_CR59_NOT_USED_MASK	derivative.h	4359;"	d
DDR_CR59_NOT_USED_SHIFT	derivative.h	4360;"	d
DDR_CR59_Not_Used	derivative.h	4358;"	d
DDR_CR59_Not_Used_MASK	derivative.h	4356;"	d
DDR_CR59_Not_Used_SHIFT	derivative.h	4357;"	d
DDR_CR59_REG	derivative.h	3805;"	d
DDR_CR60	derivative.h	4484;"	d
DDR_CR60_NOT_USED	derivative.h	4368;"	d
DDR_CR60_NOT_USED_MASK	derivative.h	4366;"	d
DDR_CR60_NOT_USED_SHIFT	derivative.h	4367;"	d
DDR_CR60_Not_Used	derivative.h	4365;"	d
DDR_CR60_Not_Used_MASK	derivative.h	4363;"	d
DDR_CR60_Not_Used_SHIFT	derivative.h	4364;"	d
DDR_CR60_REG	derivative.h	3806;"	d
DDR_CR61	derivative.h	4485;"	d
DDR_CR61_NOT_USED	derivative.h	4375;"	d
DDR_CR61_NOT_USED_MASK	derivative.h	4373;"	d
DDR_CR61_NOT_USED_SHIFT	derivative.h	4374;"	d
DDR_CR61_Not_Used	derivative.h	4372;"	d
DDR_CR61_Not_Used_MASK	derivative.h	4370;"	d
DDR_CR61_Not_Used_SHIFT	derivative.h	4371;"	d
DDR_CR61_REG	derivative.h	3807;"	d
DDR_CR62	derivative.h	4486;"	d
DDR_CR62_NOT_USED	derivative.h	4382;"	d
DDR_CR62_NOT_USED_MASK	derivative.h	4380;"	d
DDR_CR62_NOT_USED_SHIFT	derivative.h	4381;"	d
DDR_CR62_Not_Used	derivative.h	4379;"	d
DDR_CR62_Not_Used_MASK	derivative.h	4377;"	d
DDR_CR62_Not_Used_SHIFT	derivative.h	4378;"	d
DDR_CR62_REG	derivative.h	3808;"	d
DDR_CR63	derivative.h	4487;"	d
DDR_CR63_NOT_USED	derivative.h	4389;"	d
DDR_CR63_NOT_USED_MASK	derivative.h	4387;"	d
DDR_CR63_NOT_USED_SHIFT	derivative.h	4388;"	d
DDR_CR63_Not_Used	derivative.h	4386;"	d
DDR_CR63_Not_Used_MASK	derivative.h	4384;"	d
DDR_CR63_Not_Used_SHIFT	derivative.h	4385;"	d
DDR_CR63_REG	derivative.h	3809;"	d
DDR_MemMap	derivative.h	/^typedef struct DDR_MemMap {$/;"	s
DDR_MemMapPtr	derivative.h	/^} volatile *DDR_MemMapPtr;$/;"	t
DDR_PAD_CTRL	derivative.h	4489;"	d
DDR_PAD_CTRL_PAD_ODT_CS0	derivative.h	4399;"	d
DDR_PAD_CTRL_PAD_ODT_CS0_150_OHMS	sdram.h	28;"	d
DDR_PAD_CTRL_PAD_ODT_CS0_50_OHMS	sdram.h	29;"	d
DDR_PAD_CTRL_PAD_ODT_CS0_75_OHMS	sdram.h	27;"	d
DDR_PAD_CTRL_PAD_ODT_CS0_MASK	derivative.h	4397;"	d
DDR_PAD_CTRL_PAD_ODT_CS0_ODT_DISABLED	sdram.h	26;"	d
DDR_PAD_CTRL_PAD_ODT_CS0_SHIFT	derivative.h	4398;"	d
DDR_PAD_CTRL_REG	derivative.h	3811;"	d
DDR_PAD_CTRL_SPARE_DLY_CTRL	derivative.h	4396;"	d
DDR_PAD_CTRL_SPARE_DLY_CTRL_10_BUFFERS	sdram.h	34;"	d
DDR_PAD_CTRL_SPARE_DLY_CTRL_4_BUFFERS	sdram.h	32;"	d
DDR_PAD_CTRL_SPARE_DLY_CTRL_7_BUFFERS	sdram.h	33;"	d
DDR_PAD_CTRL_SPARE_DLY_CTRL_MASK	derivative.h	4394;"	d
DDR_PAD_CTRL_SPARE_DLY_CTRL_NO_BUFFER	sdram.h	31;"	d
DDR_PAD_CTRL_SPARE_DLY_CTRL_SHIFT	derivative.h	4395;"	d
DDR_RCR	derivative.h	4488;"	d
DDR_RCR_REG	derivative.h	3810;"	d
DDR_RCR_RST_MASK	derivative.h	4391;"	d
DDR_RCR_RST_SHIFT	derivative.h	4392;"	d
DEADTIME	derivative.h	/^  uint32_t DEADTIME;                               \/**< Deadtime Insertion Control, offset: 0x68 *\/$/;"	m	struct:FTM_MemMap
DEMCR	derivative.h	3423;"	d
DEVICEADDR	derivative.h	/^    uint32_t DEVICEADDR;                             \/**< Device Address Register, offset: 0x154 *\/$/;"	m	union:USBHS_MemMap::__anon33
DEVID	derivative.h	/^  uint32_t DEVID;                                  \/**< Device ID Register, offset: 0xFC8 *\/$/;"	m	struct:ETB_MemMap
DEVID	derivative.h	/^  uint32_t DEVID;                                  \/**< Device ID Register, offset: 0xFC8 *\/$/;"	m	struct:ETF_MemMap
DEVID	derivative.h	/^  uint32_t DEVID;                                  \/**< TPIU_DEVID Register, offset: 0xFC8 *\/$/;"	m	struct:TPIU_MemMap
DEVTYPE	derivative.h	/^  uint32_t DEVTYPE;                                \/**< CoreSight Device Type Register, offset: 0xFCC *\/$/;"	m	struct:ETM_MemMap
DEVTYPE	derivative.h	/^  uint32_t DEVTYPE;                                \/**< Device Type Identifier Register, offset: 0xFCC *\/$/;"	m	struct:ETB_MemMap
DEVTYPE	derivative.h	/^  uint32_t DEVTYPE;                                \/**< Device Type Identifier Register, offset: 0xFCC *\/$/;"	m	struct:ETF_MemMap
DFCR	derivative.h	/^  uint32_t DFCR;                                   \/**< Digital Filter Clock Register, offset: 0xC4 *\/$/;"	m	struct:PORT_MemMap
DFER	derivative.h	/^  uint32_t DFER;                                   \/**< Digital Filter Enable Register, offset: 0xC0 *\/$/;"	m	struct:PORT_MemMap
DFSR	derivative.h	/^  uint32_t DFSR;                                   \/**< Debug Fault Status Register, offset: 0xD30 *\/$/;"	m	struct:SCB_MemMap
DFWR	derivative.h	/^  uint32_t DFWR;                                   \/**< Digital Filter Width Register, offset: 0xC8 *\/$/;"	m	struct:PORT_MemMap
DHCSR_Read	derivative.h	3419;"	d
DHCSR_Write	derivative.h	3420;"	d
DIRECT	derivative.h	/^  uint32_t DIRECT[16];                             \/**< Direct access register 0..Direct access register 15, array offset: 0x0, array step: 0x4 *\/$/;"	m	struct:CAU_MemMap
DLAST_SGA	derivative.h	/^    uint32_t DLAST_SGA;                              \/**< TCD Last Destination Address Adjustment\/Scatter Gather Address, array offset: 0x1018, array step: 0x20 *\/$/;"	m	struct:DMA_MemMap::__anon15
DLY	derivative.h	/^    uint32_t DLY[2];                                 \/**< Channel n Delay 0 Register..Channel n Delay 1 Register, array offset: 0x18, array step: index*0x28, index2*0x4 *\/$/;"	m	struct:PDB_MemMap::__anon26
DMA	derivative.h	/^  uint8_t DMA;                                     \/**< CMT Direct Memory Access, offset: 0xB *\/$/;"	m	struct:CMT_MemMap
DMA1	derivative.h	/^  uint32_t DMA1;                                   \/**< DMA channel 1 address, offset: 0x3F20 *\/$/;"	m	struct:NFC_MemMap
DMA2	derivative.h	/^  uint32_t DMA2;                                   \/**< DMA channel 2 address, offset: 0x3F34 *\/$/;"	m	struct:NFC_MemMap
DMACFG	derivative.h	/^  uint32_t DMACFG;                                 \/**< DMA configuration, offset: 0x3F24 *\/$/;"	m	struct:NFC_MemMap
DMAMUX0_BASE_PTR	derivative.h	6222;"	d
DMAMUX0_CHCFG	derivative.h	6275;"	d
DMAMUX0_CHCFG0	derivative.h	6240;"	d
DMAMUX0_CHCFG1	derivative.h	6241;"	d
DMAMUX0_CHCFG10	derivative.h	6250;"	d
DMAMUX0_CHCFG11	derivative.h	6251;"	d
DMAMUX0_CHCFG12	derivative.h	6252;"	d
DMAMUX0_CHCFG13	derivative.h	6253;"	d
DMAMUX0_CHCFG14	derivative.h	6254;"	d
DMAMUX0_CHCFG15	derivative.h	6255;"	d
DMAMUX0_CHCFG2	derivative.h	6242;"	d
DMAMUX0_CHCFG3	derivative.h	6243;"	d
DMAMUX0_CHCFG4	derivative.h	6244;"	d
DMAMUX0_CHCFG5	derivative.h	6245;"	d
DMAMUX0_CHCFG6	derivative.h	6246;"	d
DMAMUX0_CHCFG7	derivative.h	6247;"	d
DMAMUX0_CHCFG8	derivative.h	6248;"	d
DMAMUX0_CHCFG9	derivative.h	6249;"	d
DMAMUX1_BASE_PTR	derivative.h	6224;"	d
DMAMUX1_CHCFG	derivative.h	6276;"	d
DMAMUX1_CHCFG0	derivative.h	6257;"	d
DMAMUX1_CHCFG1	derivative.h	6258;"	d
DMAMUX1_CHCFG10	derivative.h	6267;"	d
DMAMUX1_CHCFG11	derivative.h	6268;"	d
DMAMUX1_CHCFG12	derivative.h	6269;"	d
DMAMUX1_CHCFG13	derivative.h	6270;"	d
DMAMUX1_CHCFG14	derivative.h	6271;"	d
DMAMUX1_CHCFG15	derivative.h	6272;"	d
DMAMUX1_CHCFG2	derivative.h	6259;"	d
DMAMUX1_CHCFG3	derivative.h	6260;"	d
DMAMUX1_CHCFG4	derivative.h	6261;"	d
DMAMUX1_CHCFG5	derivative.h	6262;"	d
DMAMUX1_CHCFG6	derivative.h	6263;"	d
DMAMUX1_CHCFG7	derivative.h	6264;"	d
DMAMUX1_CHCFG8	derivative.h	6265;"	d
DMAMUX1_CHCFG9	derivative.h	6266;"	d
DMAMUX_BASE_PTRS	derivative.h	6226;"	d
DMAMUX_CHCFG_ENBL_MASK	derivative.h	6212;"	d
DMAMUX_CHCFG_ENBL_SHIFT	derivative.h	6213;"	d
DMAMUX_CHCFG_REG	derivative.h	6190;"	d
DMAMUX_CHCFG_SOURCE	derivative.h	6209;"	d
DMAMUX_CHCFG_SOURCE_MASK	derivative.h	6207;"	d
DMAMUX_CHCFG_SOURCE_SHIFT	derivative.h	6208;"	d
DMAMUX_CHCFG_TRIG_MASK	derivative.h	6210;"	d
DMAMUX_CHCFG_TRIG_SHIFT	derivative.h	6211;"	d
DMAMUX_MemMap	derivative.h	/^typedef struct DMAMUX_MemMap {$/;"	s
DMAMUX_MemMapPtr	derivative.h	/^} volatile *DMAMUX_MemMapPtr;$/;"	t
DMA_ATTR	derivative.h	6141;"	d
DMA_ATTR_DMOD	derivative.h	5487;"	d
DMA_ATTR_DMOD_MASK	derivative.h	5485;"	d
DMA_ATTR_DMOD_SHIFT	derivative.h	5486;"	d
DMA_ATTR_DSIZE	derivative.h	5484;"	d
DMA_ATTR_DSIZE_MASK	derivative.h	5482;"	d
DMA_ATTR_DSIZE_SHIFT	derivative.h	5483;"	d
DMA_ATTR_REG	derivative.h	4651;"	d
DMA_ATTR_SMOD	derivative.h	5493;"	d
DMA_ATTR_SMOD_MASK	derivative.h	5491;"	d
DMA_ATTR_SMOD_SHIFT	derivative.h	5492;"	d
DMA_ATTR_SSIZE	derivative.h	5490;"	d
DMA_ATTR_SSIZE_MASK	derivative.h	5488;"	d
DMA_ATTR_SSIZE_SHIFT	derivative.h	5489;"	d
DMA_BASE_PTR	derivative.h	5594;"	d
DMA_BASE_PTRS	derivative.h	5596;"	d
DMA_BITER_ELINKNO	derivative.h	6152;"	d
DMA_BITER_ELINKNO_BITER	derivative.h	5574;"	d
DMA_BITER_ELINKNO_BITER_MASK	derivative.h	5572;"	d
DMA_BITER_ELINKNO_BITER_SHIFT	derivative.h	5573;"	d
DMA_BITER_ELINKNO_ELINK_MASK	derivative.h	5575;"	d
DMA_BITER_ELINKNO_ELINK_SHIFT	derivative.h	5576;"	d
DMA_BITER_ELINKNO_REG	derivative.h	4662;"	d
DMA_BITER_ELINKYES	derivative.h	6153;"	d
DMA_BITER_ELINKYES_BITER	derivative.h	5580;"	d
DMA_BITER_ELINKYES_BITER_MASK	derivative.h	5578;"	d
DMA_BITER_ELINKYES_BITER_SHIFT	derivative.h	5579;"	d
DMA_BITER_ELINKYES_ELINK_MASK	derivative.h	5584;"	d
DMA_BITER_ELINKYES_ELINK_SHIFT	derivative.h	5585;"	d
DMA_BITER_ELINKYES_LINKCH	derivative.h	5583;"	d
DMA_BITER_ELINKYES_LINKCH_MASK	derivative.h	5581;"	d
DMA_BITER_ELINKYES_LINKCH_SHIFT	derivative.h	5582;"	d
DMA_BITER_ELINKYES_REG	derivative.h	4663;"	d
DMA_CDNE	derivative.h	5618;"	d
DMA_CDNE_CADN_MASK	derivative.h	4898;"	d
DMA_CDNE_CADN_SHIFT	derivative.h	4899;"	d
DMA_CDNE_CDNE	derivative.h	4897;"	d
DMA_CDNE_CDNE_MASK	derivative.h	4895;"	d
DMA_CDNE_CDNE_SHIFT	derivative.h	4896;"	d
DMA_CDNE_NOP_MASK	derivative.h	4900;"	d
DMA_CDNE_NOP_SHIFT	derivative.h	4901;"	d
DMA_CDNE_REG	derivative.h	4610;"	d
DMA_CEEI	derivative.h	5614;"	d
DMA_CEEI_CAEE_MASK	derivative.h	4866;"	d
DMA_CEEI_CAEE_SHIFT	derivative.h	4867;"	d
DMA_CEEI_CEEI	derivative.h	4865;"	d
DMA_CEEI_CEEI_MASK	derivative.h	4863;"	d
DMA_CEEI_CEEI_SHIFT	derivative.h	4864;"	d
DMA_CEEI_NOP_MASK	derivative.h	4868;"	d
DMA_CEEI_NOP_SHIFT	derivative.h	4869;"	d
DMA_CEEI_REG	derivative.h	4606;"	d
DMA_CERQ	derivative.h	5616;"	d
DMA_CERQ_CAER_MASK	derivative.h	4882;"	d
DMA_CERQ_CAER_SHIFT	derivative.h	4883;"	d
DMA_CERQ_CERQ	derivative.h	4881;"	d
DMA_CERQ_CERQ_MASK	derivative.h	4879;"	d
DMA_CERQ_CERQ_SHIFT	derivative.h	4880;"	d
DMA_CERQ_NOP_MASK	derivative.h	4884;"	d
DMA_CERQ_NOP_SHIFT	derivative.h	4885;"	d
DMA_CERQ_REG	derivative.h	4608;"	d
DMA_CERR	derivative.h	5620;"	d
DMA_CERR_CAEI_MASK	derivative.h	4914;"	d
DMA_CERR_CAEI_SHIFT	derivative.h	4915;"	d
DMA_CERR_CERR	derivative.h	4913;"	d
DMA_CERR_CERR_MASK	derivative.h	4911;"	d
DMA_CERR_CERR_SHIFT	derivative.h	4912;"	d
DMA_CERR_NOP_MASK	derivative.h	4916;"	d
DMA_CERR_NOP_SHIFT	derivative.h	4917;"	d
DMA_CERR_REG	derivative.h	4612;"	d
DMA_CINT	derivative.h	5621;"	d
DMA_CINT_CAIR_MASK	derivative.h	4922;"	d
DMA_CINT_CAIR_SHIFT	derivative.h	4923;"	d
DMA_CINT_CINT	derivative.h	4921;"	d
DMA_CINT_CINT_MASK	derivative.h	4919;"	d
DMA_CINT_CINT_SHIFT	derivative.h	4920;"	d
DMA_CINT_NOP_MASK	derivative.h	4924;"	d
DMA_CINT_NOP_SHIFT	derivative.h	4925;"	d
DMA_CINT_REG	derivative.h	4613;"	d
DMA_CITER_ELINKNO	derivative.h	6148;"	d
DMA_CITER_ELINKNO_CITER	derivative.h	5532;"	d
DMA_CITER_ELINKNO_CITER_MASK	derivative.h	5530;"	d
DMA_CITER_ELINKNO_CITER_SHIFT	derivative.h	5531;"	d
DMA_CITER_ELINKNO_ELINK_MASK	derivative.h	5533;"	d
DMA_CITER_ELINKNO_ELINK_SHIFT	derivative.h	5534;"	d
DMA_CITER_ELINKNO_REG	derivative.h	4658;"	d
DMA_CITER_ELINKYES	derivative.h	6149;"	d
DMA_CITER_ELINKYES_CITER	derivative.h	5538;"	d
DMA_CITER_ELINKYES_CITER_MASK	derivative.h	5536;"	d
DMA_CITER_ELINKYES_CITER_SHIFT	derivative.h	5537;"	d
DMA_CITER_ELINKYES_ELINK_MASK	derivative.h	5542;"	d
DMA_CITER_ELINKYES_ELINK_SHIFT	derivative.h	5543;"	d
DMA_CITER_ELINKYES_LINKCH	derivative.h	5541;"	d
DMA_CITER_ELINKYES_LINKCH_MASK	derivative.h	5539;"	d
DMA_CITER_ELINKYES_LINKCH_SHIFT	derivative.h	5540;"	d
DMA_CITER_ELINKYES_REG	derivative.h	4659;"	d
DMA_CR	derivative.h	5610;"	d
DMA_CR_CLM_MASK	derivative.h	4690;"	d
DMA_CR_CLM_SHIFT	derivative.h	4691;"	d
DMA_CR_CX_MASK	derivative.h	4702;"	d
DMA_CR_CX_SHIFT	derivative.h	4703;"	d
DMA_CR_ECX_MASK	derivative.h	4700;"	d
DMA_CR_ECX_SHIFT	derivative.h	4701;"	d
DMA_CR_EDBG_MASK	derivative.h	4680;"	d
DMA_CR_EDBG_SHIFT	derivative.h	4681;"	d
DMA_CR_EMLM_MASK	derivative.h	4692;"	d
DMA_CR_EMLM_SHIFT	derivative.h	4693;"	d
DMA_CR_ERCA_MASK	derivative.h	4682;"	d
DMA_CR_ERCA_SHIFT	derivative.h	4683;"	d
DMA_CR_ERGA_MASK	derivative.h	4684;"	d
DMA_CR_ERGA_SHIFT	derivative.h	4685;"	d
DMA_CR_GRP0PRI	derivative.h	4696;"	d
DMA_CR_GRP0PRI_MASK	derivative.h	4694;"	d
DMA_CR_GRP0PRI_SHIFT	derivative.h	4695;"	d
DMA_CR_GRP1PRI	derivative.h	4699;"	d
DMA_CR_GRP1PRI_MASK	derivative.h	4697;"	d
DMA_CR_GRP1PRI_SHIFT	derivative.h	4698;"	d
DMA_CR_HALT_MASK	derivative.h	4688;"	d
DMA_CR_HALT_SHIFT	derivative.h	4689;"	d
DMA_CR_HOE_MASK	derivative.h	4686;"	d
DMA_CR_HOE_SHIFT	derivative.h	4687;"	d
DMA_CR_REG	derivative.h	4602;"	d
DMA_CSR	derivative.h	6151;"	d
DMA_CSR_ACTIVE_MASK	derivative.h	5561;"	d
DMA_CSR_ACTIVE_SHIFT	derivative.h	5562;"	d
DMA_CSR_BWC	derivative.h	5570;"	d
DMA_CSR_BWC_MASK	derivative.h	5568;"	d
DMA_CSR_BWC_SHIFT	derivative.h	5569;"	d
DMA_CSR_DONE_MASK	derivative.h	5563;"	d
DMA_CSR_DONE_SHIFT	derivative.h	5564;"	d
DMA_CSR_DREQ_MASK	derivative.h	5555;"	d
DMA_CSR_DREQ_SHIFT	derivative.h	5556;"	d
DMA_CSR_ESG_MASK	derivative.h	5557;"	d
DMA_CSR_ESG_SHIFT	derivative.h	5558;"	d
DMA_CSR_INTHALF_MASK	derivative.h	5553;"	d
DMA_CSR_INTHALF_SHIFT	derivative.h	5554;"	d
DMA_CSR_INTMAJOR_MASK	derivative.h	5551;"	d
DMA_CSR_INTMAJOR_SHIFT	derivative.h	5552;"	d
DMA_CSR_MAJORELINK_MASK	derivative.h	5559;"	d
DMA_CSR_MAJORELINK_SHIFT	derivative.h	5560;"	d
DMA_CSR_MAJORLINKCH	derivative.h	5567;"	d
DMA_CSR_MAJORLINKCH_MASK	derivative.h	5565;"	d
DMA_CSR_MAJORLINKCH_SHIFT	derivative.h	5566;"	d
DMA_CSR_REG	derivative.h	4661;"	d
DMA_CSR_START_MASK	derivative.h	5549;"	d
DMA_CSR_START_SHIFT	derivative.h	5550;"	d
DMA_DADDR	derivative.h	6146;"	d
DMA_DADDR_DADDR	derivative.h	5524;"	d
DMA_DADDR_DADDR_MASK	derivative.h	5522;"	d
DMA_DADDR_DADDR_SHIFT	derivative.h	5523;"	d
DMA_DADDR_REG	derivative.h	4656;"	d
DMA_DCHPRI0	derivative.h	5628;"	d
DMA_DCHPRI0_CHPRI	derivative.h	5157;"	d
DMA_DCHPRI0_CHPRI_MASK	derivative.h	5155;"	d
DMA_DCHPRI0_CHPRI_SHIFT	derivative.h	5156;"	d
DMA_DCHPRI0_DPA_MASK	derivative.h	5161;"	d
DMA_DCHPRI0_DPA_SHIFT	derivative.h	5162;"	d
DMA_DCHPRI0_ECP_MASK	derivative.h	5163;"	d
DMA_DCHPRI0_ECP_SHIFT	derivative.h	5164;"	d
DMA_DCHPRI0_GRPPRI	derivative.h	5160;"	d
DMA_DCHPRI0_GRPPRI_MASK	derivative.h	5158;"	d
DMA_DCHPRI0_GRPPRI_SHIFT	derivative.h	5159;"	d
DMA_DCHPRI0_REG	derivative.h	4620;"	d
DMA_DCHPRI1	derivative.h	5627;"	d
DMA_DCHPRI10	derivative.h	5634;"	d
DMA_DCHPRI10_CHPRI	derivative.h	5223;"	d
DMA_DCHPRI10_CHPRI_MASK	derivative.h	5221;"	d
DMA_DCHPRI10_CHPRI_SHIFT	derivative.h	5222;"	d
DMA_DCHPRI10_DPA_MASK	derivative.h	5227;"	d
DMA_DCHPRI10_DPA_SHIFT	derivative.h	5228;"	d
DMA_DCHPRI10_ECP_MASK	derivative.h	5229;"	d
DMA_DCHPRI10_ECP_SHIFT	derivative.h	5230;"	d
DMA_DCHPRI10_GRPPRI	derivative.h	5226;"	d
DMA_DCHPRI10_GRPPRI_MASK	derivative.h	5224;"	d
DMA_DCHPRI10_GRPPRI_SHIFT	derivative.h	5225;"	d
DMA_DCHPRI10_REG	derivative.h	4626;"	d
DMA_DCHPRI11	derivative.h	5633;"	d
DMA_DCHPRI11_CHPRI	derivative.h	5212;"	d
DMA_DCHPRI11_CHPRI_MASK	derivative.h	5210;"	d
DMA_DCHPRI11_CHPRI_SHIFT	derivative.h	5211;"	d
DMA_DCHPRI11_DPA_MASK	derivative.h	5216;"	d
DMA_DCHPRI11_DPA_SHIFT	derivative.h	5217;"	d
DMA_DCHPRI11_ECP_MASK	derivative.h	5218;"	d
DMA_DCHPRI11_ECP_SHIFT	derivative.h	5219;"	d
DMA_DCHPRI11_GRPPRI	derivative.h	5215;"	d
DMA_DCHPRI11_GRPPRI_MASK	derivative.h	5213;"	d
DMA_DCHPRI11_GRPPRI_SHIFT	derivative.h	5214;"	d
DMA_DCHPRI11_REG	derivative.h	4625;"	d
DMA_DCHPRI12	derivative.h	5640;"	d
DMA_DCHPRI12_CHPRI	derivative.h	5289;"	d
DMA_DCHPRI12_CHPRI_MASK	derivative.h	5287;"	d
DMA_DCHPRI12_CHPRI_SHIFT	derivative.h	5288;"	d
DMA_DCHPRI12_DPA_MASK	derivative.h	5293;"	d
DMA_DCHPRI12_DPA_SHIFT	derivative.h	5294;"	d
DMA_DCHPRI12_ECP_MASK	derivative.h	5295;"	d
DMA_DCHPRI12_ECP_SHIFT	derivative.h	5296;"	d
DMA_DCHPRI12_GRPPRI	derivative.h	5292;"	d
DMA_DCHPRI12_GRPPRI_MASK	derivative.h	5290;"	d
DMA_DCHPRI12_GRPPRI_SHIFT	derivative.h	5291;"	d
DMA_DCHPRI12_REG	derivative.h	4632;"	d
DMA_DCHPRI13	derivative.h	5639;"	d
DMA_DCHPRI13_CHPRI	derivative.h	5278;"	d
DMA_DCHPRI13_CHPRI_MASK	derivative.h	5276;"	d
DMA_DCHPRI13_CHPRI_SHIFT	derivative.h	5277;"	d
DMA_DCHPRI13_DPA_MASK	derivative.h	5282;"	d
DMA_DCHPRI13_DPA_SHIFT	derivative.h	5283;"	d
DMA_DCHPRI13_ECP_MASK	derivative.h	5284;"	d
DMA_DCHPRI13_ECP_SHIFT	derivative.h	5285;"	d
DMA_DCHPRI13_GRPPRI	derivative.h	5281;"	d
DMA_DCHPRI13_GRPPRI_MASK	derivative.h	5279;"	d
DMA_DCHPRI13_GRPPRI_SHIFT	derivative.h	5280;"	d
DMA_DCHPRI13_REG	derivative.h	4631;"	d
DMA_DCHPRI14	derivative.h	5638;"	d
DMA_DCHPRI14_CHPRI	derivative.h	5267;"	d
DMA_DCHPRI14_CHPRI_MASK	derivative.h	5265;"	d
DMA_DCHPRI14_CHPRI_SHIFT	derivative.h	5266;"	d
DMA_DCHPRI14_DPA_MASK	derivative.h	5271;"	d
DMA_DCHPRI14_DPA_SHIFT	derivative.h	5272;"	d
DMA_DCHPRI14_ECP_MASK	derivative.h	5273;"	d
DMA_DCHPRI14_ECP_SHIFT	derivative.h	5274;"	d
DMA_DCHPRI14_GRPPRI	derivative.h	5270;"	d
DMA_DCHPRI14_GRPPRI_MASK	derivative.h	5268;"	d
DMA_DCHPRI14_GRPPRI_SHIFT	derivative.h	5269;"	d
DMA_DCHPRI14_REG	derivative.h	4630;"	d
DMA_DCHPRI15	derivative.h	5637;"	d
DMA_DCHPRI15_CHPRI	derivative.h	5256;"	d
DMA_DCHPRI15_CHPRI_MASK	derivative.h	5254;"	d
DMA_DCHPRI15_CHPRI_SHIFT	derivative.h	5255;"	d
DMA_DCHPRI15_DPA_MASK	derivative.h	5260;"	d
DMA_DCHPRI15_DPA_SHIFT	derivative.h	5261;"	d
DMA_DCHPRI15_ECP_MASK	derivative.h	5262;"	d
DMA_DCHPRI15_ECP_SHIFT	derivative.h	5263;"	d
DMA_DCHPRI15_GRPPRI	derivative.h	5259;"	d
DMA_DCHPRI15_GRPPRI_MASK	derivative.h	5257;"	d
DMA_DCHPRI15_GRPPRI_SHIFT	derivative.h	5258;"	d
DMA_DCHPRI15_REG	derivative.h	4629;"	d
DMA_DCHPRI16	derivative.h	5644;"	d
DMA_DCHPRI16_CHPRI	derivative.h	5333;"	d
DMA_DCHPRI16_CHPRI_MASK	derivative.h	5331;"	d
DMA_DCHPRI16_CHPRI_SHIFT	derivative.h	5332;"	d
DMA_DCHPRI16_DPA_MASK	derivative.h	5337;"	d
DMA_DCHPRI16_DPA_SHIFT	derivative.h	5338;"	d
DMA_DCHPRI16_ECP_MASK	derivative.h	5339;"	d
DMA_DCHPRI16_ECP_SHIFT	derivative.h	5340;"	d
DMA_DCHPRI16_GRPPRI	derivative.h	5336;"	d
DMA_DCHPRI16_GRPPRI_MASK	derivative.h	5334;"	d
DMA_DCHPRI16_GRPPRI_SHIFT	derivative.h	5335;"	d
DMA_DCHPRI16_REG	derivative.h	4636;"	d
DMA_DCHPRI17	derivative.h	5643;"	d
DMA_DCHPRI17_CHPRI	derivative.h	5322;"	d
DMA_DCHPRI17_CHPRI_MASK	derivative.h	5320;"	d
DMA_DCHPRI17_CHPRI_SHIFT	derivative.h	5321;"	d
DMA_DCHPRI17_DPA_MASK	derivative.h	5326;"	d
DMA_DCHPRI17_DPA_SHIFT	derivative.h	5327;"	d
DMA_DCHPRI17_ECP_MASK	derivative.h	5328;"	d
DMA_DCHPRI17_ECP_SHIFT	derivative.h	5329;"	d
DMA_DCHPRI17_GRPPRI	derivative.h	5325;"	d
DMA_DCHPRI17_GRPPRI_MASK	derivative.h	5323;"	d
DMA_DCHPRI17_GRPPRI_SHIFT	derivative.h	5324;"	d
DMA_DCHPRI17_REG	derivative.h	4635;"	d
DMA_DCHPRI18	derivative.h	5642;"	d
DMA_DCHPRI18_CHPRI	derivative.h	5311;"	d
DMA_DCHPRI18_CHPRI_MASK	derivative.h	5309;"	d
DMA_DCHPRI18_CHPRI_SHIFT	derivative.h	5310;"	d
DMA_DCHPRI18_DPA_MASK	derivative.h	5315;"	d
DMA_DCHPRI18_DPA_SHIFT	derivative.h	5316;"	d
DMA_DCHPRI18_ECP_MASK	derivative.h	5317;"	d
DMA_DCHPRI18_ECP_SHIFT	derivative.h	5318;"	d
DMA_DCHPRI18_GRPPRI	derivative.h	5314;"	d
DMA_DCHPRI18_GRPPRI_MASK	derivative.h	5312;"	d
DMA_DCHPRI18_GRPPRI_SHIFT	derivative.h	5313;"	d
DMA_DCHPRI18_REG	derivative.h	4634;"	d
DMA_DCHPRI19	derivative.h	5641;"	d
DMA_DCHPRI19_CHPRI	derivative.h	5300;"	d
DMA_DCHPRI19_CHPRI_MASK	derivative.h	5298;"	d
DMA_DCHPRI19_CHPRI_SHIFT	derivative.h	5299;"	d
DMA_DCHPRI19_DPA_MASK	derivative.h	5304;"	d
DMA_DCHPRI19_DPA_SHIFT	derivative.h	5305;"	d
DMA_DCHPRI19_ECP_MASK	derivative.h	5306;"	d
DMA_DCHPRI19_ECP_SHIFT	derivative.h	5307;"	d
DMA_DCHPRI19_GRPPRI	derivative.h	5303;"	d
DMA_DCHPRI19_GRPPRI_MASK	derivative.h	5301;"	d
DMA_DCHPRI19_GRPPRI_SHIFT	derivative.h	5302;"	d
DMA_DCHPRI19_REG	derivative.h	4633;"	d
DMA_DCHPRI1_CHPRI	derivative.h	5146;"	d
DMA_DCHPRI1_CHPRI_MASK	derivative.h	5144;"	d
DMA_DCHPRI1_CHPRI_SHIFT	derivative.h	5145;"	d
DMA_DCHPRI1_DPA_MASK	derivative.h	5150;"	d
DMA_DCHPRI1_DPA_SHIFT	derivative.h	5151;"	d
DMA_DCHPRI1_ECP_MASK	derivative.h	5152;"	d
DMA_DCHPRI1_ECP_SHIFT	derivative.h	5153;"	d
DMA_DCHPRI1_GRPPRI	derivative.h	5149;"	d
DMA_DCHPRI1_GRPPRI_MASK	derivative.h	5147;"	d
DMA_DCHPRI1_GRPPRI_SHIFT	derivative.h	5148;"	d
DMA_DCHPRI1_REG	derivative.h	4619;"	d
DMA_DCHPRI2	derivative.h	5626;"	d
DMA_DCHPRI20	derivative.h	5648;"	d
DMA_DCHPRI20_CHPRI	derivative.h	5377;"	d
DMA_DCHPRI20_CHPRI_MASK	derivative.h	5375;"	d
DMA_DCHPRI20_CHPRI_SHIFT	derivative.h	5376;"	d
DMA_DCHPRI20_DPA_MASK	derivative.h	5381;"	d
DMA_DCHPRI20_DPA_SHIFT	derivative.h	5382;"	d
DMA_DCHPRI20_ECP_MASK	derivative.h	5383;"	d
DMA_DCHPRI20_ECP_SHIFT	derivative.h	5384;"	d
DMA_DCHPRI20_GRPPRI	derivative.h	5380;"	d
DMA_DCHPRI20_GRPPRI_MASK	derivative.h	5378;"	d
DMA_DCHPRI20_GRPPRI_SHIFT	derivative.h	5379;"	d
DMA_DCHPRI20_REG	derivative.h	4640;"	d
DMA_DCHPRI21	derivative.h	5647;"	d
DMA_DCHPRI21_CHPRI	derivative.h	5366;"	d
DMA_DCHPRI21_CHPRI_MASK	derivative.h	5364;"	d
DMA_DCHPRI21_CHPRI_SHIFT	derivative.h	5365;"	d
DMA_DCHPRI21_DPA_MASK	derivative.h	5370;"	d
DMA_DCHPRI21_DPA_SHIFT	derivative.h	5371;"	d
DMA_DCHPRI21_ECP_MASK	derivative.h	5372;"	d
DMA_DCHPRI21_ECP_SHIFT	derivative.h	5373;"	d
DMA_DCHPRI21_GRPPRI	derivative.h	5369;"	d
DMA_DCHPRI21_GRPPRI_MASK	derivative.h	5367;"	d
DMA_DCHPRI21_GRPPRI_SHIFT	derivative.h	5368;"	d
DMA_DCHPRI21_REG	derivative.h	4639;"	d
DMA_DCHPRI22	derivative.h	5646;"	d
DMA_DCHPRI22_CHPRI	derivative.h	5355;"	d
DMA_DCHPRI22_CHPRI_MASK	derivative.h	5353;"	d
DMA_DCHPRI22_CHPRI_SHIFT	derivative.h	5354;"	d
DMA_DCHPRI22_DPA_MASK	derivative.h	5359;"	d
DMA_DCHPRI22_DPA_SHIFT	derivative.h	5360;"	d
DMA_DCHPRI22_ECP_MASK	derivative.h	5361;"	d
DMA_DCHPRI22_ECP_SHIFT	derivative.h	5362;"	d
DMA_DCHPRI22_GRPPRI	derivative.h	5358;"	d
DMA_DCHPRI22_GRPPRI_MASK	derivative.h	5356;"	d
DMA_DCHPRI22_GRPPRI_SHIFT	derivative.h	5357;"	d
DMA_DCHPRI22_REG	derivative.h	4638;"	d
DMA_DCHPRI23	derivative.h	5645;"	d
DMA_DCHPRI23_CHPRI	derivative.h	5344;"	d
DMA_DCHPRI23_CHPRI_MASK	derivative.h	5342;"	d
DMA_DCHPRI23_CHPRI_SHIFT	derivative.h	5343;"	d
DMA_DCHPRI23_DPA_MASK	derivative.h	5348;"	d
DMA_DCHPRI23_DPA_SHIFT	derivative.h	5349;"	d
DMA_DCHPRI23_ECP_MASK	derivative.h	5350;"	d
DMA_DCHPRI23_ECP_SHIFT	derivative.h	5351;"	d
DMA_DCHPRI23_GRPPRI	derivative.h	5347;"	d
DMA_DCHPRI23_GRPPRI_MASK	derivative.h	5345;"	d
DMA_DCHPRI23_GRPPRI_SHIFT	derivative.h	5346;"	d
DMA_DCHPRI23_REG	derivative.h	4637;"	d
DMA_DCHPRI24	derivative.h	5652;"	d
DMA_DCHPRI24_CHPRI	derivative.h	5421;"	d
DMA_DCHPRI24_CHPRI_MASK	derivative.h	5419;"	d
DMA_DCHPRI24_CHPRI_SHIFT	derivative.h	5420;"	d
DMA_DCHPRI24_DPA_MASK	derivative.h	5425;"	d
DMA_DCHPRI24_DPA_SHIFT	derivative.h	5426;"	d
DMA_DCHPRI24_ECP_MASK	derivative.h	5427;"	d
DMA_DCHPRI24_ECP_SHIFT	derivative.h	5428;"	d
DMA_DCHPRI24_GRPPRI	derivative.h	5424;"	d
DMA_DCHPRI24_GRPPRI_MASK	derivative.h	5422;"	d
DMA_DCHPRI24_GRPPRI_SHIFT	derivative.h	5423;"	d
DMA_DCHPRI24_REG	derivative.h	4644;"	d
DMA_DCHPRI25	derivative.h	5651;"	d
DMA_DCHPRI25_CHPRI	derivative.h	5410;"	d
DMA_DCHPRI25_CHPRI_MASK	derivative.h	5408;"	d
DMA_DCHPRI25_CHPRI_SHIFT	derivative.h	5409;"	d
DMA_DCHPRI25_DPA_MASK	derivative.h	5414;"	d
DMA_DCHPRI25_DPA_SHIFT	derivative.h	5415;"	d
DMA_DCHPRI25_ECP_MASK	derivative.h	5416;"	d
DMA_DCHPRI25_ECP_SHIFT	derivative.h	5417;"	d
DMA_DCHPRI25_GRPPRI	derivative.h	5413;"	d
DMA_DCHPRI25_GRPPRI_MASK	derivative.h	5411;"	d
DMA_DCHPRI25_GRPPRI_SHIFT	derivative.h	5412;"	d
DMA_DCHPRI25_REG	derivative.h	4643;"	d
DMA_DCHPRI26	derivative.h	5650;"	d
DMA_DCHPRI26_CHPRI	derivative.h	5399;"	d
DMA_DCHPRI26_CHPRI_MASK	derivative.h	5397;"	d
DMA_DCHPRI26_CHPRI_SHIFT	derivative.h	5398;"	d
DMA_DCHPRI26_DPA_MASK	derivative.h	5403;"	d
DMA_DCHPRI26_DPA_SHIFT	derivative.h	5404;"	d
DMA_DCHPRI26_ECP_MASK	derivative.h	5405;"	d
DMA_DCHPRI26_ECP_SHIFT	derivative.h	5406;"	d
DMA_DCHPRI26_GRPPRI	derivative.h	5402;"	d
DMA_DCHPRI26_GRPPRI_MASK	derivative.h	5400;"	d
DMA_DCHPRI26_GRPPRI_SHIFT	derivative.h	5401;"	d
DMA_DCHPRI26_REG	derivative.h	4642;"	d
DMA_DCHPRI27	derivative.h	5649;"	d
DMA_DCHPRI27_CHPRI	derivative.h	5388;"	d
DMA_DCHPRI27_CHPRI_MASK	derivative.h	5386;"	d
DMA_DCHPRI27_CHPRI_SHIFT	derivative.h	5387;"	d
DMA_DCHPRI27_DPA_MASK	derivative.h	5392;"	d
DMA_DCHPRI27_DPA_SHIFT	derivative.h	5393;"	d
DMA_DCHPRI27_ECP_MASK	derivative.h	5394;"	d
DMA_DCHPRI27_ECP_SHIFT	derivative.h	5395;"	d
DMA_DCHPRI27_GRPPRI	derivative.h	5391;"	d
DMA_DCHPRI27_GRPPRI_MASK	derivative.h	5389;"	d
DMA_DCHPRI27_GRPPRI_SHIFT	derivative.h	5390;"	d
DMA_DCHPRI27_REG	derivative.h	4641;"	d
DMA_DCHPRI28	derivative.h	5656;"	d
DMA_DCHPRI28_CHPRI	derivative.h	5465;"	d
DMA_DCHPRI28_CHPRI_MASK	derivative.h	5463;"	d
DMA_DCHPRI28_CHPRI_SHIFT	derivative.h	5464;"	d
DMA_DCHPRI28_DPA_MASK	derivative.h	5469;"	d
DMA_DCHPRI28_DPA_SHIFT	derivative.h	5470;"	d
DMA_DCHPRI28_ECP_MASK	derivative.h	5471;"	d
DMA_DCHPRI28_ECP_SHIFT	derivative.h	5472;"	d
DMA_DCHPRI28_GRPPRI	derivative.h	5468;"	d
DMA_DCHPRI28_GRPPRI_MASK	derivative.h	5466;"	d
DMA_DCHPRI28_GRPPRI_SHIFT	derivative.h	5467;"	d
DMA_DCHPRI28_REG	derivative.h	4648;"	d
DMA_DCHPRI29	derivative.h	5655;"	d
DMA_DCHPRI29_CHPRI	derivative.h	5454;"	d
DMA_DCHPRI29_CHPRI_MASK	derivative.h	5452;"	d
DMA_DCHPRI29_CHPRI_SHIFT	derivative.h	5453;"	d
DMA_DCHPRI29_DPA_MASK	derivative.h	5458;"	d
DMA_DCHPRI29_DPA_SHIFT	derivative.h	5459;"	d
DMA_DCHPRI29_ECP_MASK	derivative.h	5460;"	d
DMA_DCHPRI29_ECP_SHIFT	derivative.h	5461;"	d
DMA_DCHPRI29_GRPPRI	derivative.h	5457;"	d
DMA_DCHPRI29_GRPPRI_MASK	derivative.h	5455;"	d
DMA_DCHPRI29_GRPPRI_SHIFT	derivative.h	5456;"	d
DMA_DCHPRI29_REG	derivative.h	4647;"	d
DMA_DCHPRI2_CHPRI	derivative.h	5135;"	d
DMA_DCHPRI2_CHPRI_MASK	derivative.h	5133;"	d
DMA_DCHPRI2_CHPRI_SHIFT	derivative.h	5134;"	d
DMA_DCHPRI2_DPA_MASK	derivative.h	5139;"	d
DMA_DCHPRI2_DPA_SHIFT	derivative.h	5140;"	d
DMA_DCHPRI2_ECP_MASK	derivative.h	5141;"	d
DMA_DCHPRI2_ECP_SHIFT	derivative.h	5142;"	d
DMA_DCHPRI2_GRPPRI	derivative.h	5138;"	d
DMA_DCHPRI2_GRPPRI_MASK	derivative.h	5136;"	d
DMA_DCHPRI2_GRPPRI_SHIFT	derivative.h	5137;"	d
DMA_DCHPRI2_REG	derivative.h	4618;"	d
DMA_DCHPRI3	derivative.h	5625;"	d
DMA_DCHPRI30	derivative.h	5654;"	d
DMA_DCHPRI30_CHPRI	derivative.h	5443;"	d
DMA_DCHPRI30_CHPRI_MASK	derivative.h	5441;"	d
DMA_DCHPRI30_CHPRI_SHIFT	derivative.h	5442;"	d
DMA_DCHPRI30_DPA_MASK	derivative.h	5447;"	d
DMA_DCHPRI30_DPA_SHIFT	derivative.h	5448;"	d
DMA_DCHPRI30_ECP_MASK	derivative.h	5449;"	d
DMA_DCHPRI30_ECP_SHIFT	derivative.h	5450;"	d
DMA_DCHPRI30_GRPPRI	derivative.h	5446;"	d
DMA_DCHPRI30_GRPPRI_MASK	derivative.h	5444;"	d
DMA_DCHPRI30_GRPPRI_SHIFT	derivative.h	5445;"	d
DMA_DCHPRI30_REG	derivative.h	4646;"	d
DMA_DCHPRI31	derivative.h	5653;"	d
DMA_DCHPRI31_CHPRI	derivative.h	5432;"	d
DMA_DCHPRI31_CHPRI_MASK	derivative.h	5430;"	d
DMA_DCHPRI31_CHPRI_SHIFT	derivative.h	5431;"	d
DMA_DCHPRI31_DPA_MASK	derivative.h	5436;"	d
DMA_DCHPRI31_DPA_SHIFT	derivative.h	5437;"	d
DMA_DCHPRI31_ECP_MASK	derivative.h	5438;"	d
DMA_DCHPRI31_ECP_SHIFT	derivative.h	5439;"	d
DMA_DCHPRI31_GRPPRI	derivative.h	5435;"	d
DMA_DCHPRI31_GRPPRI_MASK	derivative.h	5433;"	d
DMA_DCHPRI31_GRPPRI_SHIFT	derivative.h	5434;"	d
DMA_DCHPRI31_REG	derivative.h	4645;"	d
DMA_DCHPRI3_CHPRI	derivative.h	5124;"	d
DMA_DCHPRI3_CHPRI_MASK	derivative.h	5122;"	d
DMA_DCHPRI3_CHPRI_SHIFT	derivative.h	5123;"	d
DMA_DCHPRI3_DPA_MASK	derivative.h	5128;"	d
DMA_DCHPRI3_DPA_SHIFT	derivative.h	5129;"	d
DMA_DCHPRI3_ECP_MASK	derivative.h	5130;"	d
DMA_DCHPRI3_ECP_SHIFT	derivative.h	5131;"	d
DMA_DCHPRI3_GRPPRI	derivative.h	5127;"	d
DMA_DCHPRI3_GRPPRI_MASK	derivative.h	5125;"	d
DMA_DCHPRI3_GRPPRI_SHIFT	derivative.h	5126;"	d
DMA_DCHPRI3_REG	derivative.h	4617;"	d
DMA_DCHPRI4	derivative.h	5632;"	d
DMA_DCHPRI4_CHPRI	derivative.h	5201;"	d
DMA_DCHPRI4_CHPRI_MASK	derivative.h	5199;"	d
DMA_DCHPRI4_CHPRI_SHIFT	derivative.h	5200;"	d
DMA_DCHPRI4_DPA_MASK	derivative.h	5205;"	d
DMA_DCHPRI4_DPA_SHIFT	derivative.h	5206;"	d
DMA_DCHPRI4_ECP_MASK	derivative.h	5207;"	d
DMA_DCHPRI4_ECP_SHIFT	derivative.h	5208;"	d
DMA_DCHPRI4_GRPPRI	derivative.h	5204;"	d
DMA_DCHPRI4_GRPPRI_MASK	derivative.h	5202;"	d
DMA_DCHPRI4_GRPPRI_SHIFT	derivative.h	5203;"	d
DMA_DCHPRI4_REG	derivative.h	4624;"	d
DMA_DCHPRI5	derivative.h	5631;"	d
DMA_DCHPRI5_CHPRI	derivative.h	5190;"	d
DMA_DCHPRI5_CHPRI_MASK	derivative.h	5188;"	d
DMA_DCHPRI5_CHPRI_SHIFT	derivative.h	5189;"	d
DMA_DCHPRI5_DPA_MASK	derivative.h	5194;"	d
DMA_DCHPRI5_DPA_SHIFT	derivative.h	5195;"	d
DMA_DCHPRI5_ECP_MASK	derivative.h	5196;"	d
DMA_DCHPRI5_ECP_SHIFT	derivative.h	5197;"	d
DMA_DCHPRI5_GRPPRI	derivative.h	5193;"	d
DMA_DCHPRI5_GRPPRI_MASK	derivative.h	5191;"	d
DMA_DCHPRI5_GRPPRI_SHIFT	derivative.h	5192;"	d
DMA_DCHPRI5_REG	derivative.h	4623;"	d
DMA_DCHPRI6	derivative.h	5630;"	d
DMA_DCHPRI6_CHPRI	derivative.h	5179;"	d
DMA_DCHPRI6_CHPRI_MASK	derivative.h	5177;"	d
DMA_DCHPRI6_CHPRI_SHIFT	derivative.h	5178;"	d
DMA_DCHPRI6_DPA_MASK	derivative.h	5183;"	d
DMA_DCHPRI6_DPA_SHIFT	derivative.h	5184;"	d
DMA_DCHPRI6_ECP_MASK	derivative.h	5185;"	d
DMA_DCHPRI6_ECP_SHIFT	derivative.h	5186;"	d
DMA_DCHPRI6_GRPPRI	derivative.h	5182;"	d
DMA_DCHPRI6_GRPPRI_MASK	derivative.h	5180;"	d
DMA_DCHPRI6_GRPPRI_SHIFT	derivative.h	5181;"	d
DMA_DCHPRI6_REG	derivative.h	4622;"	d
DMA_DCHPRI7	derivative.h	5629;"	d
DMA_DCHPRI7_CHPRI	derivative.h	5168;"	d
DMA_DCHPRI7_CHPRI_MASK	derivative.h	5166;"	d
DMA_DCHPRI7_CHPRI_SHIFT	derivative.h	5167;"	d
DMA_DCHPRI7_DPA_MASK	derivative.h	5172;"	d
DMA_DCHPRI7_DPA_SHIFT	derivative.h	5173;"	d
DMA_DCHPRI7_ECP_MASK	derivative.h	5174;"	d
DMA_DCHPRI7_ECP_SHIFT	derivative.h	5175;"	d
DMA_DCHPRI7_GRPPRI	derivative.h	5171;"	d
DMA_DCHPRI7_GRPPRI_MASK	derivative.h	5169;"	d
DMA_DCHPRI7_GRPPRI_SHIFT	derivative.h	5170;"	d
DMA_DCHPRI7_REG	derivative.h	4621;"	d
DMA_DCHPRI8	derivative.h	5636;"	d
DMA_DCHPRI8_CHPRI	derivative.h	5245;"	d
DMA_DCHPRI8_CHPRI_MASK	derivative.h	5243;"	d
DMA_DCHPRI8_CHPRI_SHIFT	derivative.h	5244;"	d
DMA_DCHPRI8_DPA_MASK	derivative.h	5249;"	d
DMA_DCHPRI8_DPA_SHIFT	derivative.h	5250;"	d
DMA_DCHPRI8_ECP_MASK	derivative.h	5251;"	d
DMA_DCHPRI8_ECP_SHIFT	derivative.h	5252;"	d
DMA_DCHPRI8_GRPPRI	derivative.h	5248;"	d
DMA_DCHPRI8_GRPPRI_MASK	derivative.h	5246;"	d
DMA_DCHPRI8_GRPPRI_SHIFT	derivative.h	5247;"	d
DMA_DCHPRI8_REG	derivative.h	4628;"	d
DMA_DCHPRI9	derivative.h	5635;"	d
DMA_DCHPRI9_CHPRI	derivative.h	5234;"	d
DMA_DCHPRI9_CHPRI_MASK	derivative.h	5232;"	d
DMA_DCHPRI9_CHPRI_SHIFT	derivative.h	5233;"	d
DMA_DCHPRI9_DPA_MASK	derivative.h	5238;"	d
DMA_DCHPRI9_DPA_SHIFT	derivative.h	5239;"	d
DMA_DCHPRI9_ECP_MASK	derivative.h	5240;"	d
DMA_DCHPRI9_ECP_SHIFT	derivative.h	5241;"	d
DMA_DCHPRI9_GRPPRI	derivative.h	5237;"	d
DMA_DCHPRI9_GRPPRI_MASK	derivative.h	5235;"	d
DMA_DCHPRI9_GRPPRI_SHIFT	derivative.h	5236;"	d
DMA_DCHPRI9_REG	derivative.h	4627;"	d
DMA_DLAST_SGA	derivative.h	6150;"	d
DMA_DLAST_SGA_DLASTSGA	derivative.h	5547;"	d
DMA_DLAST_SGA_DLASTSGA_MASK	derivative.h	5545;"	d
DMA_DLAST_SGA_DLASTSGA_SHIFT	derivative.h	5546;"	d
DMA_DLAST_SGA_REG	derivative.h	4660;"	d
DMA_DOFF	derivative.h	6147;"	d
DMA_DOFF_DOFF	derivative.h	5528;"	d
DMA_DOFF_DOFF_MASK	derivative.h	5526;"	d
DMA_DOFF_DOFF_SHIFT	derivative.h	5527;"	d
DMA_DOFF_REG	derivative.h	4657;"	d
DMA_EEI	derivative.h	5613;"	d
DMA_EEI_EEI0_MASK	derivative.h	4798;"	d
DMA_EEI_EEI0_SHIFT	derivative.h	4799;"	d
DMA_EEI_EEI10_MASK	derivative.h	4818;"	d
DMA_EEI_EEI10_SHIFT	derivative.h	4819;"	d
DMA_EEI_EEI11_MASK	derivative.h	4820;"	d
DMA_EEI_EEI11_SHIFT	derivative.h	4821;"	d
DMA_EEI_EEI12_MASK	derivative.h	4822;"	d
DMA_EEI_EEI12_SHIFT	derivative.h	4823;"	d
DMA_EEI_EEI13_MASK	derivative.h	4824;"	d
DMA_EEI_EEI13_SHIFT	derivative.h	4825;"	d
DMA_EEI_EEI14_MASK	derivative.h	4826;"	d
DMA_EEI_EEI14_SHIFT	derivative.h	4827;"	d
DMA_EEI_EEI15_MASK	derivative.h	4828;"	d
DMA_EEI_EEI15_SHIFT	derivative.h	4829;"	d
DMA_EEI_EEI16_MASK	derivative.h	4830;"	d
DMA_EEI_EEI16_SHIFT	derivative.h	4831;"	d
DMA_EEI_EEI17_MASK	derivative.h	4832;"	d
DMA_EEI_EEI17_SHIFT	derivative.h	4833;"	d
DMA_EEI_EEI18_MASK	derivative.h	4834;"	d
DMA_EEI_EEI18_SHIFT	derivative.h	4835;"	d
DMA_EEI_EEI19_MASK	derivative.h	4836;"	d
DMA_EEI_EEI19_SHIFT	derivative.h	4837;"	d
DMA_EEI_EEI1_MASK	derivative.h	4800;"	d
DMA_EEI_EEI1_SHIFT	derivative.h	4801;"	d
DMA_EEI_EEI20_MASK	derivative.h	4838;"	d
DMA_EEI_EEI20_SHIFT	derivative.h	4839;"	d
DMA_EEI_EEI21_MASK	derivative.h	4840;"	d
DMA_EEI_EEI21_SHIFT	derivative.h	4841;"	d
DMA_EEI_EEI22_MASK	derivative.h	4842;"	d
DMA_EEI_EEI22_SHIFT	derivative.h	4843;"	d
DMA_EEI_EEI23_MASK	derivative.h	4844;"	d
DMA_EEI_EEI23_SHIFT	derivative.h	4845;"	d
DMA_EEI_EEI24_MASK	derivative.h	4846;"	d
DMA_EEI_EEI24_SHIFT	derivative.h	4847;"	d
DMA_EEI_EEI25_MASK	derivative.h	4848;"	d
DMA_EEI_EEI25_SHIFT	derivative.h	4849;"	d
DMA_EEI_EEI26_MASK	derivative.h	4850;"	d
DMA_EEI_EEI26_SHIFT	derivative.h	4851;"	d
DMA_EEI_EEI27_MASK	derivative.h	4852;"	d
DMA_EEI_EEI27_SHIFT	derivative.h	4853;"	d
DMA_EEI_EEI28_MASK	derivative.h	4854;"	d
DMA_EEI_EEI28_SHIFT	derivative.h	4855;"	d
DMA_EEI_EEI29_MASK	derivative.h	4856;"	d
DMA_EEI_EEI29_SHIFT	derivative.h	4857;"	d
DMA_EEI_EEI2_MASK	derivative.h	4802;"	d
DMA_EEI_EEI2_SHIFT	derivative.h	4803;"	d
DMA_EEI_EEI30_MASK	derivative.h	4858;"	d
DMA_EEI_EEI30_SHIFT	derivative.h	4859;"	d
DMA_EEI_EEI31_MASK	derivative.h	4860;"	d
DMA_EEI_EEI31_SHIFT	derivative.h	4861;"	d
DMA_EEI_EEI3_MASK	derivative.h	4804;"	d
DMA_EEI_EEI3_SHIFT	derivative.h	4805;"	d
DMA_EEI_EEI4_MASK	derivative.h	4806;"	d
DMA_EEI_EEI4_SHIFT	derivative.h	4807;"	d
DMA_EEI_EEI5_MASK	derivative.h	4808;"	d
DMA_EEI_EEI5_SHIFT	derivative.h	4809;"	d
DMA_EEI_EEI6_MASK	derivative.h	4810;"	d
DMA_EEI_EEI6_SHIFT	derivative.h	4811;"	d
DMA_EEI_EEI7_MASK	derivative.h	4812;"	d
DMA_EEI_EEI7_SHIFT	derivative.h	4813;"	d
DMA_EEI_EEI8_MASK	derivative.h	4814;"	d
DMA_EEI_EEI8_SHIFT	derivative.h	4815;"	d
DMA_EEI_EEI9_MASK	derivative.h	4816;"	d
DMA_EEI_EEI9_SHIFT	derivative.h	4817;"	d
DMA_EEI_REG	derivative.h	4605;"	d
DMA_ERQ	derivative.h	5612;"	d
DMA_ERQ_ERQ0_MASK	derivative.h	4733;"	d
DMA_ERQ_ERQ0_SHIFT	derivative.h	4734;"	d
DMA_ERQ_ERQ10_MASK	derivative.h	4753;"	d
DMA_ERQ_ERQ10_SHIFT	derivative.h	4754;"	d
DMA_ERQ_ERQ11_MASK	derivative.h	4755;"	d
DMA_ERQ_ERQ11_SHIFT	derivative.h	4756;"	d
DMA_ERQ_ERQ12_MASK	derivative.h	4757;"	d
DMA_ERQ_ERQ12_SHIFT	derivative.h	4758;"	d
DMA_ERQ_ERQ13_MASK	derivative.h	4759;"	d
DMA_ERQ_ERQ13_SHIFT	derivative.h	4760;"	d
DMA_ERQ_ERQ14_MASK	derivative.h	4761;"	d
DMA_ERQ_ERQ14_SHIFT	derivative.h	4762;"	d
DMA_ERQ_ERQ15_MASK	derivative.h	4763;"	d
DMA_ERQ_ERQ15_SHIFT	derivative.h	4764;"	d
DMA_ERQ_ERQ16_MASK	derivative.h	4765;"	d
DMA_ERQ_ERQ16_SHIFT	derivative.h	4766;"	d
DMA_ERQ_ERQ17_MASK	derivative.h	4767;"	d
DMA_ERQ_ERQ17_SHIFT	derivative.h	4768;"	d
DMA_ERQ_ERQ18_MASK	derivative.h	4769;"	d
DMA_ERQ_ERQ18_SHIFT	derivative.h	4770;"	d
DMA_ERQ_ERQ19_MASK	derivative.h	4771;"	d
DMA_ERQ_ERQ19_SHIFT	derivative.h	4772;"	d
DMA_ERQ_ERQ1_MASK	derivative.h	4735;"	d
DMA_ERQ_ERQ1_SHIFT	derivative.h	4736;"	d
DMA_ERQ_ERQ20_MASK	derivative.h	4773;"	d
DMA_ERQ_ERQ20_SHIFT	derivative.h	4774;"	d
DMA_ERQ_ERQ21_MASK	derivative.h	4775;"	d
DMA_ERQ_ERQ21_SHIFT	derivative.h	4776;"	d
DMA_ERQ_ERQ22_MASK	derivative.h	4777;"	d
DMA_ERQ_ERQ22_SHIFT	derivative.h	4778;"	d
DMA_ERQ_ERQ23_MASK	derivative.h	4779;"	d
DMA_ERQ_ERQ23_SHIFT	derivative.h	4780;"	d
DMA_ERQ_ERQ24_MASK	derivative.h	4781;"	d
DMA_ERQ_ERQ24_SHIFT	derivative.h	4782;"	d
DMA_ERQ_ERQ25_MASK	derivative.h	4783;"	d
DMA_ERQ_ERQ25_SHIFT	derivative.h	4784;"	d
DMA_ERQ_ERQ26_MASK	derivative.h	4785;"	d
DMA_ERQ_ERQ26_SHIFT	derivative.h	4786;"	d
DMA_ERQ_ERQ27_MASK	derivative.h	4787;"	d
DMA_ERQ_ERQ27_SHIFT	derivative.h	4788;"	d
DMA_ERQ_ERQ28_MASK	derivative.h	4789;"	d
DMA_ERQ_ERQ28_SHIFT	derivative.h	4790;"	d
DMA_ERQ_ERQ29_MASK	derivative.h	4791;"	d
DMA_ERQ_ERQ29_SHIFT	derivative.h	4792;"	d
DMA_ERQ_ERQ2_MASK	derivative.h	4737;"	d
DMA_ERQ_ERQ2_SHIFT	derivative.h	4738;"	d
DMA_ERQ_ERQ30_MASK	derivative.h	4793;"	d
DMA_ERQ_ERQ30_SHIFT	derivative.h	4794;"	d
DMA_ERQ_ERQ31_MASK	derivative.h	4795;"	d
DMA_ERQ_ERQ31_SHIFT	derivative.h	4796;"	d
DMA_ERQ_ERQ3_MASK	derivative.h	4739;"	d
DMA_ERQ_ERQ3_SHIFT	derivative.h	4740;"	d
DMA_ERQ_ERQ4_MASK	derivative.h	4741;"	d
DMA_ERQ_ERQ4_SHIFT	derivative.h	4742;"	d
DMA_ERQ_ERQ5_MASK	derivative.h	4743;"	d
DMA_ERQ_ERQ5_SHIFT	derivative.h	4744;"	d
DMA_ERQ_ERQ6_MASK	derivative.h	4745;"	d
DMA_ERQ_ERQ6_SHIFT	derivative.h	4746;"	d
DMA_ERQ_ERQ7_MASK	derivative.h	4747;"	d
DMA_ERQ_ERQ7_SHIFT	derivative.h	4748;"	d
DMA_ERQ_ERQ8_MASK	derivative.h	4749;"	d
DMA_ERQ_ERQ8_SHIFT	derivative.h	4750;"	d
DMA_ERQ_ERQ9_MASK	derivative.h	4751;"	d
DMA_ERQ_ERQ9_SHIFT	derivative.h	4752;"	d
DMA_ERQ_REG	derivative.h	4604;"	d
DMA_ERR	derivative.h	5623;"	d
DMA_ERR_ERR0_MASK	derivative.h	4992;"	d
DMA_ERR_ERR0_SHIFT	derivative.h	4993;"	d
DMA_ERR_ERR10_MASK	derivative.h	5012;"	d
DMA_ERR_ERR10_SHIFT	derivative.h	5013;"	d
DMA_ERR_ERR11_MASK	derivative.h	5014;"	d
DMA_ERR_ERR11_SHIFT	derivative.h	5015;"	d
DMA_ERR_ERR12_MASK	derivative.h	5016;"	d
DMA_ERR_ERR12_SHIFT	derivative.h	5017;"	d
DMA_ERR_ERR13_MASK	derivative.h	5018;"	d
DMA_ERR_ERR13_SHIFT	derivative.h	5019;"	d
DMA_ERR_ERR14_MASK	derivative.h	5020;"	d
DMA_ERR_ERR14_SHIFT	derivative.h	5021;"	d
DMA_ERR_ERR15_MASK	derivative.h	5022;"	d
DMA_ERR_ERR15_SHIFT	derivative.h	5023;"	d
DMA_ERR_ERR16_MASK	derivative.h	5024;"	d
DMA_ERR_ERR16_SHIFT	derivative.h	5025;"	d
DMA_ERR_ERR17_MASK	derivative.h	5026;"	d
DMA_ERR_ERR17_SHIFT	derivative.h	5027;"	d
DMA_ERR_ERR18_MASK	derivative.h	5028;"	d
DMA_ERR_ERR18_SHIFT	derivative.h	5029;"	d
DMA_ERR_ERR19_MASK	derivative.h	5030;"	d
DMA_ERR_ERR19_SHIFT	derivative.h	5031;"	d
DMA_ERR_ERR1_MASK	derivative.h	4994;"	d
DMA_ERR_ERR1_SHIFT	derivative.h	4995;"	d
DMA_ERR_ERR20_MASK	derivative.h	5032;"	d
DMA_ERR_ERR20_SHIFT	derivative.h	5033;"	d
DMA_ERR_ERR21_MASK	derivative.h	5034;"	d
DMA_ERR_ERR21_SHIFT	derivative.h	5035;"	d
DMA_ERR_ERR22_MASK	derivative.h	5036;"	d
DMA_ERR_ERR22_SHIFT	derivative.h	5037;"	d
DMA_ERR_ERR23_MASK	derivative.h	5038;"	d
DMA_ERR_ERR23_SHIFT	derivative.h	5039;"	d
DMA_ERR_ERR24_MASK	derivative.h	5040;"	d
DMA_ERR_ERR24_SHIFT	derivative.h	5041;"	d
DMA_ERR_ERR25_MASK	derivative.h	5042;"	d
DMA_ERR_ERR25_SHIFT	derivative.h	5043;"	d
DMA_ERR_ERR26_MASK	derivative.h	5044;"	d
DMA_ERR_ERR26_SHIFT	derivative.h	5045;"	d
DMA_ERR_ERR27_MASK	derivative.h	5046;"	d
DMA_ERR_ERR27_SHIFT	derivative.h	5047;"	d
DMA_ERR_ERR28_MASK	derivative.h	5048;"	d
DMA_ERR_ERR28_SHIFT	derivative.h	5049;"	d
DMA_ERR_ERR29_MASK	derivative.h	5050;"	d
DMA_ERR_ERR29_SHIFT	derivative.h	5051;"	d
DMA_ERR_ERR2_MASK	derivative.h	4996;"	d
DMA_ERR_ERR2_SHIFT	derivative.h	4997;"	d
DMA_ERR_ERR30_MASK	derivative.h	5052;"	d
DMA_ERR_ERR30_SHIFT	derivative.h	5053;"	d
DMA_ERR_ERR31_MASK	derivative.h	5054;"	d
DMA_ERR_ERR31_SHIFT	derivative.h	5055;"	d
DMA_ERR_ERR3_MASK	derivative.h	4998;"	d
DMA_ERR_ERR3_SHIFT	derivative.h	4999;"	d
DMA_ERR_ERR4_MASK	derivative.h	5000;"	d
DMA_ERR_ERR4_SHIFT	derivative.h	5001;"	d
DMA_ERR_ERR5_MASK	derivative.h	5002;"	d
DMA_ERR_ERR5_SHIFT	derivative.h	5003;"	d
DMA_ERR_ERR6_MASK	derivative.h	5004;"	d
DMA_ERR_ERR6_SHIFT	derivative.h	5005;"	d
DMA_ERR_ERR7_MASK	derivative.h	5006;"	d
DMA_ERR_ERR7_SHIFT	derivative.h	5007;"	d
DMA_ERR_ERR8_MASK	derivative.h	5008;"	d
DMA_ERR_ERR8_SHIFT	derivative.h	5009;"	d
DMA_ERR_ERR9_MASK	derivative.h	5010;"	d
DMA_ERR_ERR9_SHIFT	derivative.h	5011;"	d
DMA_ERR_REG	derivative.h	4615;"	d
DMA_ES	derivative.h	5611;"	d
DMA_ES_CPE_MASK	derivative.h	4724;"	d
DMA_ES_CPE_SHIFT	derivative.h	4725;"	d
DMA_ES_DAE_MASK	derivative.h	4715;"	d
DMA_ES_DAE_SHIFT	derivative.h	4716;"	d
DMA_ES_DBE_MASK	derivative.h	4705;"	d
DMA_ES_DBE_SHIFT	derivative.h	4706;"	d
DMA_ES_DOE_MASK	derivative.h	4713;"	d
DMA_ES_DOE_SHIFT	derivative.h	4714;"	d
DMA_ES_ECX_MASK	derivative.h	4728;"	d
DMA_ES_ECX_SHIFT	derivative.h	4729;"	d
DMA_ES_ERRCHN	derivative.h	4723;"	d
DMA_ES_ERRCHN_MASK	derivative.h	4721;"	d
DMA_ES_ERRCHN_SHIFT	derivative.h	4722;"	d
DMA_ES_GPE_MASK	derivative.h	4726;"	d
DMA_ES_GPE_SHIFT	derivative.h	4727;"	d
DMA_ES_NCE_MASK	derivative.h	4711;"	d
DMA_ES_NCE_SHIFT	derivative.h	4712;"	d
DMA_ES_REG	derivative.h	4603;"	d
DMA_ES_SAE_MASK	derivative.h	4719;"	d
DMA_ES_SAE_SHIFT	derivative.h	4720;"	d
DMA_ES_SBE_MASK	derivative.h	4707;"	d
DMA_ES_SBE_SHIFT	derivative.h	4708;"	d
DMA_ES_SGE_MASK	derivative.h	4709;"	d
DMA_ES_SGE_SHIFT	derivative.h	4710;"	d
DMA_ES_SOE_MASK	derivative.h	4717;"	d
DMA_ES_SOE_SHIFT	derivative.h	4718;"	d
DMA_ES_VLD_MASK	derivative.h	4730;"	d
DMA_ES_VLD_SHIFT	derivative.h	4731;"	d
DMA_HRS	derivative.h	5624;"	d
DMA_HRS_HRS0_MASK	derivative.h	5057;"	d
DMA_HRS_HRS0_SHIFT	derivative.h	5058;"	d
DMA_HRS_HRS10_MASK	derivative.h	5077;"	d
DMA_HRS_HRS10_SHIFT	derivative.h	5078;"	d
DMA_HRS_HRS11_MASK	derivative.h	5079;"	d
DMA_HRS_HRS11_SHIFT	derivative.h	5080;"	d
DMA_HRS_HRS12_MASK	derivative.h	5081;"	d
DMA_HRS_HRS12_SHIFT	derivative.h	5082;"	d
DMA_HRS_HRS13_MASK	derivative.h	5083;"	d
DMA_HRS_HRS13_SHIFT	derivative.h	5084;"	d
DMA_HRS_HRS14_MASK	derivative.h	5085;"	d
DMA_HRS_HRS14_SHIFT	derivative.h	5086;"	d
DMA_HRS_HRS15_MASK	derivative.h	5087;"	d
DMA_HRS_HRS15_SHIFT	derivative.h	5088;"	d
DMA_HRS_HRS16_MASK	derivative.h	5089;"	d
DMA_HRS_HRS16_SHIFT	derivative.h	5090;"	d
DMA_HRS_HRS17_MASK	derivative.h	5091;"	d
DMA_HRS_HRS17_SHIFT	derivative.h	5092;"	d
DMA_HRS_HRS18_MASK	derivative.h	5093;"	d
DMA_HRS_HRS18_SHIFT	derivative.h	5094;"	d
DMA_HRS_HRS19_MASK	derivative.h	5095;"	d
DMA_HRS_HRS19_SHIFT	derivative.h	5096;"	d
DMA_HRS_HRS1_MASK	derivative.h	5059;"	d
DMA_HRS_HRS1_SHIFT	derivative.h	5060;"	d
DMA_HRS_HRS20_MASK	derivative.h	5097;"	d
DMA_HRS_HRS20_SHIFT	derivative.h	5098;"	d
DMA_HRS_HRS21_MASK	derivative.h	5099;"	d
DMA_HRS_HRS21_SHIFT	derivative.h	5100;"	d
DMA_HRS_HRS22_MASK	derivative.h	5101;"	d
DMA_HRS_HRS22_SHIFT	derivative.h	5102;"	d
DMA_HRS_HRS23_MASK	derivative.h	5103;"	d
DMA_HRS_HRS23_SHIFT	derivative.h	5104;"	d
DMA_HRS_HRS24_MASK	derivative.h	5105;"	d
DMA_HRS_HRS24_SHIFT	derivative.h	5106;"	d
DMA_HRS_HRS25_MASK	derivative.h	5107;"	d
DMA_HRS_HRS25_SHIFT	derivative.h	5108;"	d
DMA_HRS_HRS26_MASK	derivative.h	5109;"	d
DMA_HRS_HRS26_SHIFT	derivative.h	5110;"	d
DMA_HRS_HRS27_MASK	derivative.h	5111;"	d
DMA_HRS_HRS27_SHIFT	derivative.h	5112;"	d
DMA_HRS_HRS28_MASK	derivative.h	5113;"	d
DMA_HRS_HRS28_SHIFT	derivative.h	5114;"	d
DMA_HRS_HRS29_MASK	derivative.h	5115;"	d
DMA_HRS_HRS29_SHIFT	derivative.h	5116;"	d
DMA_HRS_HRS2_MASK	derivative.h	5061;"	d
DMA_HRS_HRS2_SHIFT	derivative.h	5062;"	d
DMA_HRS_HRS30_MASK	derivative.h	5117;"	d
DMA_HRS_HRS30_SHIFT	derivative.h	5118;"	d
DMA_HRS_HRS31_MASK	derivative.h	5119;"	d
DMA_HRS_HRS31_SHIFT	derivative.h	5120;"	d
DMA_HRS_HRS3_MASK	derivative.h	5063;"	d
DMA_HRS_HRS3_SHIFT	derivative.h	5064;"	d
DMA_HRS_HRS4_MASK	derivative.h	5065;"	d
DMA_HRS_HRS4_SHIFT	derivative.h	5066;"	d
DMA_HRS_HRS5_MASK	derivative.h	5067;"	d
DMA_HRS_HRS5_SHIFT	derivative.h	5068;"	d
DMA_HRS_HRS6_MASK	derivative.h	5069;"	d
DMA_HRS_HRS6_SHIFT	derivative.h	5070;"	d
DMA_HRS_HRS7_MASK	derivative.h	5071;"	d
DMA_HRS_HRS7_SHIFT	derivative.h	5072;"	d
DMA_HRS_HRS8_MASK	derivative.h	5073;"	d
DMA_HRS_HRS8_SHIFT	derivative.h	5074;"	d
DMA_HRS_HRS9_MASK	derivative.h	5075;"	d
DMA_HRS_HRS9_SHIFT	derivative.h	5076;"	d
DMA_HRS_REG	derivative.h	4616;"	d
DMA_INT	derivative.h	5622;"	d
DMA_INT_INT0_MASK	derivative.h	4927;"	d
DMA_INT_INT0_SHIFT	derivative.h	4928;"	d
DMA_INT_INT10_MASK	derivative.h	4947;"	d
DMA_INT_INT10_SHIFT	derivative.h	4948;"	d
DMA_INT_INT11_MASK	derivative.h	4949;"	d
DMA_INT_INT11_SHIFT	derivative.h	4950;"	d
DMA_INT_INT12_MASK	derivative.h	4951;"	d
DMA_INT_INT12_SHIFT	derivative.h	4952;"	d
DMA_INT_INT13_MASK	derivative.h	4953;"	d
DMA_INT_INT13_SHIFT	derivative.h	4954;"	d
DMA_INT_INT14_MASK	derivative.h	4955;"	d
DMA_INT_INT14_SHIFT	derivative.h	4956;"	d
DMA_INT_INT15_MASK	derivative.h	4957;"	d
DMA_INT_INT15_SHIFT	derivative.h	4958;"	d
DMA_INT_INT16_MASK	derivative.h	4959;"	d
DMA_INT_INT16_SHIFT	derivative.h	4960;"	d
DMA_INT_INT17_MASK	derivative.h	4961;"	d
DMA_INT_INT17_SHIFT	derivative.h	4962;"	d
DMA_INT_INT18_MASK	derivative.h	4963;"	d
DMA_INT_INT18_SHIFT	derivative.h	4964;"	d
DMA_INT_INT19_MASK	derivative.h	4965;"	d
DMA_INT_INT19_SHIFT	derivative.h	4966;"	d
DMA_INT_INT1_MASK	derivative.h	4929;"	d
DMA_INT_INT1_SHIFT	derivative.h	4930;"	d
DMA_INT_INT20_MASK	derivative.h	4967;"	d
DMA_INT_INT20_SHIFT	derivative.h	4968;"	d
DMA_INT_INT21_MASK	derivative.h	4969;"	d
DMA_INT_INT21_SHIFT	derivative.h	4970;"	d
DMA_INT_INT22_MASK	derivative.h	4971;"	d
DMA_INT_INT22_SHIFT	derivative.h	4972;"	d
DMA_INT_INT23_MASK	derivative.h	4973;"	d
DMA_INT_INT23_SHIFT	derivative.h	4974;"	d
DMA_INT_INT24_MASK	derivative.h	4975;"	d
DMA_INT_INT24_SHIFT	derivative.h	4976;"	d
DMA_INT_INT25_MASK	derivative.h	4977;"	d
DMA_INT_INT25_SHIFT	derivative.h	4978;"	d
DMA_INT_INT26_MASK	derivative.h	4979;"	d
DMA_INT_INT26_SHIFT	derivative.h	4980;"	d
DMA_INT_INT27_MASK	derivative.h	4981;"	d
DMA_INT_INT27_SHIFT	derivative.h	4982;"	d
DMA_INT_INT28_MASK	derivative.h	4983;"	d
DMA_INT_INT28_SHIFT	derivative.h	4984;"	d
DMA_INT_INT29_MASK	derivative.h	4985;"	d
DMA_INT_INT29_SHIFT	derivative.h	4986;"	d
DMA_INT_INT2_MASK	derivative.h	4931;"	d
DMA_INT_INT2_SHIFT	derivative.h	4932;"	d
DMA_INT_INT30_MASK	derivative.h	4987;"	d
DMA_INT_INT30_SHIFT	derivative.h	4988;"	d
DMA_INT_INT31_MASK	derivative.h	4989;"	d
DMA_INT_INT31_SHIFT	derivative.h	4990;"	d
DMA_INT_INT3_MASK	derivative.h	4933;"	d
DMA_INT_INT3_SHIFT	derivative.h	4934;"	d
DMA_INT_INT4_MASK	derivative.h	4935;"	d
DMA_INT_INT4_SHIFT	derivative.h	4936;"	d
DMA_INT_INT5_MASK	derivative.h	4937;"	d
DMA_INT_INT5_SHIFT	derivative.h	4938;"	d
DMA_INT_INT6_MASK	derivative.h	4939;"	d
DMA_INT_INT6_SHIFT	derivative.h	4940;"	d
DMA_INT_INT7_MASK	derivative.h	4941;"	d
DMA_INT_INT7_SHIFT	derivative.h	4942;"	d
DMA_INT_INT8_MASK	derivative.h	4943;"	d
DMA_INT_INT8_SHIFT	derivative.h	4944;"	d
DMA_INT_INT9_MASK	derivative.h	4945;"	d
DMA_INT_INT9_SHIFT	derivative.h	4946;"	d
DMA_INT_REG	derivative.h	4614;"	d
DMA_MemMap	derivative.h	/^typedef struct DMA_MemMap {$/;"	s
DMA_MemMapPtr	derivative.h	/^} volatile *DMA_MemMapPtr;$/;"	t
DMA_NBYTES_MLNO	derivative.h	6142;"	d
DMA_NBYTES_MLNO_NBYTES	derivative.h	5497;"	d
DMA_NBYTES_MLNO_NBYTES_MASK	derivative.h	5495;"	d
DMA_NBYTES_MLNO_NBYTES_SHIFT	derivative.h	5496;"	d
DMA_NBYTES_MLNO_REG	derivative.h	4652;"	d
DMA_NBYTES_MLOFFNO	derivative.h	6143;"	d
DMA_NBYTES_MLOFFNO_DMLOE_MASK	derivative.h	5502;"	d
DMA_NBYTES_MLOFFNO_DMLOE_SHIFT	derivative.h	5503;"	d
DMA_NBYTES_MLOFFNO_NBYTES	derivative.h	5501;"	d
DMA_NBYTES_MLOFFNO_NBYTES_MASK	derivative.h	5499;"	d
DMA_NBYTES_MLOFFNO_NBYTES_SHIFT	derivative.h	5500;"	d
DMA_NBYTES_MLOFFNO_REG	derivative.h	4653;"	d
DMA_NBYTES_MLOFFNO_SMLOE_MASK	derivative.h	5504;"	d
DMA_NBYTES_MLOFFNO_SMLOE_SHIFT	derivative.h	5505;"	d
DMA_NBYTES_MLOFFYES	derivative.h	6144;"	d
DMA_NBYTES_MLOFFYES_DMLOE_MASK	derivative.h	5513;"	d
DMA_NBYTES_MLOFFYES_DMLOE_SHIFT	derivative.h	5514;"	d
DMA_NBYTES_MLOFFYES_MLOFF	derivative.h	5512;"	d
DMA_NBYTES_MLOFFYES_MLOFF_MASK	derivative.h	5510;"	d
DMA_NBYTES_MLOFFYES_MLOFF_SHIFT	derivative.h	5511;"	d
DMA_NBYTES_MLOFFYES_NBYTES	derivative.h	5509;"	d
DMA_NBYTES_MLOFFYES_NBYTES_MASK	derivative.h	5507;"	d
DMA_NBYTES_MLOFFYES_NBYTES_SHIFT	derivative.h	5508;"	d
DMA_NBYTES_MLOFFYES_REG	derivative.h	4654;"	d
DMA_NBYTES_MLOFFYES_SMLOE_MASK	derivative.h	5515;"	d
DMA_NBYTES_MLOFFYES_SMLOE_SHIFT	derivative.h	5516;"	d
DMA_SADDR	derivative.h	6139;"	d
DMA_SADDR_REG	derivative.h	4649;"	d
DMA_SADDR_SADDR	derivative.h	5476;"	d
DMA_SADDR_SADDR_MASK	derivative.h	5474;"	d
DMA_SADDR_SADDR_SHIFT	derivative.h	5475;"	d
DMA_SEEI	derivative.h	5615;"	d
DMA_SEEI_NOP_MASK	derivative.h	4876;"	d
DMA_SEEI_NOP_SHIFT	derivative.h	4877;"	d
DMA_SEEI_REG	derivative.h	4607;"	d
DMA_SEEI_SAEE_MASK	derivative.h	4874;"	d
DMA_SEEI_SAEE_SHIFT	derivative.h	4875;"	d
DMA_SEEI_SEEI	derivative.h	4873;"	d
DMA_SEEI_SEEI_MASK	derivative.h	4871;"	d
DMA_SEEI_SEEI_SHIFT	derivative.h	4872;"	d
DMA_SERQ	derivative.h	5617;"	d
DMA_SERQ_NOP_MASK	derivative.h	4892;"	d
DMA_SERQ_NOP_SHIFT	derivative.h	4893;"	d
DMA_SERQ_REG	derivative.h	4609;"	d
DMA_SERQ_SAER_MASK	derivative.h	4890;"	d
DMA_SERQ_SAER_SHIFT	derivative.h	4891;"	d
DMA_SERQ_SERQ	derivative.h	4889;"	d
DMA_SERQ_SERQ_MASK	derivative.h	4887;"	d
DMA_SERQ_SERQ_SHIFT	derivative.h	4888;"	d
DMA_SLAST	derivative.h	6145;"	d
DMA_SLAST_REG	derivative.h	4655;"	d
DMA_SLAST_SLAST	derivative.h	5520;"	d
DMA_SLAST_SLAST_MASK	derivative.h	5518;"	d
DMA_SLAST_SLAST_SHIFT	derivative.h	5519;"	d
DMA_SOFF	derivative.h	6140;"	d
DMA_SOFF_REG	derivative.h	4650;"	d
DMA_SOFF_SOFF	derivative.h	5480;"	d
DMA_SOFF_SOFF_MASK	derivative.h	5478;"	d
DMA_SOFF_SOFF_SHIFT	derivative.h	5479;"	d
DMA_SSRT	derivative.h	5619;"	d
DMA_SSRT_NOP_MASK	derivative.h	4908;"	d
DMA_SSRT_NOP_SHIFT	derivative.h	4909;"	d
DMA_SSRT_REG	derivative.h	4611;"	d
DMA_SSRT_SAST_MASK	derivative.h	4906;"	d
DMA_SSRT_SAST_SHIFT	derivative.h	4907;"	d
DMA_SSRT_SSRT	derivative.h	4905;"	d
DMA_SSRT_SSRT_MASK	derivative.h	4903;"	d
DMA_SSRT_SSRT_SHIFT	derivative.h	4904;"	d
DMA_TCD0_ATTR	derivative.h	5659;"	d
DMA_TCD0_BITER_ELINKNO	derivative.h	5670;"	d
DMA_TCD0_BITER_ELINKYES	derivative.h	5671;"	d
DMA_TCD0_CITER_ELINKNO	derivative.h	5666;"	d
DMA_TCD0_CITER_ELINKYES	derivative.h	5667;"	d
DMA_TCD0_CSR	derivative.h	5669;"	d
DMA_TCD0_DADDR	derivative.h	5664;"	d
DMA_TCD0_DLASTSGA	derivative.h	5668;"	d
DMA_TCD0_DOFF	derivative.h	5665;"	d
DMA_TCD0_NBYTES_MLNO	derivative.h	5660;"	d
DMA_TCD0_NBYTES_MLOFFNO	derivative.h	5661;"	d
DMA_TCD0_NBYTES_MLOFFYES	derivative.h	5662;"	d
DMA_TCD0_SADDR	derivative.h	5657;"	d
DMA_TCD0_SLAST	derivative.h	5663;"	d
DMA_TCD0_SOFF	derivative.h	5658;"	d
DMA_TCD10_ATTR	derivative.h	5809;"	d
DMA_TCD10_BITER_ELINKNO	derivative.h	5820;"	d
DMA_TCD10_BITER_ELINKYES	derivative.h	5821;"	d
DMA_TCD10_CITER_ELINKNO	derivative.h	5816;"	d
DMA_TCD10_CITER_ELINKYES	derivative.h	5817;"	d
DMA_TCD10_CSR	derivative.h	5819;"	d
DMA_TCD10_DADDR	derivative.h	5814;"	d
DMA_TCD10_DLASTSGA	derivative.h	5818;"	d
DMA_TCD10_DOFF	derivative.h	5815;"	d
DMA_TCD10_NBYTES_MLNO	derivative.h	5810;"	d
DMA_TCD10_NBYTES_MLOFFNO	derivative.h	5811;"	d
DMA_TCD10_NBYTES_MLOFFYES	derivative.h	5812;"	d
DMA_TCD10_SADDR	derivative.h	5807;"	d
DMA_TCD10_SLAST	derivative.h	5813;"	d
DMA_TCD10_SOFF	derivative.h	5808;"	d
DMA_TCD11_ATTR	derivative.h	5824;"	d
DMA_TCD11_BITER_ELINKNO	derivative.h	5835;"	d
DMA_TCD11_BITER_ELINKYES	derivative.h	5836;"	d
DMA_TCD11_CITER_ELINKNO	derivative.h	5831;"	d
DMA_TCD11_CITER_ELINKYES	derivative.h	5832;"	d
DMA_TCD11_CSR	derivative.h	5834;"	d
DMA_TCD11_DADDR	derivative.h	5829;"	d
DMA_TCD11_DLASTSGA	derivative.h	5833;"	d
DMA_TCD11_DOFF	derivative.h	5830;"	d
DMA_TCD11_NBYTES_MLNO	derivative.h	5825;"	d
DMA_TCD11_NBYTES_MLOFFNO	derivative.h	5826;"	d
DMA_TCD11_NBYTES_MLOFFYES	derivative.h	5827;"	d
DMA_TCD11_SADDR	derivative.h	5822;"	d
DMA_TCD11_SLAST	derivative.h	5828;"	d
DMA_TCD11_SOFF	derivative.h	5823;"	d
DMA_TCD12_ATTR	derivative.h	5839;"	d
DMA_TCD12_BITER_ELINKNO	derivative.h	5850;"	d
DMA_TCD12_BITER_ELINKYES	derivative.h	5851;"	d
DMA_TCD12_CITER_ELINKNO	derivative.h	5846;"	d
DMA_TCD12_CITER_ELINKYES	derivative.h	5847;"	d
DMA_TCD12_CSR	derivative.h	5849;"	d
DMA_TCD12_DADDR	derivative.h	5844;"	d
DMA_TCD12_DLASTSGA	derivative.h	5848;"	d
DMA_TCD12_DOFF	derivative.h	5845;"	d
DMA_TCD12_NBYTES_MLNO	derivative.h	5840;"	d
DMA_TCD12_NBYTES_MLOFFNO	derivative.h	5841;"	d
DMA_TCD12_NBYTES_MLOFFYES	derivative.h	5842;"	d
DMA_TCD12_SADDR	derivative.h	5837;"	d
DMA_TCD12_SLAST	derivative.h	5843;"	d
DMA_TCD12_SOFF	derivative.h	5838;"	d
DMA_TCD13_ATTR	derivative.h	5854;"	d
DMA_TCD13_BITER_ELINKNO	derivative.h	5865;"	d
DMA_TCD13_BITER_ELINKYES	derivative.h	5866;"	d
DMA_TCD13_CITER_ELINKNO	derivative.h	5861;"	d
DMA_TCD13_CITER_ELINKYES	derivative.h	5862;"	d
DMA_TCD13_CSR	derivative.h	5864;"	d
DMA_TCD13_DADDR	derivative.h	5859;"	d
DMA_TCD13_DLASTSGA	derivative.h	5863;"	d
DMA_TCD13_DOFF	derivative.h	5860;"	d
DMA_TCD13_NBYTES_MLNO	derivative.h	5855;"	d
DMA_TCD13_NBYTES_MLOFFNO	derivative.h	5856;"	d
DMA_TCD13_NBYTES_MLOFFYES	derivative.h	5857;"	d
DMA_TCD13_SADDR	derivative.h	5852;"	d
DMA_TCD13_SLAST	derivative.h	5858;"	d
DMA_TCD13_SOFF	derivative.h	5853;"	d
DMA_TCD14_ATTR	derivative.h	5869;"	d
DMA_TCD14_BITER_ELINKNO	derivative.h	5880;"	d
DMA_TCD14_BITER_ELINKYES	derivative.h	5881;"	d
DMA_TCD14_CITER_ELINKNO	derivative.h	5876;"	d
DMA_TCD14_CITER_ELINKYES	derivative.h	5877;"	d
DMA_TCD14_CSR	derivative.h	5879;"	d
DMA_TCD14_DADDR	derivative.h	5874;"	d
DMA_TCD14_DLASTSGA	derivative.h	5878;"	d
DMA_TCD14_DOFF	derivative.h	5875;"	d
DMA_TCD14_NBYTES_MLNO	derivative.h	5870;"	d
DMA_TCD14_NBYTES_MLOFFNO	derivative.h	5871;"	d
DMA_TCD14_NBYTES_MLOFFYES	derivative.h	5872;"	d
DMA_TCD14_SADDR	derivative.h	5867;"	d
DMA_TCD14_SLAST	derivative.h	5873;"	d
DMA_TCD14_SOFF	derivative.h	5868;"	d
DMA_TCD15_ATTR	derivative.h	5884;"	d
DMA_TCD15_BITER_ELINKNO	derivative.h	5895;"	d
DMA_TCD15_BITER_ELINKYES	derivative.h	5896;"	d
DMA_TCD15_CITER_ELINKNO	derivative.h	5891;"	d
DMA_TCD15_CITER_ELINKYES	derivative.h	5892;"	d
DMA_TCD15_CSR	derivative.h	5894;"	d
DMA_TCD15_DADDR	derivative.h	5889;"	d
DMA_TCD15_DLASTSGA	derivative.h	5893;"	d
DMA_TCD15_DOFF	derivative.h	5890;"	d
DMA_TCD15_NBYTES_MLNO	derivative.h	5885;"	d
DMA_TCD15_NBYTES_MLOFFNO	derivative.h	5886;"	d
DMA_TCD15_NBYTES_MLOFFYES	derivative.h	5887;"	d
DMA_TCD15_SADDR	derivative.h	5882;"	d
DMA_TCD15_SLAST	derivative.h	5888;"	d
DMA_TCD15_SOFF	derivative.h	5883;"	d
DMA_TCD16_ATTR	derivative.h	5899;"	d
DMA_TCD16_BITER_ELINKNO	derivative.h	5910;"	d
DMA_TCD16_BITER_ELINKYES	derivative.h	5911;"	d
DMA_TCD16_CITER_ELINKNO	derivative.h	5906;"	d
DMA_TCD16_CITER_ELINKYES	derivative.h	5907;"	d
DMA_TCD16_CSR	derivative.h	5909;"	d
DMA_TCD16_DADDR	derivative.h	5904;"	d
DMA_TCD16_DLASTSGA	derivative.h	5908;"	d
DMA_TCD16_DOFF	derivative.h	5905;"	d
DMA_TCD16_NBYTES_MLNO	derivative.h	5900;"	d
DMA_TCD16_NBYTES_MLOFFNO	derivative.h	5901;"	d
DMA_TCD16_NBYTES_MLOFFYES	derivative.h	5902;"	d
DMA_TCD16_SADDR	derivative.h	5897;"	d
DMA_TCD16_SLAST	derivative.h	5903;"	d
DMA_TCD16_SOFF	derivative.h	5898;"	d
DMA_TCD17_ATTR	derivative.h	5914;"	d
DMA_TCD17_BITER_ELINKNO	derivative.h	5925;"	d
DMA_TCD17_BITER_ELINKYES	derivative.h	5926;"	d
DMA_TCD17_CITER_ELINKNO	derivative.h	5921;"	d
DMA_TCD17_CITER_ELINKYES	derivative.h	5922;"	d
DMA_TCD17_CSR	derivative.h	5924;"	d
DMA_TCD17_DADDR	derivative.h	5919;"	d
DMA_TCD17_DLASTSGA	derivative.h	5923;"	d
DMA_TCD17_DOFF	derivative.h	5920;"	d
DMA_TCD17_NBYTES_MLNO	derivative.h	5915;"	d
DMA_TCD17_NBYTES_MLOFFNO	derivative.h	5916;"	d
DMA_TCD17_NBYTES_MLOFFYES	derivative.h	5917;"	d
DMA_TCD17_SADDR	derivative.h	5912;"	d
DMA_TCD17_SLAST	derivative.h	5918;"	d
DMA_TCD17_SOFF	derivative.h	5913;"	d
DMA_TCD18_ATTR	derivative.h	5929;"	d
DMA_TCD18_BITER_ELINKNO	derivative.h	5940;"	d
DMA_TCD18_BITER_ELINKYES	derivative.h	5941;"	d
DMA_TCD18_CITER_ELINKNO	derivative.h	5936;"	d
DMA_TCD18_CITER_ELINKYES	derivative.h	5937;"	d
DMA_TCD18_CSR	derivative.h	5939;"	d
DMA_TCD18_DADDR	derivative.h	5934;"	d
DMA_TCD18_DLASTSGA	derivative.h	5938;"	d
DMA_TCD18_DOFF	derivative.h	5935;"	d
DMA_TCD18_NBYTES_MLNO	derivative.h	5930;"	d
DMA_TCD18_NBYTES_MLOFFNO	derivative.h	5931;"	d
DMA_TCD18_NBYTES_MLOFFYES	derivative.h	5932;"	d
DMA_TCD18_SADDR	derivative.h	5927;"	d
DMA_TCD18_SLAST	derivative.h	5933;"	d
DMA_TCD18_SOFF	derivative.h	5928;"	d
DMA_TCD19_ATTR	derivative.h	5944;"	d
DMA_TCD19_BITER_ELINKNO	derivative.h	5955;"	d
DMA_TCD19_BITER_ELINKYES	derivative.h	5956;"	d
DMA_TCD19_CITER_ELINKNO	derivative.h	5951;"	d
DMA_TCD19_CITER_ELINKYES	derivative.h	5952;"	d
DMA_TCD19_CSR	derivative.h	5954;"	d
DMA_TCD19_DADDR	derivative.h	5949;"	d
DMA_TCD19_DLASTSGA	derivative.h	5953;"	d
DMA_TCD19_DOFF	derivative.h	5950;"	d
DMA_TCD19_NBYTES_MLNO	derivative.h	5945;"	d
DMA_TCD19_NBYTES_MLOFFNO	derivative.h	5946;"	d
DMA_TCD19_NBYTES_MLOFFYES	derivative.h	5947;"	d
DMA_TCD19_SADDR	derivative.h	5942;"	d
DMA_TCD19_SLAST	derivative.h	5948;"	d
DMA_TCD19_SOFF	derivative.h	5943;"	d
DMA_TCD1_ATTR	derivative.h	5674;"	d
DMA_TCD1_BITER_ELINKNO	derivative.h	5685;"	d
DMA_TCD1_BITER_ELINKYES	derivative.h	5686;"	d
DMA_TCD1_CITER_ELINKNO	derivative.h	5681;"	d
DMA_TCD1_CITER_ELINKYES	derivative.h	5682;"	d
DMA_TCD1_CSR	derivative.h	5684;"	d
DMA_TCD1_DADDR	derivative.h	5679;"	d
DMA_TCD1_DLASTSGA	derivative.h	5683;"	d
DMA_TCD1_DOFF	derivative.h	5680;"	d
DMA_TCD1_NBYTES_MLNO	derivative.h	5675;"	d
DMA_TCD1_NBYTES_MLOFFNO	derivative.h	5676;"	d
DMA_TCD1_NBYTES_MLOFFYES	derivative.h	5677;"	d
DMA_TCD1_SADDR	derivative.h	5672;"	d
DMA_TCD1_SLAST	derivative.h	5678;"	d
DMA_TCD1_SOFF	derivative.h	5673;"	d
DMA_TCD20_ATTR	derivative.h	5959;"	d
DMA_TCD20_BITER_ELINKNO	derivative.h	5970;"	d
DMA_TCD20_BITER_ELINKYES	derivative.h	5971;"	d
DMA_TCD20_CITER_ELINKNO	derivative.h	5966;"	d
DMA_TCD20_CITER_ELINKYES	derivative.h	5967;"	d
DMA_TCD20_CSR	derivative.h	5969;"	d
DMA_TCD20_DADDR	derivative.h	5964;"	d
DMA_TCD20_DLASTSGA	derivative.h	5968;"	d
DMA_TCD20_DOFF	derivative.h	5965;"	d
DMA_TCD20_NBYTES_MLNO	derivative.h	5960;"	d
DMA_TCD20_NBYTES_MLOFFNO	derivative.h	5961;"	d
DMA_TCD20_NBYTES_MLOFFYES	derivative.h	5962;"	d
DMA_TCD20_SADDR	derivative.h	5957;"	d
DMA_TCD20_SLAST	derivative.h	5963;"	d
DMA_TCD20_SOFF	derivative.h	5958;"	d
DMA_TCD21_ATTR	derivative.h	5974;"	d
DMA_TCD21_BITER_ELINKNO	derivative.h	5985;"	d
DMA_TCD21_BITER_ELINKYES	derivative.h	5986;"	d
DMA_TCD21_CITER_ELINKNO	derivative.h	5981;"	d
DMA_TCD21_CITER_ELINKYES	derivative.h	5982;"	d
DMA_TCD21_CSR	derivative.h	5984;"	d
DMA_TCD21_DADDR	derivative.h	5979;"	d
DMA_TCD21_DLASTSGA	derivative.h	5983;"	d
DMA_TCD21_DOFF	derivative.h	5980;"	d
DMA_TCD21_NBYTES_MLNO	derivative.h	5975;"	d
DMA_TCD21_NBYTES_MLOFFNO	derivative.h	5976;"	d
DMA_TCD21_NBYTES_MLOFFYES	derivative.h	5977;"	d
DMA_TCD21_SADDR	derivative.h	5972;"	d
DMA_TCD21_SLAST	derivative.h	5978;"	d
DMA_TCD21_SOFF	derivative.h	5973;"	d
DMA_TCD22_ATTR	derivative.h	5989;"	d
DMA_TCD22_BITER_ELINKNO	derivative.h	6000;"	d
DMA_TCD22_BITER_ELINKYES	derivative.h	6001;"	d
DMA_TCD22_CITER_ELINKNO	derivative.h	5996;"	d
DMA_TCD22_CITER_ELINKYES	derivative.h	5997;"	d
DMA_TCD22_CSR	derivative.h	5999;"	d
DMA_TCD22_DADDR	derivative.h	5994;"	d
DMA_TCD22_DLASTSGA	derivative.h	5998;"	d
DMA_TCD22_DOFF	derivative.h	5995;"	d
DMA_TCD22_NBYTES_MLNO	derivative.h	5990;"	d
DMA_TCD22_NBYTES_MLOFFNO	derivative.h	5991;"	d
DMA_TCD22_NBYTES_MLOFFYES	derivative.h	5992;"	d
DMA_TCD22_SADDR	derivative.h	5987;"	d
DMA_TCD22_SLAST	derivative.h	5993;"	d
DMA_TCD22_SOFF	derivative.h	5988;"	d
DMA_TCD23_ATTR	derivative.h	6004;"	d
DMA_TCD23_BITER_ELINKNO	derivative.h	6015;"	d
DMA_TCD23_BITER_ELINKYES	derivative.h	6016;"	d
DMA_TCD23_CITER_ELINKNO	derivative.h	6011;"	d
DMA_TCD23_CITER_ELINKYES	derivative.h	6012;"	d
DMA_TCD23_CSR	derivative.h	6014;"	d
DMA_TCD23_DADDR	derivative.h	6009;"	d
DMA_TCD23_DLASTSGA	derivative.h	6013;"	d
DMA_TCD23_DOFF	derivative.h	6010;"	d
DMA_TCD23_NBYTES_MLNO	derivative.h	6005;"	d
DMA_TCD23_NBYTES_MLOFFNO	derivative.h	6006;"	d
DMA_TCD23_NBYTES_MLOFFYES	derivative.h	6007;"	d
DMA_TCD23_SADDR	derivative.h	6002;"	d
DMA_TCD23_SLAST	derivative.h	6008;"	d
DMA_TCD23_SOFF	derivative.h	6003;"	d
DMA_TCD24_ATTR	derivative.h	6019;"	d
DMA_TCD24_BITER_ELINKNO	derivative.h	6030;"	d
DMA_TCD24_BITER_ELINKYES	derivative.h	6031;"	d
DMA_TCD24_CITER_ELINKNO	derivative.h	6026;"	d
DMA_TCD24_CITER_ELINKYES	derivative.h	6027;"	d
DMA_TCD24_CSR	derivative.h	6029;"	d
DMA_TCD24_DADDR	derivative.h	6024;"	d
DMA_TCD24_DLASTSGA	derivative.h	6028;"	d
DMA_TCD24_DOFF	derivative.h	6025;"	d
DMA_TCD24_NBYTES_MLNO	derivative.h	6020;"	d
DMA_TCD24_NBYTES_MLOFFNO	derivative.h	6021;"	d
DMA_TCD24_NBYTES_MLOFFYES	derivative.h	6022;"	d
DMA_TCD24_SADDR	derivative.h	6017;"	d
DMA_TCD24_SLAST	derivative.h	6023;"	d
DMA_TCD24_SOFF	derivative.h	6018;"	d
DMA_TCD25_ATTR	derivative.h	6034;"	d
DMA_TCD25_BITER_ELINKNO	derivative.h	6045;"	d
DMA_TCD25_BITER_ELINKYES	derivative.h	6046;"	d
DMA_TCD25_CITER_ELINKNO	derivative.h	6041;"	d
DMA_TCD25_CITER_ELINKYES	derivative.h	6042;"	d
DMA_TCD25_CSR	derivative.h	6044;"	d
DMA_TCD25_DADDR	derivative.h	6039;"	d
DMA_TCD25_DLASTSGA	derivative.h	6043;"	d
DMA_TCD25_DOFF	derivative.h	6040;"	d
DMA_TCD25_NBYTES_MLNO	derivative.h	6035;"	d
DMA_TCD25_NBYTES_MLOFFNO	derivative.h	6036;"	d
DMA_TCD25_NBYTES_MLOFFYES	derivative.h	6037;"	d
DMA_TCD25_SADDR	derivative.h	6032;"	d
DMA_TCD25_SLAST	derivative.h	6038;"	d
DMA_TCD25_SOFF	derivative.h	6033;"	d
DMA_TCD26_ATTR	derivative.h	6049;"	d
DMA_TCD26_BITER_ELINKNO	derivative.h	6060;"	d
DMA_TCD26_BITER_ELINKYES	derivative.h	6061;"	d
DMA_TCD26_CITER_ELINKNO	derivative.h	6056;"	d
DMA_TCD26_CITER_ELINKYES	derivative.h	6057;"	d
DMA_TCD26_CSR	derivative.h	6059;"	d
DMA_TCD26_DADDR	derivative.h	6054;"	d
DMA_TCD26_DLASTSGA	derivative.h	6058;"	d
DMA_TCD26_DOFF	derivative.h	6055;"	d
DMA_TCD26_NBYTES_MLNO	derivative.h	6050;"	d
DMA_TCD26_NBYTES_MLOFFNO	derivative.h	6051;"	d
DMA_TCD26_NBYTES_MLOFFYES	derivative.h	6052;"	d
DMA_TCD26_SADDR	derivative.h	6047;"	d
DMA_TCD26_SLAST	derivative.h	6053;"	d
DMA_TCD26_SOFF	derivative.h	6048;"	d
DMA_TCD27_ATTR	derivative.h	6064;"	d
DMA_TCD27_BITER_ELINKNO	derivative.h	6075;"	d
DMA_TCD27_BITER_ELINKYES	derivative.h	6076;"	d
DMA_TCD27_CITER_ELINKNO	derivative.h	6071;"	d
DMA_TCD27_CITER_ELINKYES	derivative.h	6072;"	d
DMA_TCD27_CSR	derivative.h	6074;"	d
DMA_TCD27_DADDR	derivative.h	6069;"	d
DMA_TCD27_DLASTSGA	derivative.h	6073;"	d
DMA_TCD27_DOFF	derivative.h	6070;"	d
DMA_TCD27_NBYTES_MLNO	derivative.h	6065;"	d
DMA_TCD27_NBYTES_MLOFFNO	derivative.h	6066;"	d
DMA_TCD27_NBYTES_MLOFFYES	derivative.h	6067;"	d
DMA_TCD27_SADDR	derivative.h	6062;"	d
DMA_TCD27_SLAST	derivative.h	6068;"	d
DMA_TCD27_SOFF	derivative.h	6063;"	d
DMA_TCD28_ATTR	derivative.h	6079;"	d
DMA_TCD28_BITER_ELINKNO	derivative.h	6090;"	d
DMA_TCD28_BITER_ELINKYES	derivative.h	6091;"	d
DMA_TCD28_CITER_ELINKNO	derivative.h	6086;"	d
DMA_TCD28_CITER_ELINKYES	derivative.h	6087;"	d
DMA_TCD28_CSR	derivative.h	6089;"	d
DMA_TCD28_DADDR	derivative.h	6084;"	d
DMA_TCD28_DLASTSGA	derivative.h	6088;"	d
DMA_TCD28_DOFF	derivative.h	6085;"	d
DMA_TCD28_NBYTES_MLNO	derivative.h	6080;"	d
DMA_TCD28_NBYTES_MLOFFNO	derivative.h	6081;"	d
DMA_TCD28_NBYTES_MLOFFYES	derivative.h	6082;"	d
DMA_TCD28_SADDR	derivative.h	6077;"	d
DMA_TCD28_SLAST	derivative.h	6083;"	d
DMA_TCD28_SOFF	derivative.h	6078;"	d
DMA_TCD29_ATTR	derivative.h	6094;"	d
DMA_TCD29_BITER_ELINKNO	derivative.h	6105;"	d
DMA_TCD29_BITER_ELINKYES	derivative.h	6106;"	d
DMA_TCD29_CITER_ELINKNO	derivative.h	6101;"	d
DMA_TCD29_CITER_ELINKYES	derivative.h	6102;"	d
DMA_TCD29_CSR	derivative.h	6104;"	d
DMA_TCD29_DADDR	derivative.h	6099;"	d
DMA_TCD29_DLASTSGA	derivative.h	6103;"	d
DMA_TCD29_DOFF	derivative.h	6100;"	d
DMA_TCD29_NBYTES_MLNO	derivative.h	6095;"	d
DMA_TCD29_NBYTES_MLOFFNO	derivative.h	6096;"	d
DMA_TCD29_NBYTES_MLOFFYES	derivative.h	6097;"	d
DMA_TCD29_SADDR	derivative.h	6092;"	d
DMA_TCD29_SLAST	derivative.h	6098;"	d
DMA_TCD29_SOFF	derivative.h	6093;"	d
DMA_TCD2_ATTR	derivative.h	5689;"	d
DMA_TCD2_BITER_ELINKNO	derivative.h	5700;"	d
DMA_TCD2_BITER_ELINKYES	derivative.h	5701;"	d
DMA_TCD2_CITER_ELINKNO	derivative.h	5696;"	d
DMA_TCD2_CITER_ELINKYES	derivative.h	5697;"	d
DMA_TCD2_CSR	derivative.h	5699;"	d
DMA_TCD2_DADDR	derivative.h	5694;"	d
DMA_TCD2_DLASTSGA	derivative.h	5698;"	d
DMA_TCD2_DOFF	derivative.h	5695;"	d
DMA_TCD2_NBYTES_MLNO	derivative.h	5690;"	d
DMA_TCD2_NBYTES_MLOFFNO	derivative.h	5691;"	d
DMA_TCD2_NBYTES_MLOFFYES	derivative.h	5692;"	d
DMA_TCD2_SADDR	derivative.h	5687;"	d
DMA_TCD2_SLAST	derivative.h	5693;"	d
DMA_TCD2_SOFF	derivative.h	5688;"	d
DMA_TCD30_ATTR	derivative.h	6109;"	d
DMA_TCD30_BITER_ELINKNO	derivative.h	6120;"	d
DMA_TCD30_BITER_ELINKYES	derivative.h	6121;"	d
DMA_TCD30_CITER_ELINKNO	derivative.h	6116;"	d
DMA_TCD30_CITER_ELINKYES	derivative.h	6117;"	d
DMA_TCD30_CSR	derivative.h	6119;"	d
DMA_TCD30_DADDR	derivative.h	6114;"	d
DMA_TCD30_DLASTSGA	derivative.h	6118;"	d
DMA_TCD30_DOFF	derivative.h	6115;"	d
DMA_TCD30_NBYTES_MLNO	derivative.h	6110;"	d
DMA_TCD30_NBYTES_MLOFFNO	derivative.h	6111;"	d
DMA_TCD30_NBYTES_MLOFFYES	derivative.h	6112;"	d
DMA_TCD30_SADDR	derivative.h	6107;"	d
DMA_TCD30_SLAST	derivative.h	6113;"	d
DMA_TCD30_SOFF	derivative.h	6108;"	d
DMA_TCD31_ATTR	derivative.h	6124;"	d
DMA_TCD31_BITER_ELINKNO	derivative.h	6135;"	d
DMA_TCD31_BITER_ELINKYES	derivative.h	6136;"	d
DMA_TCD31_CITER_ELINKNO	derivative.h	6131;"	d
DMA_TCD31_CITER_ELINKYES	derivative.h	6132;"	d
DMA_TCD31_CSR	derivative.h	6134;"	d
DMA_TCD31_DADDR	derivative.h	6129;"	d
DMA_TCD31_DLASTSGA	derivative.h	6133;"	d
DMA_TCD31_DOFF	derivative.h	6130;"	d
DMA_TCD31_NBYTES_MLNO	derivative.h	6125;"	d
DMA_TCD31_NBYTES_MLOFFNO	derivative.h	6126;"	d
DMA_TCD31_NBYTES_MLOFFYES	derivative.h	6127;"	d
DMA_TCD31_SADDR	derivative.h	6122;"	d
DMA_TCD31_SLAST	derivative.h	6128;"	d
DMA_TCD31_SOFF	derivative.h	6123;"	d
DMA_TCD3_ATTR	derivative.h	5704;"	d
DMA_TCD3_BITER_ELINKNO	derivative.h	5715;"	d
DMA_TCD3_BITER_ELINKYES	derivative.h	5716;"	d
DMA_TCD3_CITER_ELINKNO	derivative.h	5711;"	d
DMA_TCD3_CITER_ELINKYES	derivative.h	5712;"	d
DMA_TCD3_CSR	derivative.h	5714;"	d
DMA_TCD3_DADDR	derivative.h	5709;"	d
DMA_TCD3_DLASTSGA	derivative.h	5713;"	d
DMA_TCD3_DOFF	derivative.h	5710;"	d
DMA_TCD3_NBYTES_MLNO	derivative.h	5705;"	d
DMA_TCD3_NBYTES_MLOFFNO	derivative.h	5706;"	d
DMA_TCD3_NBYTES_MLOFFYES	derivative.h	5707;"	d
DMA_TCD3_SADDR	derivative.h	5702;"	d
DMA_TCD3_SLAST	derivative.h	5708;"	d
DMA_TCD3_SOFF	derivative.h	5703;"	d
DMA_TCD4_ATTR	derivative.h	5719;"	d
DMA_TCD4_BITER_ELINKNO	derivative.h	5730;"	d
DMA_TCD4_BITER_ELINKYES	derivative.h	5731;"	d
DMA_TCD4_CITER_ELINKNO	derivative.h	5726;"	d
DMA_TCD4_CITER_ELINKYES	derivative.h	5727;"	d
DMA_TCD4_CSR	derivative.h	5729;"	d
DMA_TCD4_DADDR	derivative.h	5724;"	d
DMA_TCD4_DLASTSGA	derivative.h	5728;"	d
DMA_TCD4_DOFF	derivative.h	5725;"	d
DMA_TCD4_NBYTES_MLNO	derivative.h	5720;"	d
DMA_TCD4_NBYTES_MLOFFNO	derivative.h	5721;"	d
DMA_TCD4_NBYTES_MLOFFYES	derivative.h	5722;"	d
DMA_TCD4_SADDR	derivative.h	5717;"	d
DMA_TCD4_SLAST	derivative.h	5723;"	d
DMA_TCD4_SOFF	derivative.h	5718;"	d
DMA_TCD5_ATTR	derivative.h	5734;"	d
DMA_TCD5_BITER_ELINKNO	derivative.h	5745;"	d
DMA_TCD5_BITER_ELINKYES	derivative.h	5746;"	d
DMA_TCD5_CITER_ELINKNO	derivative.h	5741;"	d
DMA_TCD5_CITER_ELINKYES	derivative.h	5742;"	d
DMA_TCD5_CSR	derivative.h	5744;"	d
DMA_TCD5_DADDR	derivative.h	5739;"	d
DMA_TCD5_DLASTSGA	derivative.h	5743;"	d
DMA_TCD5_DOFF	derivative.h	5740;"	d
DMA_TCD5_NBYTES_MLNO	derivative.h	5735;"	d
DMA_TCD5_NBYTES_MLOFFNO	derivative.h	5736;"	d
DMA_TCD5_NBYTES_MLOFFYES	derivative.h	5737;"	d
DMA_TCD5_SADDR	derivative.h	5732;"	d
DMA_TCD5_SLAST	derivative.h	5738;"	d
DMA_TCD5_SOFF	derivative.h	5733;"	d
DMA_TCD6_ATTR	derivative.h	5749;"	d
DMA_TCD6_BITER_ELINKNO	derivative.h	5760;"	d
DMA_TCD6_BITER_ELINKYES	derivative.h	5761;"	d
DMA_TCD6_CITER_ELINKNO	derivative.h	5756;"	d
DMA_TCD6_CITER_ELINKYES	derivative.h	5757;"	d
DMA_TCD6_CSR	derivative.h	5759;"	d
DMA_TCD6_DADDR	derivative.h	5754;"	d
DMA_TCD6_DLASTSGA	derivative.h	5758;"	d
DMA_TCD6_DOFF	derivative.h	5755;"	d
DMA_TCD6_NBYTES_MLNO	derivative.h	5750;"	d
DMA_TCD6_NBYTES_MLOFFNO	derivative.h	5751;"	d
DMA_TCD6_NBYTES_MLOFFYES	derivative.h	5752;"	d
DMA_TCD6_SADDR	derivative.h	5747;"	d
DMA_TCD6_SLAST	derivative.h	5753;"	d
DMA_TCD6_SOFF	derivative.h	5748;"	d
DMA_TCD7_ATTR	derivative.h	5764;"	d
DMA_TCD7_BITER_ELINKNO	derivative.h	5775;"	d
DMA_TCD7_BITER_ELINKYES	derivative.h	5776;"	d
DMA_TCD7_CITER_ELINKNO	derivative.h	5771;"	d
DMA_TCD7_CITER_ELINKYES	derivative.h	5772;"	d
DMA_TCD7_CSR	derivative.h	5774;"	d
DMA_TCD7_DADDR	derivative.h	5769;"	d
DMA_TCD7_DLASTSGA	derivative.h	5773;"	d
DMA_TCD7_DOFF	derivative.h	5770;"	d
DMA_TCD7_NBYTES_MLNO	derivative.h	5765;"	d
DMA_TCD7_NBYTES_MLOFFNO	derivative.h	5766;"	d
DMA_TCD7_NBYTES_MLOFFYES	derivative.h	5767;"	d
DMA_TCD7_SADDR	derivative.h	5762;"	d
DMA_TCD7_SLAST	derivative.h	5768;"	d
DMA_TCD7_SOFF	derivative.h	5763;"	d
DMA_TCD8_ATTR	derivative.h	5779;"	d
DMA_TCD8_BITER_ELINKNO	derivative.h	5790;"	d
DMA_TCD8_BITER_ELINKYES	derivative.h	5791;"	d
DMA_TCD8_CITER_ELINKNO	derivative.h	5786;"	d
DMA_TCD8_CITER_ELINKYES	derivative.h	5787;"	d
DMA_TCD8_CSR	derivative.h	5789;"	d
DMA_TCD8_DADDR	derivative.h	5784;"	d
DMA_TCD8_DLASTSGA	derivative.h	5788;"	d
DMA_TCD8_DOFF	derivative.h	5785;"	d
DMA_TCD8_NBYTES_MLNO	derivative.h	5780;"	d
DMA_TCD8_NBYTES_MLOFFNO	derivative.h	5781;"	d
DMA_TCD8_NBYTES_MLOFFYES	derivative.h	5782;"	d
DMA_TCD8_SADDR	derivative.h	5777;"	d
DMA_TCD8_SLAST	derivative.h	5783;"	d
DMA_TCD8_SOFF	derivative.h	5778;"	d
DMA_TCD9_ATTR	derivative.h	5794;"	d
DMA_TCD9_BITER_ELINKNO	derivative.h	5805;"	d
DMA_TCD9_BITER_ELINKYES	derivative.h	5806;"	d
DMA_TCD9_CITER_ELINKNO	derivative.h	5801;"	d
DMA_TCD9_CITER_ELINKYES	derivative.h	5802;"	d
DMA_TCD9_CSR	derivative.h	5804;"	d
DMA_TCD9_DADDR	derivative.h	5799;"	d
DMA_TCD9_DLASTSGA	derivative.h	5803;"	d
DMA_TCD9_DOFF	derivative.h	5800;"	d
DMA_TCD9_NBYTES_MLNO	derivative.h	5795;"	d
DMA_TCD9_NBYTES_MLOFFNO	derivative.h	5796;"	d
DMA_TCD9_NBYTES_MLOFFYES	derivative.h	5797;"	d
DMA_TCD9_SADDR	derivative.h	5792;"	d
DMA_TCD9_SLAST	derivative.h	5798;"	d
DMA_TCD9_SOFF	derivative.h	5793;"	d
DOFF	derivative.h	/^    uint16_t DOFF;                                   \/**< TCD Signed Destination Address Offset, array offset: 0x1014, array step: 0x20 *\/$/;"	m	struct:DMA_MemMap::__anon15
DSADDR	derivative.h	/^  uint32_t DSADDR;                                 \/**< DMA System Address Register, offset: 0x0 *\/$/;"	m	struct:SDHC_MemMap
DWT_BASE_PTR	derivative.h	6385;"	d
DWT_BASE_PTRS	derivative.h	6387;"	d
DWT_CID0	derivative.h	6429;"	d
DWT_CID0_REG	derivative.h	6358;"	d
DWT_CID1	derivative.h	6430;"	d
DWT_CID1_REG	derivative.h	6359;"	d
DWT_CID2	derivative.h	6431;"	d
DWT_CID2_REG	derivative.h	6360;"	d
DWT_CID3	derivative.h	6432;"	d
DWT_CID3_REG	derivative.h	6361;"	d
DWT_COMP	derivative.h	6435;"	d
DWT_COMP0	derivative.h	6409;"	d
DWT_COMP1	derivative.h	6412;"	d
DWT_COMP2	derivative.h	6415;"	d
DWT_COMP3	derivative.h	6418;"	d
DWT_COMP_REG	derivative.h	6347;"	d
DWT_CPICNT	derivative.h	6403;"	d
DWT_CPICNT_REG	derivative.h	6341;"	d
DWT_CTRL	derivative.h	6401;"	d
DWT_CTRL_REG	derivative.h	6339;"	d
DWT_CYCCNT	derivative.h	6402;"	d
DWT_CYCCNT_REG	derivative.h	6340;"	d
DWT_EXCCNT	derivative.h	6404;"	d
DWT_EXCCNT_REG	derivative.h	6342;"	d
DWT_FOLDCNT	derivative.h	6407;"	d
DWT_FOLDCNT_REG	derivative.h	6345;"	d
DWT_FUNCTION	derivative.h	6437;"	d
DWT_FUNCTION0	derivative.h	6411;"	d
DWT_FUNCTION1	derivative.h	6414;"	d
DWT_FUNCTION2	derivative.h	6417;"	d
DWT_FUNCTION3	derivative.h	6420;"	d
DWT_FUNCTION_REG	derivative.h	6349;"	d
DWT_LSUCNT	derivative.h	6406;"	d
DWT_LSUCNT_REG	derivative.h	6344;"	d
DWT_MASK	derivative.h	6436;"	d
DWT_MASK0	derivative.h	6410;"	d
DWT_MASK1	derivative.h	6413;"	d
DWT_MASK2	derivative.h	6416;"	d
DWT_MASK3	derivative.h	6419;"	d
DWT_MASK_REG	derivative.h	6348;"	d
DWT_MemMap	derivative.h	/^typedef struct DWT_MemMap {$/;"	s
DWT_MemMapPtr	derivative.h	/^} volatile *DWT_MemMapPtr;$/;"	t
DWT_PCSR	derivative.h	6408;"	d
DWT_PCSR_REG	derivative.h	6346;"	d
DWT_PID0	derivative.h	6425;"	d
DWT_PID0_REG	derivative.h	6354;"	d
DWT_PID1	derivative.h	6426;"	d
DWT_PID1_REG	derivative.h	6355;"	d
DWT_PID2	derivative.h	6427;"	d
DWT_PID2_REG	derivative.h	6356;"	d
DWT_PID3	derivative.h	6428;"	d
DWT_PID3_REG	derivative.h	6357;"	d
DWT_PID4	derivative.h	6421;"	d
DWT_PID4_REG	derivative.h	6350;"	d
DWT_PID5	derivative.h	6422;"	d
DWT_PID5_REG	derivative.h	6351;"	d
DWT_PID6	derivative.h	6423;"	d
DWT_PID6_REG	derivative.h	6352;"	d
DWT_PID7	derivative.h	6424;"	d
DWT_PID7_REG	derivative.h	6353;"	d
DWT_SLEEPCNT	derivative.h	6405;"	d
DWT_SLEEPCNT_REG	derivative.h	6343;"	d
EAR	derivative.h	/^    uint32_t EAR;                                    \/**< Error Address Register, Slave Port n, array offset: 0x10, array step: 0x8 *\/$/;"	m	struct:MPU_MemMap::__anon25
ECR	derivative.h	/^  uint32_t ECR;                                    \/**< Error Counter, offset: 0x1C *\/$/;"	m	struct:CAN_MemMap
ECR	derivative.h	/^  uint32_t ECR;                                    \/**< Ethernet Control Register, offset: 0x24 *\/$/;"	m	struct:ENET_MemMap
ED	derivative.h	/^  uint8_t ED;                                      \/**< UART Extended Data Register, offset: 0xC *\/$/;"	m	struct:UART_MemMap
EDR	derivative.h	/^    uint32_t EDR;                                    \/**< Error Detail Register, Slave Port n, array offset: 0x14, array step: 0x8 *\/$/;"	m	struct:MPU_MemMap::__anon25
EEI	derivative.h	/^  uint32_t EEI;                                    \/**< Enable Error Interrupt Register, offset: 0x14 *\/$/;"	m	struct:DMA_MemMap
EEVR	derivative.h	/^  uint32_t EEVR;                                   \/**< Trace Enable Event Register, offset: 0x20 *\/$/;"	m	struct:ETM_MemMap
EIMR	derivative.h	/^  uint32_t EIMR;                                   \/**< Interrupt Mask Register, offset: 0x8 *\/$/;"	m	struct:ENET_MemMap
EIR	derivative.h	/^  uint32_t EIR;                                    \/**< Interrupt Event Register, offset: 0x4 *\/$/;"	m	struct:ENET_MemMap
ELECTRODE_COUNT	capacitivepadsdriver.c	22;"	d	file:
ENDPOINT	derivative.h	/^  } ENDPOINT[16];$/;"	m	struct:USB_MemMap	typeref:struct:USB_MemMap::__anon32
ENDPT	derivative.h	/^    uint8_t ENDPT;                                   \/**< Endpoint Control Register, array offset: 0xC0, array step: 0x4 *\/$/;"	m	struct:USB_MemMap::__anon32
ENDPTNAK	derivative.h	/^  uint32_t ENDPTNAK;                               \/**< Endpoint NAK Register, offset: 0x178 *\/$/;"	m	struct:USBHS_MemMap
ENDPTNAKEN	derivative.h	/^  uint32_t ENDPTNAKEN;                             \/**< Endpoint NAK Enable Register, offset: 0x17C *\/$/;"	m	struct:USBHS_MemMap
ENET_ATCOR	derivative.h	7158;"	d
ENET_ATCOR_COR	derivative.h	7009;"	d
ENET_ATCOR_COR_MASK	derivative.h	7007;"	d
ENET_ATCOR_COR_SHIFT	derivative.h	7008;"	d
ENET_ATCOR_REG	derivative.h	6678;"	d
ENET_ATCR	derivative.h	7154;"	d
ENET_ATCR_CAPTURE_MASK	derivative.h	6990;"	d
ENET_ATCR_CAPTURE_SHIFT	derivative.h	6991;"	d
ENET_ATCR_EN_MASK	derivative.h	6978;"	d
ENET_ATCR_EN_SHIFT	derivative.h	6979;"	d
ENET_ATCR_OFFEN_MASK	derivative.h	6980;"	d
ENET_ATCR_OFFEN_SHIFT	derivative.h	6981;"	d
ENET_ATCR_OFFRST_MASK	derivative.h	6982;"	d
ENET_ATCR_OFFRST_SHIFT	derivative.h	6983;"	d
ENET_ATCR_PEREN_MASK	derivative.h	6984;"	d
ENET_ATCR_PEREN_SHIFT	derivative.h	6985;"	d
ENET_ATCR_PINPER_MASK	derivative.h	6986;"	d
ENET_ATCR_PINPER_SHIFT	derivative.h	6987;"	d
ENET_ATCR_REG	derivative.h	6674;"	d
ENET_ATCR_RESTART_MASK	derivative.h	6988;"	d
ENET_ATCR_RESTART_SHIFT	derivative.h	6989;"	d
ENET_ATCR_SLAVE_MASK	derivative.h	6992;"	d
ENET_ATCR_SLAVE_SHIFT	derivative.h	6993;"	d
ENET_ATINC	derivative.h	7159;"	d
ENET_ATINC_INC	derivative.h	7013;"	d
ENET_ATINC_INC_CORR	derivative.h	7016;"	d
ENET_ATINC_INC_CORR_MASK	derivative.h	7014;"	d
ENET_ATINC_INC_CORR_SHIFT	derivative.h	7015;"	d
ENET_ATINC_INC_MASK	derivative.h	7011;"	d
ENET_ATINC_INC_SHIFT	derivative.h	7012;"	d
ENET_ATINC_REG	derivative.h	6679;"	d
ENET_ATOFF	derivative.h	7156;"	d
ENET_ATOFF_OFFSET	derivative.h	7001;"	d
ENET_ATOFF_OFFSET_MASK	derivative.h	6999;"	d
ENET_ATOFF_OFFSET_SHIFT	derivative.h	7000;"	d
ENET_ATOFF_REG	derivative.h	6676;"	d
ENET_ATPER	derivative.h	7157;"	d
ENET_ATPER_PERIOD	derivative.h	7005;"	d
ENET_ATPER_PERIOD_MASK	derivative.h	7003;"	d
ENET_ATPER_PERIOD_SHIFT	derivative.h	7004;"	d
ENET_ATPER_REG	derivative.h	6677;"	d
ENET_ATSTMP	derivative.h	7160;"	d
ENET_ATSTMP_REG	derivative.h	6680;"	d
ENET_ATSTMP_TIMESTAMP	derivative.h	7020;"	d
ENET_ATSTMP_TIMESTAMP_MASK	derivative.h	7018;"	d
ENET_ATSTMP_TIMESTAMP_SHIFT	derivative.h	7019;"	d
ENET_ATVR	derivative.h	7155;"	d
ENET_ATVR_ATIME	derivative.h	6997;"	d
ENET_ATVR_ATIME_MASK	derivative.h	6995;"	d
ENET_ATVR_ATIME_SHIFT	derivative.h	6996;"	d
ENET_ATVR_REG	derivative.h	6675;"	d
ENET_BASE_PTR	derivative.h	7052;"	d
ENET_BASE_PTRS	derivative.h	7054;"	d
ENET_ECR	derivative.h	7072;"	d
ENET_ECR_DBGEN_MASK	derivative.h	6782;"	d
ENET_ECR_DBGEN_SHIFT	derivative.h	6783;"	d
ENET_ECR_DBSWP_MASK	derivative.h	6786;"	d
ENET_ECR_DBSWP_SHIFT	derivative.h	6787;"	d
ENET_ECR_EN1588_MASK	derivative.h	6780;"	d
ENET_ECR_EN1588_SHIFT	derivative.h	6781;"	d
ENET_ECR_ETHEREN_MASK	derivative.h	6774;"	d
ENET_ECR_ETHEREN_SHIFT	derivative.h	6775;"	d
ENET_ECR_MAGICEN_MASK	derivative.h	6776;"	d
ENET_ECR_MAGICEN_SHIFT	derivative.h	6777;"	d
ENET_ECR_REG	derivative.h	6592;"	d
ENET_ECR_RESET_MASK	derivative.h	6772;"	d
ENET_ECR_RESET_SHIFT	derivative.h	6773;"	d
ENET_ECR_SLEEP_MASK	derivative.h	6778;"	d
ENET_ECR_SLEEP_SHIFT	derivative.h	6779;"	d
ENET_ECR_STOPEN_MASK	derivative.h	6784;"	d
ENET_ECR_STOPEN_SHIFT	derivative.h	6785;"	d
ENET_EIMR	derivative.h	7069;"	d
ENET_EIMR_BABR_MASK	derivative.h	6763;"	d
ENET_EIMR_BABR_SHIFT	derivative.h	6764;"	d
ENET_EIMR_BABT_MASK	derivative.h	6761;"	d
ENET_EIMR_BABT_SHIFT	derivative.h	6762;"	d
ENET_EIMR_EBERR_MASK	derivative.h	6747;"	d
ENET_EIMR_EBERR_SHIFT	derivative.h	6748;"	d
ENET_EIMR_GRA_MASK	derivative.h	6759;"	d
ENET_EIMR_GRA_SHIFT	derivative.h	6760;"	d
ENET_EIMR_LC_MASK	derivative.h	6745;"	d
ENET_EIMR_LC_SHIFT	derivative.h	6746;"	d
ENET_EIMR_MII_MASK	derivative.h	6749;"	d
ENET_EIMR_MII_SHIFT	derivative.h	6750;"	d
ENET_EIMR_PLR_MASK	derivative.h	6739;"	d
ENET_EIMR_PLR_SHIFT	derivative.h	6740;"	d
ENET_EIMR_REG	derivative.h	6589;"	d
ENET_EIMR_RL_MASK	derivative.h	6743;"	d
ENET_EIMR_RL_SHIFT	derivative.h	6744;"	d
ENET_EIMR_RXB_MASK	derivative.h	6751;"	d
ENET_EIMR_RXB_SHIFT	derivative.h	6752;"	d
ENET_EIMR_RXF_MASK	derivative.h	6753;"	d
ENET_EIMR_RXF_SHIFT	derivative.h	6754;"	d
ENET_EIMR_TS_AVAIL_MASK	derivative.h	6735;"	d
ENET_EIMR_TS_AVAIL_SHIFT	derivative.h	6736;"	d
ENET_EIMR_TS_TIMER_MASK	derivative.h	6733;"	d
ENET_EIMR_TS_TIMER_SHIFT	derivative.h	6734;"	d
ENET_EIMR_TXB_MASK	derivative.h	6755;"	d
ENET_EIMR_TXB_SHIFT	derivative.h	6756;"	d
ENET_EIMR_TXF_MASK	derivative.h	6757;"	d
ENET_EIMR_TXF_SHIFT	derivative.h	6758;"	d
ENET_EIMR_UN_MASK	derivative.h	6741;"	d
ENET_EIMR_UN_SHIFT	derivative.h	6742;"	d
ENET_EIMR_WAKEUP_MASK	derivative.h	6737;"	d
ENET_EIMR_WAKEUP_SHIFT	derivative.h	6738;"	d
ENET_EIR	derivative.h	7068;"	d
ENET_EIR_BABR_MASK	derivative.h	6730;"	d
ENET_EIR_BABR_SHIFT	derivative.h	6731;"	d
ENET_EIR_BABT_MASK	derivative.h	6728;"	d
ENET_EIR_BABT_SHIFT	derivative.h	6729;"	d
ENET_EIR_EBERR_MASK	derivative.h	6714;"	d
ENET_EIR_EBERR_SHIFT	derivative.h	6715;"	d
ENET_EIR_GRA_MASK	derivative.h	6726;"	d
ENET_EIR_GRA_SHIFT	derivative.h	6727;"	d
ENET_EIR_LC_MASK	derivative.h	6712;"	d
ENET_EIR_LC_SHIFT	derivative.h	6713;"	d
ENET_EIR_MII_MASK	derivative.h	6716;"	d
ENET_EIR_MII_SHIFT	derivative.h	6717;"	d
ENET_EIR_PLR_MASK	derivative.h	6706;"	d
ENET_EIR_PLR_SHIFT	derivative.h	6707;"	d
ENET_EIR_REG	derivative.h	6588;"	d
ENET_EIR_RL_MASK	derivative.h	6710;"	d
ENET_EIR_RL_SHIFT	derivative.h	6711;"	d
ENET_EIR_RXB_MASK	derivative.h	6718;"	d
ENET_EIR_RXB_SHIFT	derivative.h	6719;"	d
ENET_EIR_RXF_MASK	derivative.h	6720;"	d
ENET_EIR_RXF_SHIFT	derivative.h	6721;"	d
ENET_EIR_TS_AVAIL_MASK	derivative.h	6702;"	d
ENET_EIR_TS_AVAIL_SHIFT	derivative.h	6703;"	d
ENET_EIR_TS_TIMER_MASK	derivative.h	6700;"	d
ENET_EIR_TS_TIMER_SHIFT	derivative.h	6701;"	d
ENET_EIR_TXB_MASK	derivative.h	6722;"	d
ENET_EIR_TXB_SHIFT	derivative.h	6723;"	d
ENET_EIR_TXF_MASK	derivative.h	6724;"	d
ENET_EIR_TXF_SHIFT	derivative.h	6725;"	d
ENET_EIR_UN_MASK	derivative.h	6708;"	d
ENET_EIR_UN_SHIFT	derivative.h	6709;"	d
ENET_EIR_WAKEUP_MASK	derivative.h	6704;"	d
ENET_EIR_WAKEUP_SHIFT	derivative.h	6705;"	d
ENET_FTRL	derivative.h	7097;"	d
ENET_FTRL_REG	derivative.h	6617;"	d
ENET_FTRL_TRUNC_FL	derivative.h	6958;"	d
ENET_FTRL_TRUNC_FL_MASK	derivative.h	6956;"	d
ENET_FTRL_TRUNC_FL_SHIFT	derivative.h	6957;"	d
ENET_GALR	derivative.h	7084;"	d
ENET_GALR_GADDR2	derivative.h	6904;"	d
ENET_GALR_GADDR2_MASK	derivative.h	6902;"	d
ENET_GALR_GADDR2_SHIFT	derivative.h	6903;"	d
ENET_GALR_REG	derivative.h	6604;"	d
ENET_GAUR	derivative.h	7083;"	d
ENET_GAUR_GADDR1	derivative.h	6900;"	d
ENET_GAUR_GADDR1_MASK	derivative.h	6898;"	d
ENET_GAUR_GADDR1_SHIFT	derivative.h	6899;"	d
ENET_GAUR_REG	derivative.h	6603;"	d
ENET_IALR	derivative.h	7082;"	d
ENET_IALR_IADDR2	derivative.h	6896;"	d
ENET_IALR_IADDR2_MASK	derivative.h	6894;"	d
ENET_IALR_IADDR2_SHIFT	derivative.h	6895;"	d
ENET_IALR_REG	derivative.h	6602;"	d
ENET_IAUR	derivative.h	7081;"	d
ENET_IAUR_IADDR1	derivative.h	6892;"	d
ENET_IAUR_IADDR1_MASK	derivative.h	6890;"	d
ENET_IAUR_IADDR1_SHIFT	derivative.h	6891;"	d
ENET_IAUR_REG	derivative.h	6601;"	d
ENET_IEEE_R_ALIGN	derivative.h	7150;"	d
ENET_IEEE_R_ALIGN_REG	derivative.h	6670;"	d
ENET_IEEE_R_CRC	derivative.h	7149;"	d
ENET_IEEE_R_CRC_REG	derivative.h	6669;"	d
ENET_IEEE_R_DROP	derivative.h	7147;"	d
ENET_IEEE_R_FDXFC	derivative.h	7152;"	d
ENET_IEEE_R_FDXFC_REG	derivative.h	6672;"	d
ENET_IEEE_R_FRAME_OK	derivative.h	7148;"	d
ENET_IEEE_R_MACERR	derivative.h	7151;"	d
ENET_IEEE_R_MACERR_REG	derivative.h	6671;"	d
ENET_IEEE_R_OCTETS_OK	derivative.h	7153;"	d
ENET_IEEE_R_OCTETS_OK_REG	derivative.h	6673;"	d
ENET_IEEE_T_1COL	derivative.h	7120;"	d
ENET_IEEE_T_1COL_REG	derivative.h	6640;"	d
ENET_IEEE_T_CSERR	derivative.h	7126;"	d
ENET_IEEE_T_CSERR_REG	derivative.h	6646;"	d
ENET_IEEE_T_DEF	derivative.h	7122;"	d
ENET_IEEE_T_DEF_REG	derivative.h	6642;"	d
ENET_IEEE_T_DROP	derivative.h	7118;"	d
ENET_IEEE_T_DROP_REG	derivative.h	6638;"	d
ENET_IEEE_T_EXCOL	derivative.h	7124;"	d
ENET_IEEE_T_EXCOL_REG	derivative.h	6644;"	d
ENET_IEEE_T_FDXFC	derivative.h	7128;"	d
ENET_IEEE_T_FDXFC_REG	derivative.h	6648;"	d
ENET_IEEE_T_FRAME_OK	derivative.h	7119;"	d
ENET_IEEE_T_FRAME_OK_REG	derivative.h	6639;"	d
ENET_IEEE_T_LCOL	derivative.h	7123;"	d
ENET_IEEE_T_LCOL_REG	derivative.h	6643;"	d
ENET_IEEE_T_MACERR	derivative.h	7125;"	d
ENET_IEEE_T_MACERR_REG	derivative.h	6645;"	d
ENET_IEEE_T_MCOL	derivative.h	7121;"	d
ENET_IEEE_T_MCOL_REG	derivative.h	6641;"	d
ENET_IEEE_T_OCTETS_OK	derivative.h	7129;"	d
ENET_IEEE_T_OCTETS_OK_REG	derivative.h	6649;"	d
ENET_IEEE_T_SQE	derivative.h	7127;"	d
ENET_IEEE_T_SQE_REG	derivative.h	6647;"	d
ENET_MIBC	derivative.h	7075;"	d
ENET_MIBC_MIB_CLEAR_MASK	derivative.h	6817;"	d
ENET_MIBC_MIB_CLEAR_SHIFT	derivative.h	6818;"	d
ENET_MIBC_MIB_DIS_MASK	derivative.h	6821;"	d
ENET_MIBC_MIB_DIS_SHIFT	derivative.h	6822;"	d
ENET_MIBC_MIB_IDLE_MASK	derivative.h	6819;"	d
ENET_MIBC_MIB_IDLE_SHIFT	derivative.h	6820;"	d
ENET_MIBC_REG	derivative.h	6595;"	d
ENET_MMFR	derivative.h	7073;"	d
ENET_MMFR_DATA	derivative.h	6791;"	d
ENET_MMFR_DATA_MASK	derivative.h	6789;"	d
ENET_MMFR_DATA_SHIFT	derivative.h	6790;"	d
ENET_MMFR_OP	derivative.h	6803;"	d
ENET_MMFR_OP_MASK	derivative.h	6801;"	d
ENET_MMFR_OP_SHIFT	derivative.h	6802;"	d
ENET_MMFR_PA	derivative.h	6800;"	d
ENET_MMFR_PA_MASK	derivative.h	6798;"	d
ENET_MMFR_PA_SHIFT	derivative.h	6799;"	d
ENET_MMFR_RA	derivative.h	6797;"	d
ENET_MMFR_RA_MASK	derivative.h	6795;"	d
ENET_MMFR_RA_SHIFT	derivative.h	6796;"	d
ENET_MMFR_REG	derivative.h	6593;"	d
ENET_MMFR_ST	derivative.h	6806;"	d
ENET_MMFR_ST_MASK	derivative.h	6804;"	d
ENET_MMFR_ST_SHIFT	derivative.h	6805;"	d
ENET_MMFR_TA	derivative.h	6794;"	d
ENET_MMFR_TA_MASK	derivative.h	6792;"	d
ENET_MMFR_TA_SHIFT	derivative.h	6793;"	d
ENET_MRBR	derivative.h	7088;"	d
ENET_MRBR_REG	derivative.h	6608;"	d
ENET_MRBR_R_BUF_SIZE	derivative.h	6922;"	d
ENET_MRBR_R_BUF_SIZE_MASK	derivative.h	6920;"	d
ENET_MRBR_R_BUF_SIZE_SHIFT	derivative.h	6921;"	d
ENET_MSCR	derivative.h	7074;"	d
ENET_MSCR_DIS_PRE_MASK	derivative.h	6811;"	d
ENET_MSCR_DIS_PRE_SHIFT	derivative.h	6812;"	d
ENET_MSCR_HOLDTIME	derivative.h	6815;"	d
ENET_MSCR_HOLDTIME_MASK	derivative.h	6813;"	d
ENET_MSCR_HOLDTIME_SHIFT	derivative.h	6814;"	d
ENET_MSCR_MII_SPEED	derivative.h	6810;"	d
ENET_MSCR_MII_SPEED_MASK	derivative.h	6808;"	d
ENET_MSCR_MII_SPEED_SHIFT	derivative.h	6809;"	d
ENET_MSCR_REG	derivative.h	6594;"	d
ENET_MemMap	derivative.h	/^typedef struct ENET_MemMap {$/;"	s
ENET_MemMapPtr	derivative.h	/^} volatile *ENET_MemMapPtr;$/;"	t
ENET_OPD	derivative.h	7080;"	d
ENET_OPD_OPCODE	derivative.h	6888;"	d
ENET_OPD_OPCODE_MASK	derivative.h	6886;"	d
ENET_OPD_OPCODE_SHIFT	derivative.h	6887;"	d
ENET_OPD_PAUSE_DUR	derivative.h	6885;"	d
ENET_OPD_PAUSE_DUR_MASK	derivative.h	6883;"	d
ENET_OPD_PAUSE_DUR_SHIFT	derivative.h	6884;"	d
ENET_OPD_REG	derivative.h	6600;"	d
ENET_PALR	derivative.h	7078;"	d
ENET_PALR_PADDR1	derivative.h	6874;"	d
ENET_PALR_PADDR1_MASK	derivative.h	6872;"	d
ENET_PALR_PADDR1_SHIFT	derivative.h	6873;"	d
ENET_PALR_REG	derivative.h	6598;"	d
ENET_PAUR	derivative.h	7079;"	d
ENET_PAUR_PADDR2	derivative.h	6881;"	d
ENET_PAUR_PADDR2_MASK	derivative.h	6879;"	d
ENET_PAUR_PADDR2_SHIFT	derivative.h	6880;"	d
ENET_PAUR_REG	derivative.h	6599;"	d
ENET_PAUR_TYPE	derivative.h	6878;"	d
ENET_PAUR_TYPE_MASK	derivative.h	6876;"	d
ENET_PAUR_TYPE_SHIFT	derivative.h	6877;"	d
ENET_RACC	derivative.h	7099;"	d
ENET_RACC_IPDIS_MASK	derivative.h	6969;"	d
ENET_RACC_IPDIS_SHIFT	derivative.h	6970;"	d
ENET_RACC_LINEDIS_MASK	derivative.h	6973;"	d
ENET_RACC_LINEDIS_SHIFT	derivative.h	6974;"	d
ENET_RACC_PADREM_MASK	derivative.h	6967;"	d
ENET_RACC_PADREM_SHIFT	derivative.h	6968;"	d
ENET_RACC_PRODIS_MASK	derivative.h	6971;"	d
ENET_RACC_PRODIS_SHIFT	derivative.h	6972;"	d
ENET_RACC_REG	derivative.h	6619;"	d
ENET_RACC_SHIFT16_MASK	derivative.h	6975;"	d
ENET_RACC_SHIFT16_SHIFT	derivative.h	6976;"	d
ENET_RAEM	derivative.h	7091;"	d
ENET_RAEM_REG	derivative.h	6611;"	d
ENET_RAEM_RX_ALMOST_EMPTY	derivative.h	6934;"	d
ENET_RAEM_RX_ALMOST_EMPTY_MASK	derivative.h	6932;"	d
ENET_RAEM_RX_ALMOST_EMPTY_SHIFT	derivative.h	6933;"	d
ENET_RAFL	derivative.h	7092;"	d
ENET_RAFL_REG	derivative.h	6612;"	d
ENET_RAFL_RX_ALMOST_FULL	derivative.h	6938;"	d
ENET_RAFL_RX_ALMOST_FULL_MASK	derivative.h	6936;"	d
ENET_RAFL_RX_ALMOST_FULL_SHIFT	derivative.h	6937;"	d
ENET_RCR	derivative.h	7076;"	d
ENET_RCR_BC_REJ_MASK	derivative.h	6832;"	d
ENET_RCR_BC_REJ_SHIFT	derivative.h	6833;"	d
ENET_RCR_CFEN_MASK	derivative.h	6846;"	d
ENET_RCR_CFEN_SHIFT	derivative.h	6847;"	d
ENET_RCR_CRCFWD_MASK	derivative.h	6844;"	d
ENET_RCR_CRCFWD_SHIFT	derivative.h	6845;"	d
ENET_RCR_DRT_MASK	derivative.h	6826;"	d
ENET_RCR_DRT_SHIFT	derivative.h	6827;"	d
ENET_RCR_FCE_MASK	derivative.h	6834;"	d
ENET_RCR_FCE_SHIFT	derivative.h	6835;"	d
ENET_RCR_GRS_MASK	derivative.h	6853;"	d
ENET_RCR_GRS_SHIFT	derivative.h	6854;"	d
ENET_RCR_LOOP_MASK	derivative.h	6824;"	d
ENET_RCR_LOOP_SHIFT	derivative.h	6825;"	d
ENET_RCR_MAX_FL	derivative.h	6850;"	d
ENET_RCR_MAX_FL_MASK	derivative.h	6848;"	d
ENET_RCR_MAX_FL_SHIFT	derivative.h	6849;"	d
ENET_RCR_MII_MODE_MASK	derivative.h	6828;"	d
ENET_RCR_MII_MODE_SHIFT	derivative.h	6829;"	d
ENET_RCR_NLC_MASK	derivative.h	6851;"	d
ENET_RCR_NLC_SHIFT	derivative.h	6852;"	d
ENET_RCR_PADEN_MASK	derivative.h	6840;"	d
ENET_RCR_PADEN_SHIFT	derivative.h	6841;"	d
ENET_RCR_PAUFWD_MASK	derivative.h	6842;"	d
ENET_RCR_PAUFWD_SHIFT	derivative.h	6843;"	d
ENET_RCR_PROM_MASK	derivative.h	6830;"	d
ENET_RCR_PROM_SHIFT	derivative.h	6831;"	d
ENET_RCR_REG	derivative.h	6596;"	d
ENET_RCR_RMII_10T_MASK	derivative.h	6838;"	d
ENET_RCR_RMII_10T_SHIFT	derivative.h	6839;"	d
ENET_RCR_RMII_MODE_MASK	derivative.h	6836;"	d
ENET_RCR_RMII_MODE_SHIFT	derivative.h	6837;"	d
ENET_RDAR	derivative.h	7070;"	d
ENET_RDAR_RDAR_MASK	derivative.h	6766;"	d
ENET_RDAR_RDAR_SHIFT	derivative.h	6767;"	d
ENET_RDAR_REG	derivative.h	6590;"	d
ENET_RDSR	derivative.h	7086;"	d
ENET_RDSR_REG	derivative.h	6606;"	d
ENET_RDSR_R_DES_START	derivative.h	6914;"	d
ENET_RDSR_R_DES_START_MASK	derivative.h	6912;"	d
ENET_RDSR_R_DES_START_SHIFT	derivative.h	6913;"	d
ENET_RMON_R_BC_PKT	derivative.h	7131;"	d
ENET_RMON_R_BC_PKT_REG	derivative.h	6651;"	d
ENET_RMON_R_CRC_ALIGN	derivative.h	7133;"	d
ENET_RMON_R_CRC_ALIGN_REG	derivative.h	6653;"	d
ENET_RMON_R_DROP_REG	derivative.h	6667;"	d
ENET_RMON_R_FRAG	derivative.h	7136;"	d
ENET_RMON_R_FRAG_REG	derivative.h	6656;"	d
ENET_RMON_R_FRAME_OK_REG	derivative.h	6668;"	d
ENET_RMON_R_JAB	derivative.h	7137;"	d
ENET_RMON_R_JAB_REG	derivative.h	6657;"	d
ENET_RMON_R_MC_PKT	derivative.h	7132;"	d
ENET_RMON_R_MC_PKT_REG	derivative.h	6652;"	d
ENET_RMON_R_OCTETS	derivative.h	7146;"	d
ENET_RMON_R_OCTETS_REG	derivative.h	6666;"	d
ENET_RMON_R_OVERSIZE	derivative.h	7135;"	d
ENET_RMON_R_OVERSIZE_REG	derivative.h	6655;"	d
ENET_RMON_R_P1024TO2047	derivative.h	7144;"	d
ENET_RMON_R_P1024TO2047_REG	derivative.h	6664;"	d
ENET_RMON_R_P128TO255	derivative.h	7141;"	d
ENET_RMON_R_P128TO255_REG	derivative.h	6661;"	d
ENET_RMON_R_P256TO511	derivative.h	7142;"	d
ENET_RMON_R_P256TO511_REG	derivative.h	6662;"	d
ENET_RMON_R_P512TO1023	derivative.h	7143;"	d
ENET_RMON_R_P512TO1023_REG	derivative.h	6663;"	d
ENET_RMON_R_P64	derivative.h	7139;"	d
ENET_RMON_R_P64_REG	derivative.h	6659;"	d
ENET_RMON_R_P65TO127	derivative.h	7140;"	d
ENET_RMON_R_P65TO127_REG	derivative.h	6660;"	d
ENET_RMON_R_PACKETS	derivative.h	7130;"	d
ENET_RMON_R_PACKETS_REG	derivative.h	6650;"	d
ENET_RMON_R_P_GTE2048	derivative.h	7145;"	d
ENET_RMON_R_P_GTE2048_REG	derivative.h	6665;"	d
ENET_RMON_R_RESVD_0	derivative.h	7138;"	d
ENET_RMON_R_RESVD_0_REG	derivative.h	6658;"	d
ENET_RMON_R_UNDERSIZE	derivative.h	7134;"	d
ENET_RMON_R_UNDERSIZE_REG	derivative.h	6654;"	d
ENET_RMON_T_BC_PKT	derivative.h	7102;"	d
ENET_RMON_T_BC_PKT_REG	derivative.h	6622;"	d
ENET_RMON_T_COL	derivative.h	7109;"	d
ENET_RMON_T_COL_REG	derivative.h	6629;"	d
ENET_RMON_T_CRC_ALIGN	derivative.h	7104;"	d
ENET_RMON_T_CRC_ALIGN_REG	derivative.h	6624;"	d
ENET_RMON_T_DROP	derivative.h	7100;"	d
ENET_RMON_T_DROP_REG	derivative.h	6620;"	d
ENET_RMON_T_FRAG	derivative.h	7107;"	d
ENET_RMON_T_FRAG_REG	derivative.h	6627;"	d
ENET_RMON_T_JAB	derivative.h	7108;"	d
ENET_RMON_T_JAB_REG	derivative.h	6628;"	d
ENET_RMON_T_MC_PKT	derivative.h	7103;"	d
ENET_RMON_T_MC_PKT_REG	derivative.h	6623;"	d
ENET_RMON_T_OCTETS	derivative.h	7117;"	d
ENET_RMON_T_OCTETS_REG	derivative.h	6637;"	d
ENET_RMON_T_OVERSIZE	derivative.h	7106;"	d
ENET_RMON_T_OVERSIZE_REG	derivative.h	6626;"	d
ENET_RMON_T_P1024TO2047	derivative.h	7115;"	d
ENET_RMON_T_P1024TO2047_REG	derivative.h	6635;"	d
ENET_RMON_T_P128TO255	derivative.h	7112;"	d
ENET_RMON_T_P128TO255_REG	derivative.h	6632;"	d
ENET_RMON_T_P256TO511	derivative.h	7113;"	d
ENET_RMON_T_P256TO511_REG	derivative.h	6633;"	d
ENET_RMON_T_P512TO1023	derivative.h	7114;"	d
ENET_RMON_T_P512TO1023_REG	derivative.h	6634;"	d
ENET_RMON_T_P64	derivative.h	7110;"	d
ENET_RMON_T_P64_REG	derivative.h	6630;"	d
ENET_RMON_T_P65TO127	derivative.h	7111;"	d
ENET_RMON_T_P65TO127_REG	derivative.h	6631;"	d
ENET_RMON_T_PACKETS	derivative.h	7101;"	d
ENET_RMON_T_PACKETS_REG	derivative.h	6621;"	d
ENET_RMON_T_P_GTE2048	derivative.h	7116;"	d
ENET_RMON_T_P_GTE2048_REG	derivative.h	6636;"	d
ENET_RMON_T_UNDERSIZE	derivative.h	7105;"	d
ENET_RMON_T_UNDERSIZE_REG	derivative.h	6625;"	d
ENET_RSEM	derivative.h	7090;"	d
ENET_RSEM_REG	derivative.h	6610;"	d
ENET_RSEM_RX_SECTION_EMPTY	derivative.h	6930;"	d
ENET_RSEM_RX_SECTION_EMPTY_MASK	derivative.h	6928;"	d
ENET_RSEM_RX_SECTION_EMPTY_SHIFT	derivative.h	6929;"	d
ENET_RSFL	derivative.h	7089;"	d
ENET_RSFL_REG	derivative.h	6609;"	d
ENET_RSFL_RX_SECTION_FULL	derivative.h	6926;"	d
ENET_RSFL_RX_SECTION_FULL_MASK	derivative.h	6924;"	d
ENET_RSFL_RX_SECTION_FULL_SHIFT	derivative.h	6925;"	d
ENET_TACC	derivative.h	7098;"	d
ENET_TACC_IPCHK_MASK	derivative.h	6962;"	d
ENET_TACC_IPCHK_SHIFT	derivative.h	6963;"	d
ENET_TACC_PROCHK_MASK	derivative.h	6964;"	d
ENET_TACC_PROCHK_SHIFT	derivative.h	6965;"	d
ENET_TACC_REG	derivative.h	6618;"	d
ENET_TACC_SHIFT16_MASK	derivative.h	6960;"	d
ENET_TACC_SHIFT16_SHIFT	derivative.h	6961;"	d
ENET_TAEM	derivative.h	7094;"	d
ENET_TAEM_REG	derivative.h	6614;"	d
ENET_TAEM_TX_ALMOST_EMPTY	derivative.h	6946;"	d
ENET_TAEM_TX_ALMOST_EMPTY_MASK	derivative.h	6944;"	d
ENET_TAEM_TX_ALMOST_EMPTY_SHIFT	derivative.h	6945;"	d
ENET_TAFL	derivative.h	7095;"	d
ENET_TAFL_REG	derivative.h	6615;"	d
ENET_TAFL_TX_ALMOST_FULL	derivative.h	6950;"	d
ENET_TAFL_TX_ALMOST_FULL_MASK	derivative.h	6948;"	d
ENET_TAFL_TX_ALMOST_FULL_SHIFT	derivative.h	6949;"	d
ENET_TCCR	derivative.h	7173;"	d
ENET_TCCR0	derivative.h	7163;"	d
ENET_TCCR1	derivative.h	7165;"	d
ENET_TCCR2	derivative.h	7167;"	d
ENET_TCCR3	derivative.h	7169;"	d
ENET_TCCR_REG	derivative.h	6683;"	d
ENET_TCCR_TCC	derivative.h	7043;"	d
ENET_TCCR_TCC_MASK	derivative.h	7041;"	d
ENET_TCCR_TCC_SHIFT	derivative.h	7042;"	d
ENET_TCR	derivative.h	7077;"	d
ENET_TCR_ADDINS_MASK	derivative.h	6867;"	d
ENET_TCR_ADDINS_SHIFT	derivative.h	6868;"	d
ENET_TCR_ADDSEL	derivative.h	6866;"	d
ENET_TCR_ADDSEL_MASK	derivative.h	6864;"	d
ENET_TCR_ADDSEL_SHIFT	derivative.h	6865;"	d
ENET_TCR_CRCFWD_MASK	derivative.h	6869;"	d
ENET_TCR_CRCFWD_SHIFT	derivative.h	6870;"	d
ENET_TCR_FDEN_MASK	derivative.h	6858;"	d
ENET_TCR_FDEN_SHIFT	derivative.h	6859;"	d
ENET_TCR_GTS_MASK	derivative.h	6856;"	d
ENET_TCR_GTS_SHIFT	derivative.h	6857;"	d
ENET_TCR_REG	derivative.h	6597;"	d
ENET_TCR_RFC_PAUSE_MASK	derivative.h	6862;"	d
ENET_TCR_RFC_PAUSE_SHIFT	derivative.h	6863;"	d
ENET_TCR_TFC_PAUSE_MASK	derivative.h	6860;"	d
ENET_TCR_TFC_PAUSE_SHIFT	derivative.h	6861;"	d
ENET_TCSR	derivative.h	7172;"	d
ENET_TCSR0	derivative.h	7162;"	d
ENET_TCSR1	derivative.h	7164;"	d
ENET_TCSR2	derivative.h	7166;"	d
ENET_TCSR3	derivative.h	7168;"	d
ENET_TCSR_REG	derivative.h	6682;"	d
ENET_TCSR_TDRE_MASK	derivative.h	7031;"	d
ENET_TCSR_TDRE_SHIFT	derivative.h	7032;"	d
ENET_TCSR_TF_MASK	derivative.h	7038;"	d
ENET_TCSR_TF_SHIFT	derivative.h	7039;"	d
ENET_TCSR_TIE_MASK	derivative.h	7036;"	d
ENET_TCSR_TIE_SHIFT	derivative.h	7037;"	d
ENET_TCSR_TMODE	derivative.h	7035;"	d
ENET_TCSR_TMODE_MASK	derivative.h	7033;"	d
ENET_TCSR_TMODE_SHIFT	derivative.h	7034;"	d
ENET_TDAR	derivative.h	7071;"	d
ENET_TDAR_REG	derivative.h	6591;"	d
ENET_TDAR_TDAR_MASK	derivative.h	6769;"	d
ENET_TDAR_TDAR_SHIFT	derivative.h	6770;"	d
ENET_TDSR	derivative.h	7087;"	d
ENET_TDSR_REG	derivative.h	6607;"	d
ENET_TDSR_X_DES_START	derivative.h	6918;"	d
ENET_TDSR_X_DES_START_MASK	derivative.h	6916;"	d
ENET_TDSR_X_DES_START_SHIFT	derivative.h	6917;"	d
ENET_TFWR	derivative.h	7085;"	d
ENET_TFWR_REG	derivative.h	6605;"	d
ENET_TFWR_STRFWD_MASK	derivative.h	6909;"	d
ENET_TFWR_STRFWD_SHIFT	derivative.h	6910;"	d
ENET_TFWR_TFWR	derivative.h	6908;"	d
ENET_TFWR_TFWR_MASK	derivative.h	6906;"	d
ENET_TFWR_TFWR_SHIFT	derivative.h	6907;"	d
ENET_TGSR	derivative.h	7161;"	d
ENET_TGSR_REG	derivative.h	6681;"	d
ENET_TGSR_TF0_MASK	derivative.h	7022;"	d
ENET_TGSR_TF0_SHIFT	derivative.h	7023;"	d
ENET_TGSR_TF1_MASK	derivative.h	7024;"	d
ENET_TGSR_TF1_SHIFT	derivative.h	7025;"	d
ENET_TGSR_TF2_MASK	derivative.h	7026;"	d
ENET_TGSR_TF2_SHIFT	derivative.h	7027;"	d
ENET_TGSR_TF3_MASK	derivative.h	7028;"	d
ENET_TGSR_TF3_SHIFT	derivative.h	7029;"	d
ENET_TIPG	derivative.h	7096;"	d
ENET_TIPG_IPG	derivative.h	6954;"	d
ENET_TIPG_IPG_MASK	derivative.h	6952;"	d
ENET_TIPG_IPG_SHIFT	derivative.h	6953;"	d
ENET_TIPG_REG	derivative.h	6616;"	d
ENET_TSEM	derivative.h	7093;"	d
ENET_TSEM_REG	derivative.h	6613;"	d
ENET_TSEM_TX_SECTION_EMPTY	derivative.h	6942;"	d
ENET_TSEM_TX_SECTION_EMPTY_MASK	derivative.h	6940;"	d
ENET_TSEM_TX_SECTION_EMPTY_SHIFT	derivative.h	6941;"	d
EPCOMPLETE	derivative.h	/^  uint32_t EPCOMPLETE;                             \/**< Endpoint Complete Register, offset: 0x1BC *\/$/;"	m	struct:USBHS_MemMap
EPCR	derivative.h	/^  uint32_t EPCR[3];                                \/**< Endpoint Control Register n, array offset: 0x1C4, array step: 0x4 *\/$/;"	m	struct:USBHS_MemMap
EPCR0	derivative.h	/^  uint32_t EPCR0;                                  \/**< Endpoint Control Register 0, offset: 0x1C0 *\/$/;"	m	struct:USBHS_MemMap
EPFLUSH	derivative.h	/^  uint32_t EPFLUSH;                                \/**< Endpoint Flush Register, offset: 0x1B4 *\/$/;"	m	struct:USBHS_MemMap
EPLISTADDR	derivative.h	/^    uint32_t EPLISTADDR;                             \/**< Endpoint List Address Register, offset: 0x158 *\/$/;"	m	union:USBHS_MemMap::__anon34
EPPRIME	derivative.h	/^  uint32_t EPPRIME;                                \/**< Endpoint Initialization Register, offset: 0x1B0 *\/$/;"	m	struct:USBHS_MemMap
EPSETUPSR	derivative.h	/^  uint32_t EPSETUPSR;                              \/**< Endpoint Setup Status Register, offset: 0x1AC *\/$/;"	m	struct:USBHS_MemMap
EPSR	derivative.h	/^  uint32_t EPSR;                                   \/**< Endpoint Status Register, offset: 0x1B8 *\/$/;"	m	struct:USBHS_MemMap
ER	derivative.h	/^  uint32_t ER;                                     \/**< RNGA Entropy Register, offset: 0x8 *\/$/;"	m	struct:RNG_MemMap
ERQ	derivative.h	/^  uint32_t ERQ;                                    \/**< Enable Request Register, offset: 0xC *\/$/;"	m	struct:DMA_MemMap
ERR	derivative.h	/^  uint32_t ERR;                                    \/**< Error Register, offset: 0x2C *\/$/;"	m	struct:DMA_MemMap
ERREN	derivative.h	/^  uint8_t ERREN;                                   \/**< Error Interrupt Enable Register, offset: 0x8C *\/$/;"	m	struct:USB_MemMap
ERRSTAT	derivative.h	/^  uint8_t ERRSTAT;                                 \/**< Error Interrupt Status Register, offset: 0x88 *\/$/;"	m	struct:USB_MemMap
ES	derivative.h	/^  uint32_t ES;                                     \/**< Error Status Register, offset: 0x4 *\/$/;"	m	struct:DMA_MemMap
ESR1	derivative.h	/^  uint32_t ESR1;                                   \/**< Error and Status 1 Register, offset: 0x20 *\/$/;"	m	struct:CAN_MemMap
ESR2	derivative.h	/^  uint32_t ESR2;                                   \/**< Error and Status 2 Register, offset: 0x38 *\/$/;"	m	struct:CAN_MemMap
ET7816	derivative.h	/^  uint8_t ET7816;                                  \/**< UART 7816 Error Threshold Register, offset: 0x1E *\/$/;"	m	struct:UART_MemMap
ETBCC	derivative.h	/^  uint32_t ETBCC;                                  \/**< ETB Counter Control register, offset: 0x14 *\/$/;"	m	struct:MCM_MemMap
ETBCNT	derivative.h	/^  uint32_t ETBCNT;                                 \/**< ETB Counter Value register, offset: 0x1C *\/$/;"	m	struct:MCM_MemMap
ETBRL	derivative.h	/^  uint32_t ETBRL;                                  \/**< ETB Reload register, offset: 0x18 *\/$/;"	m	struct:MCM_MemMap
ETB_AUTHSTATUS	derivative.h	7352;"	d
ETB_AUTHSTATUS_REG	derivative.h	7276;"	d
ETB_BASE_PTR	derivative.h	7314;"	d
ETB_BASE_PTRS	derivative.h	7316;"	d
ETB_CIDR0	derivative.h	7363;"	d
ETB_CIDR0_REG	derivative.h	7287;"	d
ETB_CIDR1	derivative.h	7364;"	d
ETB_CIDR1_REG	derivative.h	7288;"	d
ETB_CIDR2	derivative.h	7365;"	d
ETB_CIDR2_REG	derivative.h	7289;"	d
ETB_CIDR3	derivative.h	7366;"	d
ETB_CIDR3_REG	derivative.h	7290;"	d
ETB_CLAIMCLR	derivative.h	7349;"	d
ETB_CLAIMCLR_REG	derivative.h	7273;"	d
ETB_CLAIMSET	derivative.h	7348;"	d
ETB_CLAIMSET_REG	derivative.h	7272;"	d
ETB_CTL	derivative.h	7336;"	d
ETB_CTL_REG	derivative.h	7260;"	d
ETB_DEVID	derivative.h	7353;"	d
ETB_DEVID_REG	derivative.h	7277;"	d
ETB_DEVTYPE	derivative.h	7354;"	d
ETB_DEVTYPE_REG	derivative.h	7278;"	d
ETB_FFCR	derivative.h	7339;"	d
ETB_FFCR_REG	derivative.h	7263;"	d
ETB_FFSR	derivative.h	7338;"	d
ETB_FFSR_REG	derivative.h	7262;"	d
ETB_ITATBCTR0	derivative.h	7346;"	d
ETB_ITATBCTR0_REG	derivative.h	7270;"	d
ETB_ITATBCTR1	derivative.h	7345;"	d
ETB_ITATBCTR1_REG	derivative.h	7269;"	d
ETB_ITATBCTR2	derivative.h	7344;"	d
ETB_ITATBCTR2_REG	derivative.h	7268;"	d
ETB_ITATBDATA0	derivative.h	7343;"	d
ETB_ITATBDATA0_REG	derivative.h	7267;"	d
ETB_ITCTRL	derivative.h	7347;"	d
ETB_ITCTRL_REG	derivative.h	7271;"	d
ETB_ITMISCOP0	derivative.h	7340;"	d
ETB_ITMISCOP0_REG	derivative.h	7264;"	d
ETB_ITTRFLIN	derivative.h	7342;"	d
ETB_ITTRFLINACK	derivative.h	7341;"	d
ETB_ITTRFLINACK_REG	derivative.h	7265;"	d
ETB_ITTRFLIN_REG	derivative.h	7266;"	d
ETB_LAR	derivative.h	7350;"	d
ETB_LAR_REG	derivative.h	7274;"	d
ETB_LSR	derivative.h	7351;"	d
ETB_LSR_REG	derivative.h	7275;"	d
ETB_MemMap	derivative.h	/^typedef struct ETB_MemMap {$/;"	s
ETB_MemMapPtr	derivative.h	/^} volatile *ETB_MemMapPtr;$/;"	t
ETB_PIDR0	derivative.h	7359;"	d
ETB_PIDR0_REG	derivative.h	7283;"	d
ETB_PIDR1	derivative.h	7360;"	d
ETB_PIDR1_REG	derivative.h	7284;"	d
ETB_PIDR2	derivative.h	7361;"	d
ETB_PIDR2_REG	derivative.h	7285;"	d
ETB_PIDR3	derivative.h	7362;"	d
ETB_PIDR3_REG	derivative.h	7286;"	d
ETB_PIDR4	derivative.h	7355;"	d
ETB_PIDR4_REG	derivative.h	7279;"	d
ETB_PIDR5	derivative.h	7356;"	d
ETB_PIDR5_REG	derivative.h	7280;"	d
ETB_PIDR6	derivative.h	7357;"	d
ETB_PIDR6_REG	derivative.h	7281;"	d
ETB_PIDR7	derivative.h	7358;"	d
ETB_PIDR7_REG	derivative.h	7282;"	d
ETB_RDP	derivative.h	7330;"	d
ETB_RDP_REG	derivative.h	7254;"	d
ETB_RRD	derivative.h	7332;"	d
ETB_RRD_REG	derivative.h	7256;"	d
ETB_RRP	derivative.h	7333;"	d
ETB_RRP_REG	derivative.h	7257;"	d
ETB_RWD	derivative.h	7337;"	d
ETB_RWD_REG	derivative.h	7261;"	d
ETB_RWP	derivative.h	7334;"	d
ETB_RWP_REG	derivative.h	7258;"	d
ETB_STS	derivative.h	7331;"	d
ETB_STS_REG	derivative.h	7255;"	d
ETB_TRG	derivative.h	7335;"	d
ETB_TRG_REG	derivative.h	7259;"	d
ETF_AUTHSTATUS	derivative.h	7509;"	d
ETF_AUTHSTATUS_REG	derivative.h	7444;"	d
ETF_BASE_PTR	derivative.h	7482;"	d
ETF_BASE_PTRS	derivative.h	7484;"	d
ETF_CIDR0	derivative.h	7520;"	d
ETF_CIDR0_REG	derivative.h	7455;"	d
ETF_CIDR1	derivative.h	7521;"	d
ETF_CIDR1_REG	derivative.h	7456;"	d
ETF_CIDR2	derivative.h	7522;"	d
ETF_CIDR2_REG	derivative.h	7457;"	d
ETF_CIDR3	derivative.h	7523;"	d
ETF_CIDR3_REG	derivative.h	7458;"	d
ETF_CLAIMCLR	derivative.h	7506;"	d
ETF_CLAIMCLR_REG	derivative.h	7441;"	d
ETF_CLAIMSET	derivative.h	7505;"	d
ETF_CLAIMSET_REG	derivative.h	7440;"	d
ETF_DEVID	derivative.h	7510;"	d
ETF_DEVID_REG	derivative.h	7445;"	d
ETF_DEVTYPE	derivative.h	7511;"	d
ETF_DEVTYPE_REG	derivative.h	7446;"	d
ETF_FCR	derivative.h	7498;"	d
ETF_FCR_REG	derivative.h	7433;"	d
ETF_ITATBCTR0	derivative.h	7503;"	d
ETF_ITATBCTR0_REG	derivative.h	7438;"	d
ETF_ITATBCTR1	derivative.h	7502;"	d
ETF_ITATBCTR1_REG	derivative.h	7437;"	d
ETF_ITATBCTR2	derivative.h	7501;"	d
ETF_ITATBCTR2_REG	derivative.h	7436;"	d
ETF_ITATBDATA0	derivative.h	7500;"	d
ETF_ITATBDATA0_REG	derivative.h	7435;"	d
ETF_ITCTRL	derivative.h	7504;"	d
ETF_ITCTRL_REG	derivative.h	7439;"	d
ETF_LAR	derivative.h	7507;"	d
ETF_LAR_REG	derivative.h	7442;"	d
ETF_LSR	derivative.h	7508;"	d
ETF_LSR_REG	derivative.h	7443;"	d
ETF_MemMap	derivative.h	/^typedef struct ETF_MemMap {$/;"	s
ETF_MemMapPtr	derivative.h	/^} volatile *ETF_MemMapPtr;$/;"	t
ETF_PCR	derivative.h	7499;"	d
ETF_PCR_REG	derivative.h	7434;"	d
ETF_PIDR0	derivative.h	7516;"	d
ETF_PIDR0_REG	derivative.h	7451;"	d
ETF_PIDR1	derivative.h	7517;"	d
ETF_PIDR1_REG	derivative.h	7452;"	d
ETF_PIDR2	derivative.h	7518;"	d
ETF_PIDR2_REG	derivative.h	7453;"	d
ETF_PIDR3	derivative.h	7519;"	d
ETF_PIDR3_REG	derivative.h	7454;"	d
ETF_PIDR4	derivative.h	7512;"	d
ETF_PIDR4_REG	derivative.h	7447;"	d
ETF_PIDR5	derivative.h	7513;"	d
ETF_PIDR5_REG	derivative.h	7448;"	d
ETF_PIDR6	derivative.h	7514;"	d
ETF_PIDR6_REG	derivative.h	7449;"	d
ETF_PIDR7	derivative.h	7515;"	d
ETF_PIDR7_REG	derivative.h	7450;"	d
ETMAUTHSTATUS	derivative.h	7721;"	d
ETMCCER	derivative.h	7706;"	d
ETMCCR	derivative.h	7696;"	d
ETMCIDR0	derivative.h	7731;"	d
ETMCIDR1	derivative.h	7732;"	d
ETMCIDR2	derivative.h	7733;"	d
ETMCIDR3	derivative.h	7734;"	d
ETMCLAIMCLR	derivative.h	7718;"	d
ETMCLAIMSET	derivative.h	7717;"	d
ETMCNTRLDVR1	derivative.h	7703;"	d
ETMCR	derivative.h	7695;"	d
ETMDEVTYPE	derivative.h	7722;"	d
ETMEEVR	derivative.h	7700;"	d
ETMFFLR	derivative.h	7702;"	d
ETMIDR	derivative.h	7705;"	d
ETMIDR2	derivative.h	7710;"	d
ETMITCTRL	derivative.h	7716;"	d
ETMLAR	derivative.h	7719;"	d
ETMLSR	derivative.h	7720;"	d
ETMPDSR	derivative.h	7711;"	d
ETMPIDR0	derivative.h	7727;"	d
ETMPIDR1	derivative.h	7728;"	d
ETMPIDR2	derivative.h	7729;"	d
ETMPIDR3	derivative.h	7730;"	d
ETMPIDR4	derivative.h	7723;"	d
ETMPIDR5	derivative.h	7724;"	d
ETMPIDR6	derivative.h	7725;"	d
ETMPIDR7	derivative.h	7726;"	d
ETMSCR	derivative.h	7699;"	d
ETMSR	derivative.h	7698;"	d
ETMSYNCFR	derivative.h	7704;"	d
ETMTECR1	derivative.h	7701;"	d
ETMTESSEICR	derivative.h	7707;"	d
ETMTRACEIDR	derivative.h	7709;"	d
ETMTRIGGER	derivative.h	7697;"	d
ETMTSEVR	derivative.h	7708;"	d
ETM_AUTHSTATUS_REG	derivative.h	7642;"	d
ETM_BASE_PTR	derivative.h	7679;"	d
ETM_BASE_PTRS	derivative.h	7681;"	d
ETM_CCER_REG	derivative.h	7627;"	d
ETM_CCR_REG	derivative.h	7617;"	d
ETM_CIDR0_REG	derivative.h	7652;"	d
ETM_CIDR1_REG	derivative.h	7653;"	d
ETM_CIDR2_REG	derivative.h	7654;"	d
ETM_CIDR3_REG	derivative.h	7655;"	d
ETM_CLAIMCLR_REG	derivative.h	7639;"	d
ETM_CLAIMSET_REG	derivative.h	7638;"	d
ETM_CNTRLDVR1_REG	derivative.h	7624;"	d
ETM_CR_REG	derivative.h	7616;"	d
ETM_DEVTYPE_REG	derivative.h	7643;"	d
ETM_EEVR_REG	derivative.h	7621;"	d
ETM_FFLR_REG	derivative.h	7623;"	d
ETM_IDR2_REG	derivative.h	7631;"	d
ETM_IDR_REG	derivative.h	7626;"	d
ETM_ITATBCTR0	derivative.h	7715;"	d
ETM_ITATBCTR0_REG	derivative.h	7636;"	d
ETM_ITATBCTR2	derivative.h	7714;"	d
ETM_ITATBCTR2_REG	derivative.h	7635;"	d
ETM_ITCTRL_REG	derivative.h	7637;"	d
ETM_ITMISCIN	derivative.h	7712;"	d
ETM_ITMISCIN_REG	derivative.h	7633;"	d
ETM_ITTRIGOUT	derivative.h	7713;"	d
ETM_ITTRIGOUT_REG	derivative.h	7634;"	d
ETM_LAR_REG	derivative.h	7640;"	d
ETM_LSR_REG	derivative.h	7641;"	d
ETM_MemMap	derivative.h	/^typedef struct ETM_MemMap {$/;"	s
ETM_MemMapPtr	derivative.h	/^} volatile *ETM_MemMapPtr;$/;"	t
ETM_PDSR_REG	derivative.h	7632;"	d
ETM_PIDR0_REG	derivative.h	7648;"	d
ETM_PIDR1_REG	derivative.h	7649;"	d
ETM_PIDR2_REG	derivative.h	7650;"	d
ETM_PIDR3_REG	derivative.h	7651;"	d
ETM_PIDR4_REG	derivative.h	7644;"	d
ETM_PIDR5_REG	derivative.h	7645;"	d
ETM_PIDR6_REG	derivative.h	7646;"	d
ETM_PIDR7_REG	derivative.h	7647;"	d
ETM_SCR_REG	derivative.h	7620;"	d
ETM_SR_REG	derivative.h	7619;"	d
ETM_SYNCFR_REG	derivative.h	7625;"	d
ETM_TECR1_REG	derivative.h	7622;"	d
ETM_TESSEICR_REG	derivative.h	7628;"	d
ETM_TRACEIDR_REG	derivative.h	7630;"	d
ETM_TRIGGER_REG	derivative.h	7618;"	d
ETM_TSEVR_REG	derivative.h	7629;"	d
EWM_BASE_PTR	derivative.h	7822;"	d
EWM_BASE_PTRS	derivative.h	7824;"	d
EWM_CMPH	derivative.h	7841;"	d
EWM_CMPH_COMPAREH	derivative.h	7813;"	d
EWM_CMPH_COMPAREH_MASK	derivative.h	7811;"	d
EWM_CMPH_COMPAREH_SHIFT	derivative.h	7812;"	d
EWM_CMPH_REG	derivative.h	7777;"	d
EWM_CMPL	derivative.h	7840;"	d
EWM_CMPL_COMPAREL	derivative.h	7809;"	d
EWM_CMPL_COMPAREL_MASK	derivative.h	7807;"	d
EWM_CMPL_COMPAREL_SHIFT	derivative.h	7808;"	d
EWM_CMPL_REG	derivative.h	7776;"	d
EWM_CTRL	derivative.h	7838;"	d
EWM_CTRL_ASSIN_MASK	derivative.h	7796;"	d
EWM_CTRL_ASSIN_SHIFT	derivative.h	7797;"	d
EWM_CTRL_EWMEN_MASK	derivative.h	7794;"	d
EWM_CTRL_EWMEN_SHIFT	derivative.h	7795;"	d
EWM_CTRL_INEN_MASK	derivative.h	7798;"	d
EWM_CTRL_INEN_SHIFT	derivative.h	7799;"	d
EWM_CTRL_INTEN_MASK	derivative.h	7800;"	d
EWM_CTRL_INTEN_SHIFT	derivative.h	7801;"	d
EWM_CTRL_REG	derivative.h	7774;"	d
EWM_MemMap	derivative.h	/^typedef struct EWM_MemMap {$/;"	s
EWM_MemMapPtr	derivative.h	/^} volatile *EWM_MemMapPtr;$/;"	t
EWM_SERV	derivative.h	7839;"	d
EWM_SERV_REG	derivative.h	7775;"	d
EWM_SERV_SERVICE	derivative.h	7805;"	d
EWM_SERV_SERVICE_MASK	derivative.h	7803;"	d
EWM_SERV_SERVICE_SHIFT	derivative.h	7804;"	d
EXCCNT	derivative.h	/^  uint32_t EXCCNT;                                 \/**< Exception Overhead Count Register, offset: 0xC *\/$/;"	m	struct:DWT_MemMap
EXTTRIG	derivative.h	/^  uint32_t EXTTRIG;                                \/**< FTM External Trigger, offset: 0x6C *\/$/;"	m	struct:FTM_MemMap
Electrode_E1_EN_MASK	capacitivepadsdriver.c	72;"	d	file:
Electrode_E2_EN_MASK	capacitivepadsdriver.c	74;"	d	file:
Electrode_E3_EN_MASK	capacitivepadsdriver.c	76;"	d	file:
Electrode_E4_EN_MASK	capacitivepadsdriver.c	78;"	d	file:
F	derivative.h	/^  uint8_t F;                                       \/**< I2C Frequency Divider register, offset: 0x1 *\/$/;"	m	struct:I2C_MemMap
F1	derivative.h	/^  uint8_t F1;                                      \/**< LLWU Flag 1 Register, offset: 0x5 *\/$/;"	m	struct:LLWU_MemMap
F2	derivative.h	/^  uint8_t F2;                                      \/**< LLWU Flag 2 Register, offset: 0x6 *\/$/;"	m	struct:LLWU_MemMap
F3	derivative.h	/^  uint8_t F3;                                      \/**< LLWU Flag 3 Register, offset: 0x7 *\/$/;"	m	struct:LLWU_MemMap
FADR	derivative.h	/^  uint32_t FADR;                                   \/**< Fault address register, offset: 0x20 *\/$/;"	m	struct:MCM_MemMap
FALSE	potentiometerdriver.h	6;"	d
FALSE	thermistordriver.h	5;"	d
FATR	derivative.h	/^  uint32_t FATR;                                   \/**< Fault attributes register, offset: 0x24 *\/$/;"	m	struct:MCM_MemMap
FB_BASE_PTR	derivative.h	7972;"	d
FB_BASE_PTRS	derivative.h	7974;"	d
FB_CSAR	derivative.h	8009;"	d
FB_CSAR0	derivative.h	7988;"	d
FB_CSAR1	derivative.h	7991;"	d
FB_CSAR2	derivative.h	7994;"	d
FB_CSAR3	derivative.h	7997;"	d
FB_CSAR4	derivative.h	8000;"	d
FB_CSAR5	derivative.h	8003;"	d
FB_CSAR_BA	derivative.h	7906;"	d
FB_CSAR_BA_MASK	derivative.h	7904;"	d
FB_CSAR_BA_SHIFT	derivative.h	7905;"	d
FB_CSAR_REG	derivative.h	7884;"	d
FB_CSCR	derivative.h	8011;"	d
FB_CSCR0	derivative.h	7990;"	d
FB_CSCR1	derivative.h	7993;"	d
FB_CSCR2	derivative.h	7996;"	d
FB_CSCR3	derivative.h	7999;"	d
FB_CSCR4	derivative.h	8002;"	d
FB_CSCR5	derivative.h	8005;"	d
FB_CSCR_AA_MASK	derivative.h	7925;"	d
FB_CSCR_AA_SHIFT	derivative.h	7926;"	d
FB_CSCR_ASET	derivative.h	7940;"	d
FB_CSCR_ASET_MASK	derivative.h	7938;"	d
FB_CSCR_ASET_SHIFT	derivative.h	7939;"	d
FB_CSCR_BEM_MASK	derivative.h	7920;"	d
FB_CSCR_BEM_SHIFT	derivative.h	7921;"	d
FB_CSCR_BLS_MASK	derivative.h	7927;"	d
FB_CSCR_BLS_SHIFT	derivative.h	7928;"	d
FB_CSCR_BSTR_MASK	derivative.h	7918;"	d
FB_CSCR_BSTR_SHIFT	derivative.h	7919;"	d
FB_CSCR_BSTW_MASK	derivative.h	7916;"	d
FB_CSCR_BSTW_SHIFT	derivative.h	7917;"	d
FB_CSCR_EXTS_MASK	derivative.h	7941;"	d
FB_CSCR_EXTS_SHIFT	derivative.h	7942;"	d
FB_CSCR_PS	derivative.h	7924;"	d
FB_CSCR_PS_MASK	derivative.h	7922;"	d
FB_CSCR_PS_SHIFT	derivative.h	7923;"	d
FB_CSCR_RDAH	derivative.h	7937;"	d
FB_CSCR_RDAH_MASK	derivative.h	7935;"	d
FB_CSCR_RDAH_SHIFT	derivative.h	7936;"	d
FB_CSCR_REG	derivative.h	7886;"	d
FB_CSCR_SWS	derivative.h	7947;"	d
FB_CSCR_SWSEN_MASK	derivative.h	7943;"	d
FB_CSCR_SWSEN_SHIFT	derivative.h	7944;"	d
FB_CSCR_SWS_MASK	derivative.h	7945;"	d
FB_CSCR_SWS_SHIFT	derivative.h	7946;"	d
FB_CSCR_WRAH	derivative.h	7934;"	d
FB_CSCR_WRAH_MASK	derivative.h	7932;"	d
FB_CSCR_WRAH_SHIFT	derivative.h	7933;"	d
FB_CSCR_WS	derivative.h	7931;"	d
FB_CSCR_WS_MASK	derivative.h	7929;"	d
FB_CSCR_WS_SHIFT	derivative.h	7930;"	d
FB_CSMR	derivative.h	8010;"	d
FB_CSMR0	derivative.h	7989;"	d
FB_CSMR1	derivative.h	7992;"	d
FB_CSMR2	derivative.h	7995;"	d
FB_CSMR3	derivative.h	7998;"	d
FB_CSMR4	derivative.h	8001;"	d
FB_CSMR5	derivative.h	8004;"	d
FB_CSMR_BAM	derivative.h	7914;"	d
FB_CSMR_BAM_MASK	derivative.h	7912;"	d
FB_CSMR_BAM_SHIFT	derivative.h	7913;"	d
FB_CSMR_REG	derivative.h	7885;"	d
FB_CSMR_V_MASK	derivative.h	7908;"	d
FB_CSMR_V_SHIFT	derivative.h	7909;"	d
FB_CSMR_WP_MASK	derivative.h	7910;"	d
FB_CSMR_WP_SHIFT	derivative.h	7911;"	d
FB_CSPMCR	derivative.h	8006;"	d
FB_CSPMCR_GROUP1	derivative.h	7963;"	d
FB_CSPMCR_GROUP1_MASK	derivative.h	7961;"	d
FB_CSPMCR_GROUP1_SHIFT	derivative.h	7962;"	d
FB_CSPMCR_GROUP2	derivative.h	7960;"	d
FB_CSPMCR_GROUP2_MASK	derivative.h	7958;"	d
FB_CSPMCR_GROUP2_SHIFT	derivative.h	7959;"	d
FB_CSPMCR_GROUP3	derivative.h	7957;"	d
FB_CSPMCR_GROUP3_MASK	derivative.h	7955;"	d
FB_CSPMCR_GROUP3_SHIFT	derivative.h	7956;"	d
FB_CSPMCR_GROUP4	derivative.h	7954;"	d
FB_CSPMCR_GROUP4_MASK	derivative.h	7952;"	d
FB_CSPMCR_GROUP4_SHIFT	derivative.h	7953;"	d
FB_CSPMCR_GROUP5	derivative.h	7951;"	d
FB_CSPMCR_GROUP5_MASK	derivative.h	7949;"	d
FB_CSPMCR_GROUP5_SHIFT	derivative.h	7950;"	d
FB_CSPMCR_REG	derivative.h	7887;"	d
FB_MemMap	derivative.h	/^typedef struct FB_MemMap {$/;"	s
FB_MemMapPtr	derivative.h	/^} volatile *FB_MemMapPtr;$/;"	t
FCCOB0	derivative.h	/^  uint8_t FCCOB0;                                  \/**< Flash Common Command Object Registers, offset: 0x7 *\/$/;"	m	struct:FTFE_MemMap
FCCOB1	derivative.h	/^  uint8_t FCCOB1;                                  \/**< Flash Common Command Object Registers, offset: 0x6 *\/$/;"	m	struct:FTFE_MemMap
FCCOB2	derivative.h	/^  uint8_t FCCOB2;                                  \/**< Flash Common Command Object Registers, offset: 0x5 *\/$/;"	m	struct:FTFE_MemMap
FCCOB3	derivative.h	/^  uint8_t FCCOB3;                                  \/**< Flash Common Command Object Registers, offset: 0x4 *\/$/;"	m	struct:FTFE_MemMap
FCCOB4	derivative.h	/^  uint8_t FCCOB4;                                  \/**< Flash Common Command Object Registers, offset: 0xB *\/$/;"	m	struct:FTFE_MemMap
FCCOB5	derivative.h	/^  uint8_t FCCOB5;                                  \/**< Flash Common Command Object Registers, offset: 0xA *\/$/;"	m	struct:FTFE_MemMap
FCCOB6	derivative.h	/^  uint8_t FCCOB6;                                  \/**< Flash Common Command Object Registers, offset: 0x9 *\/$/;"	m	struct:FTFE_MemMap
FCCOB7	derivative.h	/^  uint8_t FCCOB7;                                  \/**< Flash Common Command Object Registers, offset: 0x8 *\/$/;"	m	struct:FTFE_MemMap
FCCOB8	derivative.h	/^  uint8_t FCCOB8;                                  \/**< Flash Common Command Object Registers, offset: 0xF *\/$/;"	m	struct:FTFE_MemMap
FCCOB9	derivative.h	/^  uint8_t FCCOB9;                                  \/**< Flash Common Command Object Registers, offset: 0xE *\/$/;"	m	struct:FTFE_MemMap
FCCOBA	derivative.h	/^  uint8_t FCCOBA;                                  \/**< Flash Common Command Object Registers, offset: 0xD *\/$/;"	m	struct:FTFE_MemMap
FCCOBB	derivative.h	/^  uint8_t FCCOBB;                                  \/**< Flash Common Command Object Registers, offset: 0xC *\/$/;"	m	struct:FTFE_MemMap
FCFG1	derivative.h	/^  uint32_t FCFG1;                                  \/**< Flash Configuration Register 1, offset: 0x104C *\/$/;"	m	struct:SIM_MemMap
FCFG2	derivative.h	/^  uint32_t FCFG2;                                  \/**< Flash Configuration Register 2, offset: 0x1050 *\/$/;"	m	struct:SIM_MemMap
FCNFG	derivative.h	/^  uint8_t FCNFG;                                   \/**< Flash Configuration Register, offset: 0x1 *\/$/;"	m	struct:FTFE_MemMap
FCR	derivative.h	/^  uint32_t FCR;                                    \/**< Funnel Control Register, offset: 0x0 *\/$/;"	m	struct:ETF_MemMap
FDPROT	derivative.h	/^  uint8_t FDPROT;                                  \/**< Data Flash Protection Register, offset: 0x17 *\/$/;"	m	struct:FTFE_MemMap
FDPROT	derivative.h	/^  uint8_t FDPROT;                                  \/**< Non-volatile D-Flash Protection Register, offset: 0xF *\/$/;"	m	struct:NV_MemMap
FDR	derivative.h	/^  uint32_t FDR;                                    \/**< Fault data register, offset: 0x28 *\/$/;"	m	struct:MCM_MemMap
FEPROT	derivative.h	/^  uint8_t FEPROT;                                  \/**< EEPROM Protection Register, offset: 0x16 *\/$/;"	m	struct:FTFE_MemMap
FEPROT	derivative.h	/^  uint8_t FEPROT;                                  \/**< Non-volatile EERAM Protection Register, offset: 0xE *\/$/;"	m	struct:NV_MemMap
FEVT	derivative.h	/^  uint32_t FEVT;                                   \/**< Force Event Register, offset: 0x50 *\/$/;"	m	struct:SDHC_MemMap
FFCR	derivative.h	/^  uint32_t FFCR;                                   \/**< Formatter and Flush Control Register, offset: 0x304 *\/$/;"	m	struct:ETB_MemMap
FFCR	derivative.h	/^  uint32_t FFCR;                                   \/**< Formatter and Flush Control Register, offset: 0x304 *\/$/;"	m	struct:TPIU_MemMap
FFLR	derivative.h	/^  uint32_t FFLR;                                   \/**< FIFOFULL Level Register, offset: 0x28 *\/$/;"	m	struct:ETM_MemMap
FFSR	derivative.h	/^  uint32_t FFSR;                                   \/**< Formatter and Flush Status Register, offset: 0x300 *\/$/;"	m	struct:ETB_MemMap
FFSR	derivative.h	/^  uint32_t FFSR;                                   \/**< Formatter and Flush Status Register, offset: 0x300 *\/$/;"	m	struct:TPIU_MemMap
FIFODATA0	derivative.h	/^  uint32_t FIFODATA0;                              \/**< FIFODATA0 Register, offset: 0xEEC *\/$/;"	m	struct:TPIU_MemMap
FIFODATA1	derivative.h	/^  uint32_t FIFODATA1;                              \/**< FIFODATA1 Register, offset: 0xEFC *\/$/;"	m	struct:TPIU_MemMap
FILT1	derivative.h	/^  uint8_t FILT1;                                   \/**< LLWU Pin Filter 1 Register, offset: 0x8 *\/$/;"	m	struct:LLWU_MemMap
FILT2	derivative.h	/^  uint8_t FILT2;                                   \/**< LLWU Pin Filter 2 Register, offset: 0x9 *\/$/;"	m	struct:LLWU_MemMap
FILTER	derivative.h	/^  uint32_t FILTER;                                 \/**< Input Capture Filter Control, offset: 0x78 *\/$/;"	m	struct:FTM_MemMap
FLT	derivative.h	/^  uint8_t FLT;                                     \/**< I2C Programmable Input Glitch Filter register, offset: 0x6 *\/$/;"	m	struct:I2C_MemMap
FLTCTRL	derivative.h	/^  uint32_t FLTCTRL;                                \/**< Fault Control, offset: 0x7C *\/$/;"	m	struct:FTM_MemMap
FLTPOL	derivative.h	/^  uint32_t FLTPOL;                                 \/**< FTM Fault Input Polarity, offset: 0x88 *\/$/;"	m	struct:FTM_MemMap
FMC_BASE_PTR	derivative.h	8198;"	d
FMC_BASE_PTRS	derivative.h	8200;"	d
FMC_DATAW0S0LM	derivative.h	8236;"	d
FMC_DATAW0S0ML	derivative.h	8235;"	d
FMC_DATAW0S0MU	derivative.h	8234;"	d
FMC_DATAW0S0UM	derivative.h	8233;"	d
FMC_DATAW0S1LM	derivative.h	8240;"	d
FMC_DATAW0S1ML	derivative.h	8239;"	d
FMC_DATAW0S1MU	derivative.h	8238;"	d
FMC_DATAW0S1UM	derivative.h	8237;"	d
FMC_DATAW0S2LM	derivative.h	8244;"	d
FMC_DATAW0S2ML	derivative.h	8243;"	d
FMC_DATAW0S2MU	derivative.h	8242;"	d
FMC_DATAW0S2UM	derivative.h	8241;"	d
FMC_DATAW0S3LM	derivative.h	8248;"	d
FMC_DATAW0S3ML	derivative.h	8247;"	d
FMC_DATAW0S3MU	derivative.h	8246;"	d
FMC_DATAW0S3UM	derivative.h	8245;"	d
FMC_DATAW1S0LM	derivative.h	8252;"	d
FMC_DATAW1S0ML	derivative.h	8251;"	d
FMC_DATAW1S0MU	derivative.h	8250;"	d
FMC_DATAW1S0UM	derivative.h	8249;"	d
FMC_DATAW1S1LM	derivative.h	8256;"	d
FMC_DATAW1S1ML	derivative.h	8255;"	d
FMC_DATAW1S1MU	derivative.h	8254;"	d
FMC_DATAW1S1UM	derivative.h	8253;"	d
FMC_DATAW1S2LM	derivative.h	8260;"	d
FMC_DATAW1S2ML	derivative.h	8259;"	d
FMC_DATAW1S2MU	derivative.h	8258;"	d
FMC_DATAW1S2UM	derivative.h	8257;"	d
FMC_DATAW1S3LM	derivative.h	8264;"	d
FMC_DATAW1S3ML	derivative.h	8263;"	d
FMC_DATAW1S3MU	derivative.h	8262;"	d
FMC_DATAW1S3UM	derivative.h	8261;"	d
FMC_DATAW2S0LM	derivative.h	8268;"	d
FMC_DATAW2S0ML	derivative.h	8267;"	d
FMC_DATAW2S0MU	derivative.h	8266;"	d
FMC_DATAW2S0UM	derivative.h	8265;"	d
FMC_DATAW2S1LM	derivative.h	8272;"	d
FMC_DATAW2S1ML	derivative.h	8271;"	d
FMC_DATAW2S1MU	derivative.h	8270;"	d
FMC_DATAW2S1UM	derivative.h	8269;"	d
FMC_DATAW2S2LM	derivative.h	8276;"	d
FMC_DATAW2S2ML	derivative.h	8275;"	d
FMC_DATAW2S2MU	derivative.h	8274;"	d
FMC_DATAW2S2UM	derivative.h	8273;"	d
FMC_DATAW2S3LM	derivative.h	8280;"	d
FMC_DATAW2S3ML	derivative.h	8279;"	d
FMC_DATAW2S3MU	derivative.h	8278;"	d
FMC_DATAW2S3UM	derivative.h	8277;"	d
FMC_DATAW3S0LM	derivative.h	8284;"	d
FMC_DATAW3S0ML	derivative.h	8283;"	d
FMC_DATAW3S0MU	derivative.h	8282;"	d
FMC_DATAW3S0UM	derivative.h	8281;"	d
FMC_DATAW3S1LM	derivative.h	8288;"	d
FMC_DATAW3S1ML	derivative.h	8287;"	d
FMC_DATAW3S1MU	derivative.h	8286;"	d
FMC_DATAW3S1UM	derivative.h	8285;"	d
FMC_DATAW3S2LM	derivative.h	8292;"	d
FMC_DATAW3S2ML	derivative.h	8291;"	d
FMC_DATAW3S2MU	derivative.h	8290;"	d
FMC_DATAW3S2UM	derivative.h	8289;"	d
FMC_DATAW3S3LM	derivative.h	8296;"	d
FMC_DATAW3S3ML	derivative.h	8295;"	d
FMC_DATAW3S3MU	derivative.h	8294;"	d
FMC_DATAW3S3UM	derivative.h	8293;"	d
FMC_DATA_LM	derivative.h	8303;"	d
FMC_DATA_LM_REG	derivative.h	8066;"	d
FMC_DATA_LM_data	derivative.h	8189;"	d
FMC_DATA_LM_data_MASK	derivative.h	8187;"	d
FMC_DATA_LM_data_SHIFT	derivative.h	8188;"	d
FMC_DATA_ML	derivative.h	8302;"	d
FMC_DATA_ML_REG	derivative.h	8065;"	d
FMC_DATA_ML_data	derivative.h	8185;"	d
FMC_DATA_ML_data_MASK	derivative.h	8183;"	d
FMC_DATA_ML_data_SHIFT	derivative.h	8184;"	d
FMC_DATA_MU	derivative.h	8301;"	d
FMC_DATA_MU_REG	derivative.h	8064;"	d
FMC_DATA_MU_data	derivative.h	8181;"	d
FMC_DATA_MU_data_MASK	derivative.h	8179;"	d
FMC_DATA_MU_data_SHIFT	derivative.h	8180;"	d
FMC_DATA_UM	derivative.h	8300;"	d
FMC_DATA_UM_REG	derivative.h	8063;"	d
FMC_DATA_UM_data	derivative.h	8177;"	d
FMC_DATA_UM_data_MASK	derivative.h	8175;"	d
FMC_DATA_UM_data_SHIFT	derivative.h	8176;"	d
FMC_MemMap	derivative.h	/^typedef struct FMC_MemMap {$/;"	s
FMC_MemMapPtr	derivative.h	/^} volatile *FMC_MemMapPtr;$/;"	t
FMC_PFAPR	derivative.h	8214;"	d
FMC_PFAPR_M0AP	derivative.h	8085;"	d
FMC_PFAPR_M0AP_MASK	derivative.h	8083;"	d
FMC_PFAPR_M0AP_SHIFT	derivative.h	8084;"	d
FMC_PFAPR_M0PFD_MASK	derivative.h	8107;"	d
FMC_PFAPR_M0PFD_SHIFT	derivative.h	8108;"	d
FMC_PFAPR_M1AP	derivative.h	8088;"	d
FMC_PFAPR_M1AP_MASK	derivative.h	8086;"	d
FMC_PFAPR_M1AP_SHIFT	derivative.h	8087;"	d
FMC_PFAPR_M1PFD_MASK	derivative.h	8109;"	d
FMC_PFAPR_M1PFD_SHIFT	derivative.h	8110;"	d
FMC_PFAPR_M2AP	derivative.h	8091;"	d
FMC_PFAPR_M2AP_MASK	derivative.h	8089;"	d
FMC_PFAPR_M2AP_SHIFT	derivative.h	8090;"	d
FMC_PFAPR_M2PFD_MASK	derivative.h	8111;"	d
FMC_PFAPR_M2PFD_SHIFT	derivative.h	8112;"	d
FMC_PFAPR_M3AP	derivative.h	8094;"	d
FMC_PFAPR_M3AP_MASK	derivative.h	8092;"	d
FMC_PFAPR_M3AP_SHIFT	derivative.h	8093;"	d
FMC_PFAPR_M3PFD_MASK	derivative.h	8113;"	d
FMC_PFAPR_M3PFD_SHIFT	derivative.h	8114;"	d
FMC_PFAPR_M4AP	derivative.h	8097;"	d
FMC_PFAPR_M4AP_MASK	derivative.h	8095;"	d
FMC_PFAPR_M4AP_SHIFT	derivative.h	8096;"	d
FMC_PFAPR_M4PFD_MASK	derivative.h	8115;"	d
FMC_PFAPR_M4PFD_SHIFT	derivative.h	8116;"	d
FMC_PFAPR_M5AP	derivative.h	8100;"	d
FMC_PFAPR_M5AP_MASK	derivative.h	8098;"	d
FMC_PFAPR_M5AP_SHIFT	derivative.h	8099;"	d
FMC_PFAPR_M5PFD_MASK	derivative.h	8117;"	d
FMC_PFAPR_M5PFD_SHIFT	derivative.h	8118;"	d
FMC_PFAPR_M6AP	derivative.h	8103;"	d
FMC_PFAPR_M6AP_MASK	derivative.h	8101;"	d
FMC_PFAPR_M6AP_SHIFT	derivative.h	8102;"	d
FMC_PFAPR_M6PFD_MASK	derivative.h	8119;"	d
FMC_PFAPR_M6PFD_SHIFT	derivative.h	8120;"	d
FMC_PFAPR_M7AP	derivative.h	8106;"	d
FMC_PFAPR_M7AP_MASK	derivative.h	8104;"	d
FMC_PFAPR_M7AP_SHIFT	derivative.h	8105;"	d
FMC_PFAPR_M7PFD_MASK	derivative.h	8121;"	d
FMC_PFAPR_M7PFD_SHIFT	derivative.h	8122;"	d
FMC_PFAPR_REG	derivative.h	8059;"	d
FMC_PFB01CR	derivative.h	8215;"	d
FMC_PFB01CR_B01DCE_MASK	derivative.h	8132;"	d
FMC_PFB01CR_B01DCE_SHIFT	derivative.h	8133;"	d
FMC_PFB01CR_B01DPE_MASK	derivative.h	8128;"	d
FMC_PFB01CR_B01DPE_SHIFT	derivative.h	8129;"	d
FMC_PFB01CR_B01ICE_MASK	derivative.h	8130;"	d
FMC_PFB01CR_B01ICE_SHIFT	derivative.h	8131;"	d
FMC_PFB01CR_B01IPE_MASK	derivative.h	8126;"	d
FMC_PFB01CR_B01IPE_SHIFT	derivative.h	8127;"	d
FMC_PFB01CR_B01MW	derivative.h	8139;"	d
FMC_PFB01CR_B01MW_MASK	derivative.h	8137;"	d
FMC_PFB01CR_B01MW_SHIFT	derivative.h	8138;"	d
FMC_PFB01CR_B01RWSC	derivative.h	8150;"	d
FMC_PFB01CR_B01RWSC_MASK	derivative.h	8148;"	d
FMC_PFB01CR_B01RWSC_SHIFT	derivative.h	8149;"	d
FMC_PFB01CR_B01SEBE_MASK	derivative.h	8124;"	d
FMC_PFB01CR_B01SEBE_SHIFT	derivative.h	8125;"	d
FMC_PFB01CR_CINV_WAY	derivative.h	8144;"	d
FMC_PFB01CR_CINV_WAY_MASK	derivative.h	8142;"	d
FMC_PFB01CR_CINV_WAY_SHIFT	derivative.h	8143;"	d
FMC_PFB01CR_CLCK_WAY	derivative.h	8147;"	d
FMC_PFB01CR_CLCK_WAY_MASK	derivative.h	8145;"	d
FMC_PFB01CR_CLCK_WAY_SHIFT	derivative.h	8146;"	d
FMC_PFB01CR_CRC	derivative.h	8136;"	d
FMC_PFB01CR_CRC_MASK	derivative.h	8134;"	d
FMC_PFB01CR_CRC_SHIFT	derivative.h	8135;"	d
FMC_PFB01CR_REG	derivative.h	8060;"	d
FMC_PFB01CR_S_B_INV_MASK	derivative.h	8140;"	d
FMC_PFB01CR_S_B_INV_SHIFT	derivative.h	8141;"	d
FMC_PFB23CR	derivative.h	8216;"	d
FMC_PFB23CR_B23DCE_MASK	derivative.h	8160;"	d
FMC_PFB23CR_B23DCE_SHIFT	derivative.h	8161;"	d
FMC_PFB23CR_B23DPE_MASK	derivative.h	8156;"	d
FMC_PFB23CR_B23DPE_SHIFT	derivative.h	8157;"	d
FMC_PFB23CR_B23ICE_MASK	derivative.h	8158;"	d
FMC_PFB23CR_B23ICE_SHIFT	derivative.h	8159;"	d
FMC_PFB23CR_B23IPE_MASK	derivative.h	8154;"	d
FMC_PFB23CR_B23IPE_SHIFT	derivative.h	8155;"	d
FMC_PFB23CR_B23MW	derivative.h	8164;"	d
FMC_PFB23CR_B23MW_MASK	derivative.h	8162;"	d
FMC_PFB23CR_B23MW_SHIFT	derivative.h	8163;"	d
FMC_PFB23CR_B23RWSC	derivative.h	8167;"	d
FMC_PFB23CR_B23RWSC_MASK	derivative.h	8165;"	d
FMC_PFB23CR_B23RWSC_SHIFT	derivative.h	8166;"	d
FMC_PFB23CR_B23SEBE_MASK	derivative.h	8152;"	d
FMC_PFB23CR_B23SEBE_SHIFT	derivative.h	8153;"	d
FMC_PFB23CR_REG	derivative.h	8061;"	d
FMC_TAGVD	derivative.h	8299;"	d
FMC_TAGVDW0S0	derivative.h	8217;"	d
FMC_TAGVDW0S1	derivative.h	8218;"	d
FMC_TAGVDW0S2	derivative.h	8219;"	d
FMC_TAGVDW0S3	derivative.h	8220;"	d
FMC_TAGVDW1S0	derivative.h	8221;"	d
FMC_TAGVDW1S1	derivative.h	8222;"	d
FMC_TAGVDW1S2	derivative.h	8223;"	d
FMC_TAGVDW1S3	derivative.h	8224;"	d
FMC_TAGVDW2S0	derivative.h	8225;"	d
FMC_TAGVDW2S1	derivative.h	8226;"	d
FMC_TAGVDW2S2	derivative.h	8227;"	d
FMC_TAGVDW2S3	derivative.h	8228;"	d
FMC_TAGVDW3S0	derivative.h	8229;"	d
FMC_TAGVDW3S1	derivative.h	8230;"	d
FMC_TAGVDW3S2	derivative.h	8231;"	d
FMC_TAGVDW3S3	derivative.h	8232;"	d
FMC_TAGVD_REG	derivative.h	8062;"	d
FMC_TAGVD_tag	derivative.h	8173;"	d
FMC_TAGVD_tag_MASK	derivative.h	8171;"	d
FMC_TAGVD_tag_SHIFT	derivative.h	8172;"	d
FMC_TAGVD_valid_MASK	derivative.h	8169;"	d
FMC_TAGVD_valid_SHIFT	derivative.h	8170;"	d
FMS	derivative.h	/^  uint32_t FMS;                                    \/**< Fault Mode Status, offset: 0x74 *\/$/;"	m	struct:FTM_MemMap
FOLDCNT	derivative.h	/^  uint32_t FOLDCNT;                                \/**< Folded-instruction Count Register, offset: 0x18 *\/$/;"	m	struct:DWT_MemMap
FOPT	derivative.h	/^  uint8_t FOPT;                                    \/**< Flash Option Register, offset: 0x3 *\/$/;"	m	struct:FTFE_MemMap
FOPT	derivative.h	/^  uint8_t FOPT;                                    \/**< Non-volatile Flash Option Register, offset: 0xD *\/$/;"	m	struct:NV_MemMap
FPB_BASE_PTR	derivative.h	8393;"	d
FPB_BASE_PTRS	derivative.h	8395;"	d
FPB_CID0_REG	derivative.h	8366;"	d
FPB_CID1_REG	derivative.h	8367;"	d
FPB_CID2_REG	derivative.h	8368;"	d
FPB_CID3_REG	derivative.h	8369;"	d
FPB_COMP	derivative.h	8433;"	d
FPB_COMP_REG	derivative.h	8357;"	d
FPB_CTRL_REG	derivative.h	8355;"	d
FPB_MemMap	derivative.h	/^typedef struct FPB_MemMap {$/;"	s
FPB_MemMapPtr	derivative.h	/^} volatile *FPB_MemMapPtr;$/;"	t
FPB_PID0_REG	derivative.h	8362;"	d
FPB_PID1_REG	derivative.h	8363;"	d
FPB_PID2_REG	derivative.h	8364;"	d
FPB_PID3_REG	derivative.h	8365;"	d
FPB_PID4_REG	derivative.h	8358;"	d
FPB_PID5_REG	derivative.h	8359;"	d
FPB_PID6_REG	derivative.h	8360;"	d
FPB_PID7_REG	derivative.h	8361;"	d
FPB_REMAP_REG	derivative.h	8356;"	d
FPR	derivative.h	/^  uint8_t FPR;                                     \/**< CMP Filter Period Register, offset: 0x2 *\/$/;"	m	struct:CMP_MemMap
FPROT0	derivative.h	/^  uint8_t FPROT0;                                  \/**< Non-volatile P-Flash Protection 0 - High Register, offset: 0xB *\/$/;"	m	struct:NV_MemMap
FPROT0	derivative.h	/^  uint8_t FPROT0;                                  \/**< Program Flash Protection Registers, offset: 0x13 *\/$/;"	m	struct:FTFE_MemMap
FPROT1	derivative.h	/^  uint8_t FPROT1;                                  \/**< Non-volatile P-Flash Protection 0 - Low Register, offset: 0xA *\/$/;"	m	struct:NV_MemMap
FPROT1	derivative.h	/^  uint8_t FPROT1;                                  \/**< Program Flash Protection Registers, offset: 0x12 *\/$/;"	m	struct:FTFE_MemMap
FPROT2	derivative.h	/^  uint8_t FPROT2;                                  \/**< Non-volatile P-Flash Protection 1 - High Register, offset: 0x9 *\/$/;"	m	struct:NV_MemMap
FPROT2	derivative.h	/^  uint8_t FPROT2;                                  \/**< Program Flash Protection Registers, offset: 0x11 *\/$/;"	m	struct:FTFE_MemMap
FPROT3	derivative.h	/^  uint8_t FPROT3;                                  \/**< Non-volatile P-Flash Protection 1 - Low Register, offset: 0x8 *\/$/;"	m	struct:NV_MemMap
FPROT3	derivative.h	/^  uint8_t FPROT3;                                  \/**< Program Flash Protection Registers, offset: 0x10 *\/$/;"	m	struct:FTFE_MemMap
FP_CID0	derivative.h	8427;"	d
FP_CID1	derivative.h	8428;"	d
FP_CID2	derivative.h	8429;"	d
FP_CID3	derivative.h	8430;"	d
FP_COMP0	derivative.h	8411;"	d
FP_COMP1	derivative.h	8412;"	d
FP_COMP2	derivative.h	8413;"	d
FP_COMP3	derivative.h	8414;"	d
FP_COMP4	derivative.h	8415;"	d
FP_COMP5	derivative.h	8416;"	d
FP_COMP6	derivative.h	8417;"	d
FP_COMP7	derivative.h	8418;"	d
FP_CTRL	derivative.h	8409;"	d
FP_PID0	derivative.h	8423;"	d
FP_PID1	derivative.h	8424;"	d
FP_PID2	derivative.h	8425;"	d
FP_PID3	derivative.h	8426;"	d
FP_PID4	derivative.h	8419;"	d
FP_PID5	derivative.h	8420;"	d
FP_PID6	derivative.h	8421;"	d
FP_PID7	derivative.h	8422;"	d
FP_REMAP	derivative.h	8410;"	d
FRINDEX	derivative.h	/^  uint32_t FRINDEX;                                \/**< Frame Index Register, offset: 0x14C *\/$/;"	m	struct:USBHS_MemMap
FRMNUMH	derivative.h	/^  uint8_t FRMNUMH;                                 \/**< Frame Number Register High, offset: 0xA4 *\/$/;"	m	struct:USB_MemMap
FRMNUML	derivative.h	/^  uint8_t FRMNUML;                                 \/**< Frame Number Register Low, offset: 0xA0 *\/$/;"	m	struct:USB_MemMap
FSCR	derivative.h	/^  uint32_t FSCR;                                   \/**< Formatter Synchronization Counter Register, offset: 0x308 *\/$/;"	m	struct:TPIU_MemMap
FSEC	derivative.h	/^  uint8_t FSEC;                                    \/**< Flash Security Register, offset: 0x2 *\/$/;"	m	struct:FTFE_MemMap
FSEC	derivative.h	/^  uint8_t FSEC;                                    \/**< Non-volatile Flash Security Register, offset: 0xC *\/$/;"	m	struct:NV_MemMap
FSTAT	derivative.h	/^  uint8_t FSTAT;                                   \/**< Flash Status Register, offset: 0x0 *\/$/;"	m	struct:FTFE_MemMap
FTFE_BASE_PTR	derivative.h	8654;"	d
FTFE_BASE_PTRS	derivative.h	8656;"	d
FTFE_FCCOB0	derivative.h	8677;"	d
FTFE_FCCOB0_CCOBn	derivative.h	8589;"	d
FTFE_FCCOB0_CCOBn_MASK	derivative.h	8587;"	d
FTFE_FCCOB0_CCOBn_SHIFT	derivative.h	8588;"	d
FTFE_FCCOB0_REG	derivative.h	8499;"	d
FTFE_FCCOB1	derivative.h	8676;"	d
FTFE_FCCOB1_CCOBn	derivative.h	8585;"	d
FTFE_FCCOB1_CCOBn_MASK	derivative.h	8583;"	d
FTFE_FCCOB1_CCOBn_SHIFT	derivative.h	8584;"	d
FTFE_FCCOB1_REG	derivative.h	8498;"	d
FTFE_FCCOB2	derivative.h	8675;"	d
FTFE_FCCOB2_CCOBn	derivative.h	8581;"	d
FTFE_FCCOB2_CCOBn_MASK	derivative.h	8579;"	d
FTFE_FCCOB2_CCOBn_SHIFT	derivative.h	8580;"	d
FTFE_FCCOB2_REG	derivative.h	8497;"	d
FTFE_FCCOB3	derivative.h	8674;"	d
FTFE_FCCOB3_CCOBn	derivative.h	8577;"	d
FTFE_FCCOB3_CCOBn_MASK	derivative.h	8575;"	d
FTFE_FCCOB3_CCOBn_SHIFT	derivative.h	8576;"	d
FTFE_FCCOB3_REG	derivative.h	8496;"	d
FTFE_FCCOB4	derivative.h	8681;"	d
FTFE_FCCOB4_CCOBn	derivative.h	8605;"	d
FTFE_FCCOB4_CCOBn_MASK	derivative.h	8603;"	d
FTFE_FCCOB4_CCOBn_SHIFT	derivative.h	8604;"	d
FTFE_FCCOB4_REG	derivative.h	8503;"	d
FTFE_FCCOB5	derivative.h	8680;"	d
FTFE_FCCOB5_CCOBn	derivative.h	8601;"	d
FTFE_FCCOB5_CCOBn_MASK	derivative.h	8599;"	d
FTFE_FCCOB5_CCOBn_SHIFT	derivative.h	8600;"	d
FTFE_FCCOB5_REG	derivative.h	8502;"	d
FTFE_FCCOB6	derivative.h	8679;"	d
FTFE_FCCOB6_CCOBn	derivative.h	8597;"	d
FTFE_FCCOB6_CCOBn_MASK	derivative.h	8595;"	d
FTFE_FCCOB6_CCOBn_SHIFT	derivative.h	8596;"	d
FTFE_FCCOB6_REG	derivative.h	8501;"	d
FTFE_FCCOB7	derivative.h	8678;"	d
FTFE_FCCOB7_CCOBn	derivative.h	8593;"	d
FTFE_FCCOB7_CCOBn_MASK	derivative.h	8591;"	d
FTFE_FCCOB7_CCOBn_SHIFT	derivative.h	8592;"	d
FTFE_FCCOB7_REG	derivative.h	8500;"	d
FTFE_FCCOB8	derivative.h	8685;"	d
FTFE_FCCOB8_CCOBn	derivative.h	8621;"	d
FTFE_FCCOB8_CCOBn_MASK	derivative.h	8619;"	d
FTFE_FCCOB8_CCOBn_SHIFT	derivative.h	8620;"	d
FTFE_FCCOB8_REG	derivative.h	8507;"	d
FTFE_FCCOB9	derivative.h	8684;"	d
FTFE_FCCOB9_CCOBn	derivative.h	8617;"	d
FTFE_FCCOB9_CCOBn_MASK	derivative.h	8615;"	d
FTFE_FCCOB9_CCOBn_SHIFT	derivative.h	8616;"	d
FTFE_FCCOB9_REG	derivative.h	8506;"	d
FTFE_FCCOBA	derivative.h	8683;"	d
FTFE_FCCOBA_CCOBn	derivative.h	8613;"	d
FTFE_FCCOBA_CCOBn_MASK	derivative.h	8611;"	d
FTFE_FCCOBA_CCOBn_SHIFT	derivative.h	8612;"	d
FTFE_FCCOBA_REG	derivative.h	8505;"	d
FTFE_FCCOBB	derivative.h	8682;"	d
FTFE_FCCOBB_CCOBn	derivative.h	8609;"	d
FTFE_FCCOBB_CCOBn_MASK	derivative.h	8607;"	d
FTFE_FCCOBB_CCOBn_SHIFT	derivative.h	8608;"	d
FTFE_FCCOBB_REG	derivative.h	8504;"	d
FTFE_FCNFG	derivative.h	8671;"	d
FTFE_FCNFG_CCIE_MASK	derivative.h	8555;"	d
FTFE_FCNFG_CCIE_SHIFT	derivative.h	8556;"	d
FTFE_FCNFG_EEERDY_MASK	derivative.h	8541;"	d
FTFE_FCNFG_EEERDY_SHIFT	derivative.h	8542;"	d
FTFE_FCNFG_ERSAREQ_MASK	derivative.h	8551;"	d
FTFE_FCNFG_ERSAREQ_SHIFT	derivative.h	8552;"	d
FTFE_FCNFG_ERSSUSP_MASK	derivative.h	8549;"	d
FTFE_FCNFG_ERSSUSP_SHIFT	derivative.h	8550;"	d
FTFE_FCNFG_PFLSH_MASK	derivative.h	8545;"	d
FTFE_FCNFG_PFLSH_SHIFT	derivative.h	8546;"	d
FTFE_FCNFG_RAMRDY_MASK	derivative.h	8543;"	d
FTFE_FCNFG_RAMRDY_SHIFT	derivative.h	8544;"	d
FTFE_FCNFG_RDCOLLIE_MASK	derivative.h	8553;"	d
FTFE_FCNFG_RDCOLLIE_SHIFT	derivative.h	8554;"	d
FTFE_FCNFG_REG	derivative.h	8493;"	d
FTFE_FCNFG_SWAP_MASK	derivative.h	8547;"	d
FTFE_FCNFG_SWAP_SHIFT	derivative.h	8548;"	d
FTFE_FDPROT	derivative.h	8691;"	d
FTFE_FDPROT_DPROT	derivative.h	8645;"	d
FTFE_FDPROT_DPROT_MASK	derivative.h	8643;"	d
FTFE_FDPROT_DPROT_SHIFT	derivative.h	8644;"	d
FTFE_FDPROT_REG	derivative.h	8513;"	d
FTFE_FEPROT	derivative.h	8690;"	d
FTFE_FEPROT_EPROT	derivative.h	8641;"	d
FTFE_FEPROT_EPROT_MASK	derivative.h	8639;"	d
FTFE_FEPROT_EPROT_SHIFT	derivative.h	8640;"	d
FTFE_FEPROT_REG	derivative.h	8512;"	d
FTFE_FOPT	derivative.h	8673;"	d
FTFE_FOPT_OPT	derivative.h	8573;"	d
FTFE_FOPT_OPT_MASK	derivative.h	8571;"	d
FTFE_FOPT_OPT_SHIFT	derivative.h	8572;"	d
FTFE_FOPT_REG	derivative.h	8495;"	d
FTFE_FPROT0	derivative.h	8689;"	d
FTFE_FPROT0_PROT	derivative.h	8637;"	d
FTFE_FPROT0_PROT_MASK	derivative.h	8635;"	d
FTFE_FPROT0_PROT_SHIFT	derivative.h	8636;"	d
FTFE_FPROT0_REG	derivative.h	8511;"	d
FTFE_FPROT1	derivative.h	8688;"	d
FTFE_FPROT1_PROT	derivative.h	8633;"	d
FTFE_FPROT1_PROT_MASK	derivative.h	8631;"	d
FTFE_FPROT1_PROT_SHIFT	derivative.h	8632;"	d
FTFE_FPROT1_REG	derivative.h	8510;"	d
FTFE_FPROT2	derivative.h	8687;"	d
FTFE_FPROT2_PROT	derivative.h	8629;"	d
FTFE_FPROT2_PROT_MASK	derivative.h	8627;"	d
FTFE_FPROT2_PROT_SHIFT	derivative.h	8628;"	d
FTFE_FPROT2_REG	derivative.h	8509;"	d
FTFE_FPROT3	derivative.h	8686;"	d
FTFE_FPROT3_PROT	derivative.h	8625;"	d
FTFE_FPROT3_PROT_MASK	derivative.h	8623;"	d
FTFE_FPROT3_PROT_SHIFT	derivative.h	8624;"	d
FTFE_FPROT3_REG	derivative.h	8508;"	d
FTFE_FSEC	derivative.h	8672;"	d
FTFE_FSEC_FSLACC	derivative.h	8563;"	d
FTFE_FSEC_FSLACC_MASK	derivative.h	8561;"	d
FTFE_FSEC_FSLACC_SHIFT	derivative.h	8562;"	d
FTFE_FSEC_KEYEN	derivative.h	8569;"	d
FTFE_FSEC_KEYEN_MASK	derivative.h	8567;"	d
FTFE_FSEC_KEYEN_SHIFT	derivative.h	8568;"	d
FTFE_FSEC_MEEN	derivative.h	8566;"	d
FTFE_FSEC_MEEN_MASK	derivative.h	8564;"	d
FTFE_FSEC_MEEN_SHIFT	derivative.h	8565;"	d
FTFE_FSEC_REG	derivative.h	8494;"	d
FTFE_FSEC_SEC	derivative.h	8560;"	d
FTFE_FSEC_SEC_MASK	derivative.h	8558;"	d
FTFE_FSEC_SEC_SHIFT	derivative.h	8559;"	d
FTFE_FSTAT	derivative.h	8670;"	d
FTFE_FSTAT_ACCERR_MASK	derivative.h	8534;"	d
FTFE_FSTAT_ACCERR_SHIFT	derivative.h	8535;"	d
FTFE_FSTAT_CCIF_MASK	derivative.h	8538;"	d
FTFE_FSTAT_CCIF_SHIFT	derivative.h	8539;"	d
FTFE_FSTAT_FPVIOL_MASK	derivative.h	8532;"	d
FTFE_FSTAT_FPVIOL_SHIFT	derivative.h	8533;"	d
FTFE_FSTAT_MGSTAT0_MASK	derivative.h	8530;"	d
FTFE_FSTAT_MGSTAT0_SHIFT	derivative.h	8531;"	d
FTFE_FSTAT_RDCOLERR_MASK	derivative.h	8536;"	d
FTFE_FSTAT_RDCOLERR_SHIFT	derivative.h	8537;"	d
FTFE_FSTAT_REG	derivative.h	8492;"	d
FTFE_FlashConfig_BASE_PTR	derivative.h	12737;"	d
FTFE_MemMap	derivative.h	/^typedef struct FTFE_MemMap {$/;"	s
FTFE_MemMapPtr	derivative.h	/^} volatile *FTFE_MemMapPtr;$/;"	t
FTM0_BASE_PTR	derivative.h	9205;"	d
FTM0_C0SC	derivative.h	9230;"	d
FTM0_C0V	derivative.h	9231;"	d
FTM0_C1SC	derivative.h	9232;"	d
FTM0_C1V	derivative.h	9233;"	d
FTM0_C2SC	derivative.h	9234;"	d
FTM0_C2V	derivative.h	9235;"	d
FTM0_C3SC	derivative.h	9236;"	d
FTM0_C3V	derivative.h	9237;"	d
FTM0_C4SC	derivative.h	9238;"	d
FTM0_C4V	derivative.h	9239;"	d
FTM0_C5SC	derivative.h	9240;"	d
FTM0_C5V	derivative.h	9241;"	d
FTM0_C6SC	derivative.h	9242;"	d
FTM0_C6V	derivative.h	9243;"	d
FTM0_C7SC	derivative.h	9244;"	d
FTM0_C7V	derivative.h	9245;"	d
FTM0_CNT	derivative.h	9228;"	d
FTM0_CNTIN	derivative.h	9246;"	d
FTM0_COMBINE	derivative.h	9252;"	d
FTM0_CONF	derivative.h	9260;"	d
FTM0_CnSC	derivative.h	9364;"	d
FTM0_CnV	derivative.h	9368;"	d
FTM0_DEADTIME	derivative.h	9253;"	d
FTM0_EXTTRIG	derivative.h	9254;"	d
FTM0_FILTER	derivative.h	9257;"	d
FTM0_FLTCTRL	derivative.h	9258;"	d
FTM0_FLTPOL	derivative.h	9261;"	d
FTM0_FMS	derivative.h	9256;"	d
FTM0_INVCTRL	derivative.h	9263;"	d
FTM0_MOD	derivative.h	9229;"	d
FTM0_MODE	derivative.h	9248;"	d
FTM0_OUTINIT	derivative.h	9250;"	d
FTM0_OUTMASK	derivative.h	9251;"	d
FTM0_POL	derivative.h	9255;"	d
FTM0_PWMLOAD	derivative.h	9265;"	d
FTM0_QDCTRL	derivative.h	9259;"	d
FTM0_SC	derivative.h	9227;"	d
FTM0_STATUS	derivative.h	9247;"	d
FTM0_SWOCTRL	derivative.h	9264;"	d
FTM0_SYNC	derivative.h	9249;"	d
FTM0_SYNCONF	derivative.h	9262;"	d
FTM1_BASE_PTR	derivative.h	9207;"	d
FTM1_C0SC	derivative.h	9270;"	d
FTM1_C0V	derivative.h	9271;"	d
FTM1_C1SC	derivative.h	9272;"	d
FTM1_C1V	derivative.h	9273;"	d
FTM1_CNT	derivative.h	9268;"	d
FTM1_CNTIN	derivative.h	9274;"	d
FTM1_COMBINE	derivative.h	9280;"	d
FTM1_CONF	derivative.h	9288;"	d
FTM1_CnSC	derivative.h	9365;"	d
FTM1_CnV	derivative.h	9369;"	d
FTM1_DEADTIME	derivative.h	9281;"	d
FTM1_EXTTRIG	derivative.h	9282;"	d
FTM1_FILTER	derivative.h	9285;"	d
FTM1_FLTCTRL	derivative.h	9286;"	d
FTM1_FLTPOL	derivative.h	9289;"	d
FTM1_FMS	derivative.h	9284;"	d
FTM1_INVCTRL	derivative.h	9291;"	d
FTM1_MOD	derivative.h	9269;"	d
FTM1_MODE	derivative.h	9276;"	d
FTM1_OUTINIT	derivative.h	9278;"	d
FTM1_OUTMASK	derivative.h	9279;"	d
FTM1_POL	derivative.h	9283;"	d
FTM1_PWMLOAD	derivative.h	9293;"	d
FTM1_QDCTRL	derivative.h	9287;"	d
FTM1_SC	derivative.h	9267;"	d
FTM1_STATUS	derivative.h	9275;"	d
FTM1_SWOCTRL	derivative.h	9292;"	d
FTM1_SYNC	derivative.h	9277;"	d
FTM1_SYNCONF	derivative.h	9290;"	d
FTM2_BASE_PTR	derivative.h	9209;"	d
FTM2_C0SC	derivative.h	9298;"	d
FTM2_C0V	derivative.h	9299;"	d
FTM2_C1SC	derivative.h	9300;"	d
FTM2_C1V	derivative.h	9301;"	d
FTM2_CNT	derivative.h	9296;"	d
FTM2_CNTIN	derivative.h	9302;"	d
FTM2_COMBINE	derivative.h	9308;"	d
FTM2_CONF	derivative.h	9316;"	d
FTM2_CnSC	derivative.h	9366;"	d
FTM2_CnV	derivative.h	9370;"	d
FTM2_DEADTIME	derivative.h	9309;"	d
FTM2_EXTTRIG	derivative.h	9310;"	d
FTM2_FILTER	derivative.h	9313;"	d
FTM2_FLTCTRL	derivative.h	9314;"	d
FTM2_FLTPOL	derivative.h	9317;"	d
FTM2_FMS	derivative.h	9312;"	d
FTM2_INVCTRL	derivative.h	9319;"	d
FTM2_MOD	derivative.h	9297;"	d
FTM2_MODE	derivative.h	9304;"	d
FTM2_OUTINIT	derivative.h	9306;"	d
FTM2_OUTMASK	derivative.h	9307;"	d
FTM2_POL	derivative.h	9311;"	d
FTM2_PWMLOAD	derivative.h	9321;"	d
FTM2_QDCTRL	derivative.h	9315;"	d
FTM2_SC	derivative.h	9295;"	d
FTM2_STATUS	derivative.h	9303;"	d
FTM2_SWOCTRL	derivative.h	9320;"	d
FTM2_SYNC	derivative.h	9305;"	d
FTM2_SYNCONF	derivative.h	9318;"	d
FTM3_BASE_PTR	derivative.h	9211;"	d
FTM3_C0SC	derivative.h	9326;"	d
FTM3_C0V	derivative.h	9327;"	d
FTM3_C1SC	derivative.h	9328;"	d
FTM3_C1V	derivative.h	9329;"	d
FTM3_C2SC	derivative.h	9330;"	d
FTM3_C2V	derivative.h	9331;"	d
FTM3_C3SC	derivative.h	9332;"	d
FTM3_C3V	derivative.h	9333;"	d
FTM3_C4SC	derivative.h	9334;"	d
FTM3_C4V	derivative.h	9335;"	d
FTM3_C5SC	derivative.h	9336;"	d
FTM3_C5V	derivative.h	9337;"	d
FTM3_C6SC	derivative.h	9338;"	d
FTM3_C6V	derivative.h	9339;"	d
FTM3_C7SC	derivative.h	9340;"	d
FTM3_C7V	derivative.h	9341;"	d
FTM3_CNT	derivative.h	9324;"	d
FTM3_CNTIN	derivative.h	9342;"	d
FTM3_COMBINE	derivative.h	9348;"	d
FTM3_CONF	derivative.h	9356;"	d
FTM3_CnSC	derivative.h	9367;"	d
FTM3_CnV	derivative.h	9371;"	d
FTM3_DEADTIME	derivative.h	9349;"	d
FTM3_EXTTRIG	derivative.h	9350;"	d
FTM3_FILTER	derivative.h	9353;"	d
FTM3_FLTCTRL	derivative.h	9354;"	d
FTM3_FLTPOL	derivative.h	9357;"	d
FTM3_FMS	derivative.h	9352;"	d
FTM3_INVCTRL	derivative.h	9359;"	d
FTM3_MOD	derivative.h	9325;"	d
FTM3_MODE	derivative.h	9344;"	d
FTM3_OUTINIT	derivative.h	9346;"	d
FTM3_OUTMASK	derivative.h	9347;"	d
FTM3_POL	derivative.h	9351;"	d
FTM3_PWMLOAD	derivative.h	9361;"	d
FTM3_QDCTRL	derivative.h	9355;"	d
FTM3_SC	derivative.h	9323;"	d
FTM3_STATUS	derivative.h	9343;"	d
FTM3_SWOCTRL	derivative.h	9360;"	d
FTM3_SYNC	derivative.h	9345;"	d
FTM3_SYNCONF	derivative.h	9358;"	d
FTM_BASE_PTRS	derivative.h	9213;"	d
FTM_CNTIN_INIT	derivative.h	8837;"	d
FTM_CNTIN_INIT_MASK	derivative.h	8835;"	d
FTM_CNTIN_INIT_SHIFT	derivative.h	8836;"	d
FTM_CNTIN_REG	derivative.h	8759;"	d
FTM_CNT_COUNT	derivative.h	8810;"	d
FTM_CNT_COUNT_MASK	derivative.h	8808;"	d
FTM_CNT_COUNT_SHIFT	derivative.h	8809;"	d
FTM_CNT_REG	derivative.h	8755;"	d
FTM_COMBINE_COMBINE0_MASK	derivative.h	8923;"	d
FTM_COMBINE_COMBINE0_SHIFT	derivative.h	8924;"	d
FTM_COMBINE_COMBINE1_MASK	derivative.h	8937;"	d
FTM_COMBINE_COMBINE1_SHIFT	derivative.h	8938;"	d
FTM_COMBINE_COMBINE2_MASK	derivative.h	8951;"	d
FTM_COMBINE_COMBINE2_SHIFT	derivative.h	8952;"	d
FTM_COMBINE_COMBINE3_MASK	derivative.h	8965;"	d
FTM_COMBINE_COMBINE3_SHIFT	derivative.h	8966;"	d
FTM_COMBINE_COMP0_MASK	derivative.h	8925;"	d
FTM_COMBINE_COMP0_SHIFT	derivative.h	8926;"	d
FTM_COMBINE_COMP1_MASK	derivative.h	8939;"	d
FTM_COMBINE_COMP1_SHIFT	derivative.h	8940;"	d
FTM_COMBINE_COMP2_MASK	derivative.h	8953;"	d
FTM_COMBINE_COMP2_SHIFT	derivative.h	8954;"	d
FTM_COMBINE_COMP3_MASK	derivative.h	8967;"	d
FTM_COMBINE_COMP3_SHIFT	derivative.h	8968;"	d
FTM_COMBINE_DECAP0_MASK	derivative.h	8929;"	d
FTM_COMBINE_DECAP0_SHIFT	derivative.h	8930;"	d
FTM_COMBINE_DECAP1_MASK	derivative.h	8943;"	d
FTM_COMBINE_DECAP1_SHIFT	derivative.h	8944;"	d
FTM_COMBINE_DECAP2_MASK	derivative.h	8957;"	d
FTM_COMBINE_DECAP2_SHIFT	derivative.h	8958;"	d
FTM_COMBINE_DECAP3_MASK	derivative.h	8971;"	d
FTM_COMBINE_DECAP3_SHIFT	derivative.h	8972;"	d
FTM_COMBINE_DECAPEN0_MASK	derivative.h	8927;"	d
FTM_COMBINE_DECAPEN0_SHIFT	derivative.h	8928;"	d
FTM_COMBINE_DECAPEN1_MASK	derivative.h	8941;"	d
FTM_COMBINE_DECAPEN1_SHIFT	derivative.h	8942;"	d
FTM_COMBINE_DECAPEN2_MASK	derivative.h	8955;"	d
FTM_COMBINE_DECAPEN2_SHIFT	derivative.h	8956;"	d
FTM_COMBINE_DECAPEN3_MASK	derivative.h	8969;"	d
FTM_COMBINE_DECAPEN3_SHIFT	derivative.h	8970;"	d
FTM_COMBINE_DTEN0_MASK	derivative.h	8931;"	d
FTM_COMBINE_DTEN0_SHIFT	derivative.h	8932;"	d
FTM_COMBINE_DTEN1_MASK	derivative.h	8945;"	d
FTM_COMBINE_DTEN1_SHIFT	derivative.h	8946;"	d
FTM_COMBINE_DTEN2_MASK	derivative.h	8959;"	d
FTM_COMBINE_DTEN2_SHIFT	derivative.h	8960;"	d
FTM_COMBINE_DTEN3_MASK	derivative.h	8973;"	d
FTM_COMBINE_DTEN3_SHIFT	derivative.h	8974;"	d
FTM_COMBINE_FAULTEN0_MASK	derivative.h	8935;"	d
FTM_COMBINE_FAULTEN0_SHIFT	derivative.h	8936;"	d
FTM_COMBINE_FAULTEN1_MASK	derivative.h	8949;"	d
FTM_COMBINE_FAULTEN1_SHIFT	derivative.h	8950;"	d
FTM_COMBINE_FAULTEN2_MASK	derivative.h	8963;"	d
FTM_COMBINE_FAULTEN2_SHIFT	derivative.h	8964;"	d
FTM_COMBINE_FAULTEN3_MASK	derivative.h	8977;"	d
FTM_COMBINE_FAULTEN3_SHIFT	derivative.h	8978;"	d
FTM_COMBINE_REG	derivative.h	8765;"	d
FTM_COMBINE_SYNCEN0_MASK	derivative.h	8933;"	d
FTM_COMBINE_SYNCEN0_SHIFT	derivative.h	8934;"	d
FTM_COMBINE_SYNCEN1_MASK	derivative.h	8947;"	d
FTM_COMBINE_SYNCEN1_SHIFT	derivative.h	8948;"	d
FTM_COMBINE_SYNCEN2_MASK	derivative.h	8961;"	d
FTM_COMBINE_SYNCEN2_SHIFT	derivative.h	8962;"	d
FTM_COMBINE_SYNCEN3_MASK	derivative.h	8975;"	d
FTM_COMBINE_SYNCEN3_SHIFT	derivative.h	8976;"	d
FTM_CONF_BDMMODE	derivative.h	9091;"	d
FTM_CONF_BDMMODE_MASK	derivative.h	9089;"	d
FTM_CONF_BDMMODE_SHIFT	derivative.h	9090;"	d
FTM_CONF_GTBEEN_MASK	derivative.h	9092;"	d
FTM_CONF_GTBEEN_SHIFT	derivative.h	9093;"	d
FTM_CONF_GTBEOUT_MASK	derivative.h	9094;"	d
FTM_CONF_GTBEOUT_SHIFT	derivative.h	9095;"	d
FTM_CONF_NUMTOF	derivative.h	9088;"	d
FTM_CONF_NUMTOF_MASK	derivative.h	9086;"	d
FTM_CONF_NUMTOF_SHIFT	derivative.h	9087;"	d
FTM_CONF_REG	derivative.h	8773;"	d
FTM_CnSC_CHF_MASK	derivative.h	8828;"	d
FTM_CnSC_CHF_SHIFT	derivative.h	8829;"	d
FTM_CnSC_CHIE_MASK	derivative.h	8826;"	d
FTM_CnSC_CHIE_SHIFT	derivative.h	8827;"	d
FTM_CnSC_DMA_MASK	derivative.h	8816;"	d
FTM_CnSC_DMA_SHIFT	derivative.h	8817;"	d
FTM_CnSC_ELSA_MASK	derivative.h	8818;"	d
FTM_CnSC_ELSA_SHIFT	derivative.h	8819;"	d
FTM_CnSC_ELSB_MASK	derivative.h	8820;"	d
FTM_CnSC_ELSB_SHIFT	derivative.h	8821;"	d
FTM_CnSC_MSA_MASK	derivative.h	8822;"	d
FTM_CnSC_MSA_SHIFT	derivative.h	8823;"	d
FTM_CnSC_MSB_MASK	derivative.h	8824;"	d
FTM_CnSC_MSB_SHIFT	derivative.h	8825;"	d
FTM_CnSC_REG	derivative.h	8757;"	d
FTM_CnV_REG	derivative.h	8758;"	d
FTM_CnV_VAL	derivative.h	8833;"	d
FTM_CnV_VAL_MASK	derivative.h	8831;"	d
FTM_CnV_VAL_SHIFT	derivative.h	8832;"	d
FTM_DEADTIME_DTPS	derivative.h	8985;"	d
FTM_DEADTIME_DTPS_MASK	derivative.h	8983;"	d
FTM_DEADTIME_DTPS_SHIFT	derivative.h	8984;"	d
FTM_DEADTIME_DTVAL	derivative.h	8982;"	d
FTM_DEADTIME_DTVAL_MASK	derivative.h	8980;"	d
FTM_DEADTIME_DTVAL_SHIFT	derivative.h	8981;"	d
FTM_DEADTIME_REG	derivative.h	8766;"	d
FTM_EXTTRIG_CH0TRIG_MASK	derivative.h	8995;"	d
FTM_EXTTRIG_CH0TRIG_SHIFT	derivative.h	8996;"	d
FTM_EXTTRIG_CH1TRIG_MASK	derivative.h	8997;"	d
FTM_EXTTRIG_CH1TRIG_SHIFT	derivative.h	8998;"	d
FTM_EXTTRIG_CH2TRIG_MASK	derivative.h	8987;"	d
FTM_EXTTRIG_CH2TRIG_SHIFT	derivative.h	8988;"	d
FTM_EXTTRIG_CH3TRIG_MASK	derivative.h	8989;"	d
FTM_EXTTRIG_CH3TRIG_SHIFT	derivative.h	8990;"	d
FTM_EXTTRIG_CH4TRIG_MASK	derivative.h	8991;"	d
FTM_EXTTRIG_CH4TRIG_SHIFT	derivative.h	8992;"	d
FTM_EXTTRIG_CH5TRIG_MASK	derivative.h	8993;"	d
FTM_EXTTRIG_CH5TRIG_SHIFT	derivative.h	8994;"	d
FTM_EXTTRIG_INITTRIGEN_MASK	derivative.h	8999;"	d
FTM_EXTTRIG_INITTRIGEN_SHIFT	derivative.h	9000;"	d
FTM_EXTTRIG_REG	derivative.h	8767;"	d
FTM_EXTTRIG_TRIGF_MASK	derivative.h	9001;"	d
FTM_EXTTRIG_TRIGF_SHIFT	derivative.h	9002;"	d
FTM_FILTER_CH0FVAL	derivative.h	9038;"	d
FTM_FILTER_CH0FVAL_MASK	derivative.h	9036;"	d
FTM_FILTER_CH0FVAL_SHIFT	derivative.h	9037;"	d
FTM_FILTER_CH1FVAL	derivative.h	9041;"	d
FTM_FILTER_CH1FVAL_MASK	derivative.h	9039;"	d
FTM_FILTER_CH1FVAL_SHIFT	derivative.h	9040;"	d
FTM_FILTER_CH2FVAL	derivative.h	9044;"	d
FTM_FILTER_CH2FVAL_MASK	derivative.h	9042;"	d
FTM_FILTER_CH2FVAL_SHIFT	derivative.h	9043;"	d
FTM_FILTER_CH3FVAL	derivative.h	9047;"	d
FTM_FILTER_CH3FVAL_MASK	derivative.h	9045;"	d
FTM_FILTER_CH3FVAL_SHIFT	derivative.h	9046;"	d
FTM_FILTER_REG	derivative.h	8770;"	d
FTM_FLTCTRL_FAULT0EN_MASK	derivative.h	9049;"	d
FTM_FLTCTRL_FAULT0EN_SHIFT	derivative.h	9050;"	d
FTM_FLTCTRL_FAULT1EN_MASK	derivative.h	9051;"	d
FTM_FLTCTRL_FAULT1EN_SHIFT	derivative.h	9052;"	d
FTM_FLTCTRL_FAULT2EN_MASK	derivative.h	9053;"	d
FTM_FLTCTRL_FAULT2EN_SHIFT	derivative.h	9054;"	d
FTM_FLTCTRL_FAULT3EN_MASK	derivative.h	9055;"	d
FTM_FLTCTRL_FAULT3EN_SHIFT	derivative.h	9056;"	d
FTM_FLTCTRL_FFLTR0EN_MASK	derivative.h	9057;"	d
FTM_FLTCTRL_FFLTR0EN_SHIFT	derivative.h	9058;"	d
FTM_FLTCTRL_FFLTR1EN_MASK	derivative.h	9059;"	d
FTM_FLTCTRL_FFLTR1EN_SHIFT	derivative.h	9060;"	d
FTM_FLTCTRL_FFLTR2EN_MASK	derivative.h	9061;"	d
FTM_FLTCTRL_FFLTR2EN_SHIFT	derivative.h	9062;"	d
FTM_FLTCTRL_FFLTR3EN_MASK	derivative.h	9063;"	d
FTM_FLTCTRL_FFLTR3EN_SHIFT	derivative.h	9064;"	d
FTM_FLTCTRL_FFVAL	derivative.h	9067;"	d
FTM_FLTCTRL_FFVAL_MASK	derivative.h	9065;"	d
FTM_FLTCTRL_FFVAL_SHIFT	derivative.h	9066;"	d
FTM_FLTCTRL_REG	derivative.h	8771;"	d
FTM_FLTPOL_FLT0POL_MASK	derivative.h	9097;"	d
FTM_FLTPOL_FLT0POL_SHIFT	derivative.h	9098;"	d
FTM_FLTPOL_FLT1POL_MASK	derivative.h	9099;"	d
FTM_FLTPOL_FLT1POL_SHIFT	derivative.h	9100;"	d
FTM_FLTPOL_FLT2POL_MASK	derivative.h	9101;"	d
FTM_FLTPOL_FLT2POL_SHIFT	derivative.h	9102;"	d
FTM_FLTPOL_FLT3POL_MASK	derivative.h	9103;"	d
FTM_FLTPOL_FLT3POL_SHIFT	derivative.h	9104;"	d
FTM_FLTPOL_REG	derivative.h	8774;"	d
FTM_FMS_FAULTF0_MASK	derivative.h	9021;"	d
FTM_FMS_FAULTF0_SHIFT	derivative.h	9022;"	d
FTM_FMS_FAULTF1_MASK	derivative.h	9023;"	d
FTM_FMS_FAULTF1_SHIFT	derivative.h	9024;"	d
FTM_FMS_FAULTF2_MASK	derivative.h	9025;"	d
FTM_FMS_FAULTF2_SHIFT	derivative.h	9026;"	d
FTM_FMS_FAULTF3_MASK	derivative.h	9027;"	d
FTM_FMS_FAULTF3_SHIFT	derivative.h	9028;"	d
FTM_FMS_FAULTF_MASK	derivative.h	9033;"	d
FTM_FMS_FAULTF_SHIFT	derivative.h	9034;"	d
FTM_FMS_FAULTIN_MASK	derivative.h	9029;"	d
FTM_FMS_FAULTIN_SHIFT	derivative.h	9030;"	d
FTM_FMS_REG	derivative.h	8769;"	d
FTM_FMS_WPEN_MASK	derivative.h	9031;"	d
FTM_FMS_WPEN_SHIFT	derivative.h	9032;"	d
FTM_INVCTRL_INV0EN_MASK	derivative.h	9137;"	d
FTM_INVCTRL_INV0EN_SHIFT	derivative.h	9138;"	d
FTM_INVCTRL_INV1EN_MASK	derivative.h	9139;"	d
FTM_INVCTRL_INV1EN_SHIFT	derivative.h	9140;"	d
FTM_INVCTRL_INV2EN_MASK	derivative.h	9141;"	d
FTM_INVCTRL_INV2EN_SHIFT	derivative.h	9142;"	d
FTM_INVCTRL_INV3EN_MASK	derivative.h	9143;"	d
FTM_INVCTRL_INV3EN_SHIFT	derivative.h	9144;"	d
FTM_INVCTRL_REG	derivative.h	8776;"	d
FTM_MODE_CAPTEST_MASK	derivative.h	8864;"	d
FTM_MODE_CAPTEST_SHIFT	derivative.h	8865;"	d
FTM_MODE_FAULTIE_MASK	derivative.h	8869;"	d
FTM_MODE_FAULTIE_SHIFT	derivative.h	8870;"	d
FTM_MODE_FAULTM	derivative.h	8868;"	d
FTM_MODE_FAULTM_MASK	derivative.h	8866;"	d
FTM_MODE_FAULTM_SHIFT	derivative.h	8867;"	d
FTM_MODE_FTMEN_MASK	derivative.h	8856;"	d
FTM_MODE_FTMEN_SHIFT	derivative.h	8857;"	d
FTM_MODE_INIT_MASK	derivative.h	8858;"	d
FTM_MODE_INIT_SHIFT	derivative.h	8859;"	d
FTM_MODE_PWMSYNC_MASK	derivative.h	8862;"	d
FTM_MODE_PWMSYNC_SHIFT	derivative.h	8863;"	d
FTM_MODE_REG	derivative.h	8761;"	d
FTM_MODE_WPDIS_MASK	derivative.h	8860;"	d
FTM_MODE_WPDIS_SHIFT	derivative.h	8861;"	d
FTM_MOD_MOD	derivative.h	8814;"	d
FTM_MOD_MOD_MASK	derivative.h	8812;"	d
FTM_MOD_MOD_SHIFT	derivative.h	8813;"	d
FTM_MOD_REG	derivative.h	8756;"	d
FTM_MemMap	derivative.h	/^typedef struct FTM_MemMap {$/;"	s
FTM_MemMapPtr	derivative.h	/^} volatile *FTM_MemMapPtr;$/;"	t
FTM_OUTINIT_CH0OI_MASK	derivative.h	8889;"	d
FTM_OUTINIT_CH0OI_SHIFT	derivative.h	8890;"	d
FTM_OUTINIT_CH1OI_MASK	derivative.h	8891;"	d
FTM_OUTINIT_CH1OI_SHIFT	derivative.h	8892;"	d
FTM_OUTINIT_CH2OI_MASK	derivative.h	8893;"	d
FTM_OUTINIT_CH2OI_SHIFT	derivative.h	8894;"	d
FTM_OUTINIT_CH3OI_MASK	derivative.h	8895;"	d
FTM_OUTINIT_CH3OI_SHIFT	derivative.h	8896;"	d
FTM_OUTINIT_CH4OI_MASK	derivative.h	8897;"	d
FTM_OUTINIT_CH4OI_SHIFT	derivative.h	8898;"	d
FTM_OUTINIT_CH5OI_MASK	derivative.h	8899;"	d
FTM_OUTINIT_CH5OI_SHIFT	derivative.h	8900;"	d
FTM_OUTINIT_CH6OI_MASK	derivative.h	8901;"	d
FTM_OUTINIT_CH6OI_SHIFT	derivative.h	8902;"	d
FTM_OUTINIT_CH7OI_MASK	derivative.h	8903;"	d
FTM_OUTINIT_CH7OI_SHIFT	derivative.h	8904;"	d
FTM_OUTINIT_REG	derivative.h	8763;"	d
FTM_OUTMASK_CH0OM_MASK	derivative.h	8906;"	d
FTM_OUTMASK_CH0OM_SHIFT	derivative.h	8907;"	d
FTM_OUTMASK_CH1OM_MASK	derivative.h	8908;"	d
FTM_OUTMASK_CH1OM_SHIFT	derivative.h	8909;"	d
FTM_OUTMASK_CH2OM_MASK	derivative.h	8910;"	d
FTM_OUTMASK_CH2OM_SHIFT	derivative.h	8911;"	d
FTM_OUTMASK_CH3OM_MASK	derivative.h	8912;"	d
FTM_OUTMASK_CH3OM_SHIFT	derivative.h	8913;"	d
FTM_OUTMASK_CH4OM_MASK	derivative.h	8914;"	d
FTM_OUTMASK_CH4OM_SHIFT	derivative.h	8915;"	d
FTM_OUTMASK_CH5OM_MASK	derivative.h	8916;"	d
FTM_OUTMASK_CH5OM_SHIFT	derivative.h	8917;"	d
FTM_OUTMASK_CH6OM_MASK	derivative.h	8918;"	d
FTM_OUTMASK_CH6OM_SHIFT	derivative.h	8919;"	d
FTM_OUTMASK_CH7OM_MASK	derivative.h	8920;"	d
FTM_OUTMASK_CH7OM_SHIFT	derivative.h	8921;"	d
FTM_OUTMASK_REG	derivative.h	8764;"	d
FTM_POL_POL0_MASK	derivative.h	9004;"	d
FTM_POL_POL0_SHIFT	derivative.h	9005;"	d
FTM_POL_POL1_MASK	derivative.h	9006;"	d
FTM_POL_POL1_SHIFT	derivative.h	9007;"	d
FTM_POL_POL2_MASK	derivative.h	9008;"	d
FTM_POL_POL2_SHIFT	derivative.h	9009;"	d
FTM_POL_POL3_MASK	derivative.h	9010;"	d
FTM_POL_POL3_SHIFT	derivative.h	9011;"	d
FTM_POL_POL4_MASK	derivative.h	9012;"	d
FTM_POL_POL4_SHIFT	derivative.h	9013;"	d
FTM_POL_POL5_MASK	derivative.h	9014;"	d
FTM_POL_POL5_SHIFT	derivative.h	9015;"	d
FTM_POL_POL6_MASK	derivative.h	9016;"	d
FTM_POL_POL6_SHIFT	derivative.h	9017;"	d
FTM_POL_POL7_MASK	derivative.h	9018;"	d
FTM_POL_POL7_SHIFT	derivative.h	9019;"	d
FTM_POL_REG	derivative.h	8768;"	d
FTM_PWMLOAD_CH0SEL_MASK	derivative.h	9179;"	d
FTM_PWMLOAD_CH0SEL_SHIFT	derivative.h	9180;"	d
FTM_PWMLOAD_CH1SEL_MASK	derivative.h	9181;"	d
FTM_PWMLOAD_CH1SEL_SHIFT	derivative.h	9182;"	d
FTM_PWMLOAD_CH2SEL_MASK	derivative.h	9183;"	d
FTM_PWMLOAD_CH2SEL_SHIFT	derivative.h	9184;"	d
FTM_PWMLOAD_CH3SEL_MASK	derivative.h	9185;"	d
FTM_PWMLOAD_CH3SEL_SHIFT	derivative.h	9186;"	d
FTM_PWMLOAD_CH4SEL_MASK	derivative.h	9187;"	d
FTM_PWMLOAD_CH4SEL_SHIFT	derivative.h	9188;"	d
FTM_PWMLOAD_CH5SEL_MASK	derivative.h	9189;"	d
FTM_PWMLOAD_CH5SEL_SHIFT	derivative.h	9190;"	d
FTM_PWMLOAD_CH6SEL_MASK	derivative.h	9191;"	d
FTM_PWMLOAD_CH6SEL_SHIFT	derivative.h	9192;"	d
FTM_PWMLOAD_CH7SEL_MASK	derivative.h	9193;"	d
FTM_PWMLOAD_CH7SEL_SHIFT	derivative.h	9194;"	d
FTM_PWMLOAD_LDOK_MASK	derivative.h	9195;"	d
FTM_PWMLOAD_LDOK_SHIFT	derivative.h	9196;"	d
FTM_PWMLOAD_REG	derivative.h	8778;"	d
FTM_QDCTRL_PHAFLTREN_MASK	derivative.h	9083;"	d
FTM_QDCTRL_PHAFLTREN_SHIFT	derivative.h	9084;"	d
FTM_QDCTRL_PHAPOL_MASK	derivative.h	9079;"	d
FTM_QDCTRL_PHAPOL_SHIFT	derivative.h	9080;"	d
FTM_QDCTRL_PHBFLTREN_MASK	derivative.h	9081;"	d
FTM_QDCTRL_PHBFLTREN_SHIFT	derivative.h	9082;"	d
FTM_QDCTRL_PHBPOL_MASK	derivative.h	9077;"	d
FTM_QDCTRL_PHBPOL_SHIFT	derivative.h	9078;"	d
FTM_QDCTRL_QUADEN_MASK	derivative.h	9069;"	d
FTM_QDCTRL_QUADEN_SHIFT	derivative.h	9070;"	d
FTM_QDCTRL_QUADIR_MASK	derivative.h	9073;"	d
FTM_QDCTRL_QUADIR_SHIFT	derivative.h	9074;"	d
FTM_QDCTRL_QUADMODE_MASK	derivative.h	9075;"	d
FTM_QDCTRL_QUADMODE_SHIFT	derivative.h	9076;"	d
FTM_QDCTRL_REG	derivative.h	8772;"	d
FTM_QDCTRL_TOFDIR_MASK	derivative.h	9071;"	d
FTM_QDCTRL_TOFDIR_SHIFT	derivative.h	9072;"	d
FTM_SC_CLKS	derivative.h	8800;"	d
FTM_SC_CLKS_MASK	derivative.h	8798;"	d
FTM_SC_CLKS_SHIFT	derivative.h	8799;"	d
FTM_SC_CPWMS_MASK	derivative.h	8801;"	d
FTM_SC_CPWMS_SHIFT	derivative.h	8802;"	d
FTM_SC_PS	derivative.h	8797;"	d
FTM_SC_PS_MASK	derivative.h	8795;"	d
FTM_SC_PS_SHIFT	derivative.h	8796;"	d
FTM_SC_REG	derivative.h	8754;"	d
FTM_SC_TOF_MASK	derivative.h	8805;"	d
FTM_SC_TOF_SHIFT	derivative.h	8806;"	d
FTM_SC_TOIE_MASK	derivative.h	8803;"	d
FTM_SC_TOIE_SHIFT	derivative.h	8804;"	d
FTM_STATUS_CH0F_MASK	derivative.h	8839;"	d
FTM_STATUS_CH0F_SHIFT	derivative.h	8840;"	d
FTM_STATUS_CH1F_MASK	derivative.h	8841;"	d
FTM_STATUS_CH1F_SHIFT	derivative.h	8842;"	d
FTM_STATUS_CH2F_MASK	derivative.h	8843;"	d
FTM_STATUS_CH2F_SHIFT	derivative.h	8844;"	d
FTM_STATUS_CH3F_MASK	derivative.h	8845;"	d
FTM_STATUS_CH3F_SHIFT	derivative.h	8846;"	d
FTM_STATUS_CH4F_MASK	derivative.h	8847;"	d
FTM_STATUS_CH4F_SHIFT	derivative.h	8848;"	d
FTM_STATUS_CH5F_MASK	derivative.h	8849;"	d
FTM_STATUS_CH5F_SHIFT	derivative.h	8850;"	d
FTM_STATUS_CH6F_MASK	derivative.h	8851;"	d
FTM_STATUS_CH6F_SHIFT	derivative.h	8852;"	d
FTM_STATUS_CH7F_MASK	derivative.h	8853;"	d
FTM_STATUS_CH7F_SHIFT	derivative.h	8854;"	d
FTM_STATUS_REG	derivative.h	8760;"	d
FTM_SWOCTRL_CH0OCV_MASK	derivative.h	9162;"	d
FTM_SWOCTRL_CH0OCV_SHIFT	derivative.h	9163;"	d
FTM_SWOCTRL_CH0OC_MASK	derivative.h	9146;"	d
FTM_SWOCTRL_CH0OC_SHIFT	derivative.h	9147;"	d
FTM_SWOCTRL_CH1OCV_MASK	derivative.h	9164;"	d
FTM_SWOCTRL_CH1OCV_SHIFT	derivative.h	9165;"	d
FTM_SWOCTRL_CH1OC_MASK	derivative.h	9148;"	d
FTM_SWOCTRL_CH1OC_SHIFT	derivative.h	9149;"	d
FTM_SWOCTRL_CH2OCV_MASK	derivative.h	9166;"	d
FTM_SWOCTRL_CH2OCV_SHIFT	derivative.h	9167;"	d
FTM_SWOCTRL_CH2OC_MASK	derivative.h	9150;"	d
FTM_SWOCTRL_CH2OC_SHIFT	derivative.h	9151;"	d
FTM_SWOCTRL_CH3OCV_MASK	derivative.h	9168;"	d
FTM_SWOCTRL_CH3OCV_SHIFT	derivative.h	9169;"	d
FTM_SWOCTRL_CH3OC_MASK	derivative.h	9152;"	d
FTM_SWOCTRL_CH3OC_SHIFT	derivative.h	9153;"	d
FTM_SWOCTRL_CH4OCV_MASK	derivative.h	9170;"	d
FTM_SWOCTRL_CH4OCV_SHIFT	derivative.h	9171;"	d
FTM_SWOCTRL_CH4OC_MASK	derivative.h	9154;"	d
FTM_SWOCTRL_CH4OC_SHIFT	derivative.h	9155;"	d
FTM_SWOCTRL_CH5OCV_MASK	derivative.h	9172;"	d
FTM_SWOCTRL_CH5OCV_SHIFT	derivative.h	9173;"	d
FTM_SWOCTRL_CH5OC_MASK	derivative.h	9156;"	d
FTM_SWOCTRL_CH5OC_SHIFT	derivative.h	9157;"	d
FTM_SWOCTRL_CH6OCV_MASK	derivative.h	9174;"	d
FTM_SWOCTRL_CH6OCV_SHIFT	derivative.h	9175;"	d
FTM_SWOCTRL_CH6OC_MASK	derivative.h	9158;"	d
FTM_SWOCTRL_CH6OC_SHIFT	derivative.h	9159;"	d
FTM_SWOCTRL_CH7OCV_MASK	derivative.h	9176;"	d
FTM_SWOCTRL_CH7OCV_SHIFT	derivative.h	9177;"	d
FTM_SWOCTRL_CH7OC_MASK	derivative.h	9160;"	d
FTM_SWOCTRL_CH7OC_SHIFT	derivative.h	9161;"	d
FTM_SWOCTRL_REG	derivative.h	8777;"	d
FTM_SYNCONF_CNTINC_MASK	derivative.h	9108;"	d
FTM_SYNCONF_CNTINC_SHIFT	derivative.h	9109;"	d
FTM_SYNCONF_HWINVC_MASK	derivative.h	9132;"	d
FTM_SYNCONF_HWINVC_SHIFT	derivative.h	9133;"	d
FTM_SYNCONF_HWOM_MASK	derivative.h	9130;"	d
FTM_SYNCONF_HWOM_SHIFT	derivative.h	9131;"	d
FTM_SYNCONF_HWRSTCNT_MASK	derivative.h	9126;"	d
FTM_SYNCONF_HWRSTCNT_SHIFT	derivative.h	9127;"	d
FTM_SYNCONF_HWSOC_MASK	derivative.h	9134;"	d
FTM_SYNCONF_HWSOC_SHIFT	derivative.h	9135;"	d
FTM_SYNCONF_HWTRIGMODE_MASK	derivative.h	9106;"	d
FTM_SYNCONF_HWTRIGMODE_SHIFT	derivative.h	9107;"	d
FTM_SYNCONF_HWWRBUF_MASK	derivative.h	9128;"	d
FTM_SYNCONF_HWWRBUF_SHIFT	derivative.h	9129;"	d
FTM_SYNCONF_INVC_MASK	derivative.h	9110;"	d
FTM_SYNCONF_INVC_SHIFT	derivative.h	9111;"	d
FTM_SYNCONF_REG	derivative.h	8775;"	d
FTM_SYNCONF_SWINVC_MASK	derivative.h	9122;"	d
FTM_SYNCONF_SWINVC_SHIFT	derivative.h	9123;"	d
FTM_SYNCONF_SWOC_MASK	derivative.h	9112;"	d
FTM_SYNCONF_SWOC_SHIFT	derivative.h	9113;"	d
FTM_SYNCONF_SWOM_MASK	derivative.h	9120;"	d
FTM_SYNCONF_SWOM_SHIFT	derivative.h	9121;"	d
FTM_SYNCONF_SWRSTCNT_MASK	derivative.h	9116;"	d
FTM_SYNCONF_SWRSTCNT_SHIFT	derivative.h	9117;"	d
FTM_SYNCONF_SWSOC_MASK	derivative.h	9124;"	d
FTM_SYNCONF_SWSOC_SHIFT	derivative.h	9125;"	d
FTM_SYNCONF_SWWRBUF_MASK	derivative.h	9118;"	d
FTM_SYNCONF_SWWRBUF_SHIFT	derivative.h	9119;"	d
FTM_SYNCONF_SYNCMODE_MASK	derivative.h	9114;"	d
FTM_SYNCONF_SYNCMODE_SHIFT	derivative.h	9115;"	d
FTM_SYNC_CNTMAX_MASK	derivative.h	8874;"	d
FTM_SYNC_CNTMAX_SHIFT	derivative.h	8875;"	d
FTM_SYNC_CNTMIN_MASK	derivative.h	8872;"	d
FTM_SYNC_CNTMIN_SHIFT	derivative.h	8873;"	d
FTM_SYNC_REG	derivative.h	8762;"	d
FTM_SYNC_REINIT_MASK	derivative.h	8876;"	d
FTM_SYNC_REINIT_SHIFT	derivative.h	8877;"	d
FTM_SYNC_SWSYNC_MASK	derivative.h	8886;"	d
FTM_SYNC_SWSYNC_SHIFT	derivative.h	8887;"	d
FTM_SYNC_SYNCHOM_MASK	derivative.h	8878;"	d
FTM_SYNC_SYNCHOM_SHIFT	derivative.h	8879;"	d
FTM_SYNC_TRIG0_MASK	derivative.h	8880;"	d
FTM_SYNC_TRIG0_SHIFT	derivative.h	8881;"	d
FTM_SYNC_TRIG1_MASK	derivative.h	8882;"	d
FTM_SYNC_TRIG1_SHIFT	derivative.h	8883;"	d
FTM_SYNC_TRIG2_MASK	derivative.h	8884;"	d
FTM_SYNC_TRIG2_SHIFT	derivative.h	8885;"	d
FTRL	derivative.h	/^  uint32_t FTRL;                                   \/**< Frame Truncation Length, offset: 0x1B0 *\/$/;"	m	struct:ENET_MemMap
FUNCTION	derivative.h	/^    uint32_t FUNCTION;                               \/**< Function Register 0..Function Register 3, array offset: 0x28, array step: 0x10 *\/$/;"	m	struct:DWT_MemMap::__anon19
GALR	derivative.h	/^  uint32_t GALR;                                   \/**< Descriptor Group Lower Address Register, offset: 0x124 *\/$/;"	m	struct:ENET_MemMap
GAUR	derivative.h	/^  uint32_t GAUR;                                   \/**< Descriptor Group Upper Address Register, offset: 0x120 *\/$/;"	m	struct:ENET_MemMap
GENCS	derivative.h	/^  uint32_t GENCS;                                  \/**< General Control and Status Register, offset: 0x0 *\/$/;"	m	struct:TSI_MemMap
GPCHR	derivative.h	/^  uint32_t GPCHR;                                  \/**< Global Pin Control High Register, offset: 0x84 *\/$/;"	m	struct:PORT_MemMap
GPCLR	derivative.h	/^  uint32_t GPCLR;                                  \/**< Global Pin Control Low Register, offset: 0x80 *\/$/;"	m	struct:PORT_MemMap
GPIOA_PCOR	derivative.h	9494;"	d
GPIOA_PDDR	derivative.h	9497;"	d
GPIOA_PDIR	derivative.h	9496;"	d
GPIOA_PDOR	derivative.h	9492;"	d
GPIOA_PSOR	derivative.h	9493;"	d
GPIOA_PTOR	derivative.h	9495;"	d
GPIOB_PCOR	derivative.h	9501;"	d
GPIOB_PDDR	derivative.h	9504;"	d
GPIOB_PDIR	derivative.h	9503;"	d
GPIOB_PDOR	derivative.h	9499;"	d
GPIOB_PSOR	derivative.h	9500;"	d
GPIOB_PTOR	derivative.h	9502;"	d
GPIOC_PCOR	derivative.h	9508;"	d
GPIOC_PDDR	derivative.h	9511;"	d
GPIOC_PDIR	derivative.h	9510;"	d
GPIOC_PDOR	derivative.h	9506;"	d
GPIOC_PSOR	derivative.h	9507;"	d
GPIOC_PTOR	derivative.h	9509;"	d
GPIOD_PCOR	derivative.h	9515;"	d
GPIOD_PDDR	derivative.h	9518;"	d
GPIOD_PDIR	derivative.h	9517;"	d
GPIOD_PDOR	derivative.h	9513;"	d
GPIOD_PSOR	derivative.h	9514;"	d
GPIOD_PTOR	derivative.h	9516;"	d
GPIOE_PCOR	derivative.h	9522;"	d
GPIOE_PDDR	derivative.h	9525;"	d
GPIOE_PDIR	derivative.h	9524;"	d
GPIOE_PDOR	derivative.h	9520;"	d
GPIOE_PSOR	derivative.h	9521;"	d
GPIOE_PTOR	derivative.h	9523;"	d
GPIOF_PCOR	derivative.h	9529;"	d
GPIOF_PDDR	derivative.h	9532;"	d
GPIOF_PDIR	derivative.h	9531;"	d
GPIOF_PDOR	derivative.h	9527;"	d
GPIOF_PSOR	derivative.h	9528;"	d
GPIOF_PTOR	derivative.h	9530;"	d
GPIO_BASE_PTRS	derivative.h	9478;"	d
GPIO_MemMap	derivative.h	/^typedef struct GPIO_MemMap {$/;"	s
GPIO_MemMapPtr	derivative.h	/^} volatile *GPIO_MemMapPtr;$/;"	t
GPIO_PCOR_PTCO	derivative.h	9445;"	d
GPIO_PCOR_PTCO_MASK	derivative.h	9443;"	d
GPIO_PCOR_PTCO_SHIFT	derivative.h	9444;"	d
GPIO_PCOR_REG	derivative.h	9415;"	d
GPIO_PDDR_PDD	derivative.h	9457;"	d
GPIO_PDDR_PDD_MASK	derivative.h	9455;"	d
GPIO_PDDR_PDD_SHIFT	derivative.h	9456;"	d
GPIO_PDDR_REG	derivative.h	9418;"	d
GPIO_PDIR_PDI	derivative.h	9453;"	d
GPIO_PDIR_PDI_MASK	derivative.h	9451;"	d
GPIO_PDIR_PDI_SHIFT	derivative.h	9452;"	d
GPIO_PDIR_REG	derivative.h	9417;"	d
GPIO_PDOR_PDO	derivative.h	9437;"	d
GPIO_PDOR_PDO_MASK	derivative.h	9435;"	d
GPIO_PDOR_PDO_SHIFT	derivative.h	9436;"	d
GPIO_PDOR_REG	derivative.h	9413;"	d
GPIO_PSOR_PTSO	derivative.h	9441;"	d
GPIO_PSOR_PTSO_MASK	derivative.h	9439;"	d
GPIO_PSOR_PTSO_SHIFT	derivative.h	9440;"	d
GPIO_PSOR_REG	derivative.h	9414;"	d
GPIO_PTOR_PTTO	derivative.h	9449;"	d
GPIO_PTOR_PTTO_MASK	derivative.h	9447;"	d
GPIO_PTOR_PTTO_SHIFT	derivative.h	9448;"	d
GPIO_PTOR_REG	derivative.h	9416;"	d
GPOLY	derivative.h	/^    uint32_t GPOLY;                                  \/**< CRC Polynomial Register, offset: 0x4 *\/$/;"	m	union:CRC_MemMap::__anon8
GPOLYH	derivative.h	/^      uint16_t GPOLYH;                                 \/**< CRC_GPOLYH register., offset: 0x6 *\/$/;"	m	struct:CRC_MemMap::__anon8::__anon9
GPOLYHL	derivative.h	/^      uint8_t GPOLYHL;                                 \/**< CRC_GPOLYHL register., offset: 0x6 *\/$/;"	m	struct:CRC_MemMap::__anon8::__anon10
GPOLYHU	derivative.h	/^      uint8_t GPOLYHU;                                 \/**< CRC_GPOLYHU register., offset: 0x7 *\/$/;"	m	struct:CRC_MemMap::__anon8::__anon10
GPOLYL	derivative.h	/^      uint16_t GPOLYL;                                 \/**< CRC_GPOLYL register., offset: 0x4 *\/$/;"	m	struct:CRC_MemMap::__anon8::__anon9
GPOLYLL	derivative.h	/^      uint8_t GPOLYLL;                                 \/**< CRC_GPOLYLL register., offset: 0x4 *\/$/;"	m	struct:CRC_MemMap::__anon8::__anon10
GPOLYLU	derivative.h	/^      uint8_t GPOLYLU;                                 \/**< CRC_GPOLYLU register., offset: 0x5 *\/$/;"	m	struct:CRC_MemMap::__anon8::__anon10
GPOLY_ACCESS16BIT	derivative.h	/^    } GPOLY_ACCESS16BIT;$/;"	m	union:CRC_MemMap::__anon8	typeref:struct:CRC_MemMap::__anon8::__anon9
GPOLY_ACCESS8BIT	derivative.h	/^    } GPOLY_ACCESS8BIT;$/;"	m	union:CRC_MemMap::__anon8	typeref:struct:CRC_MemMap::__anon8::__anon10
GPTIMER0CTL	derivative.h	/^  uint32_t GPTIMER0CTL;                            \/**< General Purpose Timer n Control Register, offset: 0x84 *\/$/;"	m	struct:USBHS_MemMap
GPTIMER0LD	derivative.h	/^  uint32_t GPTIMER0LD;                             \/**< General Purpose Timer n Load Register, offset: 0x80 *\/$/;"	m	struct:USBHS_MemMap
GPTIMER1CTL	derivative.h	/^  uint32_t GPTIMER1CTL;                            \/**< General Purpose Timer n Control Register, offset: 0x8C *\/$/;"	m	struct:USBHS_MemMap
GPTIMER1LD	derivative.h	/^  uint32_t GPTIMER1LD;                             \/**< General Purpose Timer n Load Register, offset: 0x88 *\/$/;"	m	struct:USBHS_MemMap
HCCPARAMS	derivative.h	/^  uint32_t HCCPARAMS;                              \/**< Host Controller Capability Parameters Register, offset: 0x108 *\/$/;"	m	struct:USBHS_MemMap
HCIVERSION	derivative.h	/^  uint32_t HCIVERSION;                             \/**< Host Controller Interface Version and Capability Registers Length Register, offset: 0x100 *\/$/;"	m	struct:USBHS_MemMap
HCSPARAMS	derivative.h	/^  uint32_t HCSPARAMS;                              \/**< Host Controller Structural Parameters Register, offset: 0x104 *\/$/;"	m	struct:USBHS_MemMap
HFSR	derivative.h	/^  uint32_t HFSR;                                   \/**< HardFault Status register, offset: 0xD2C *\/$/;"	m	struct:SCB_MemMap
HOSTVER	derivative.h	/^  uint32_t HOSTVER;                                \/**< Host Controller Version, offset: 0xFC *\/$/;"	m	struct:SDHC_MemMap
HRS	derivative.h	/^  uint32_t HRS;                                    \/**< Hardware Request Status Register, offset: 0x34 *\/$/;"	m	struct:DMA_MemMap
HTCAPBLT	derivative.h	/^  uint32_t HTCAPBLT;                               \/**< Host Controller Capabilities, offset: 0x40 *\/$/;"	m	struct:SDHC_MemMap
HWDEVICE	derivative.h	/^  uint32_t HWDEVICE;                               \/**< Device Hardware Parameters Register, offset: 0xC *\/$/;"	m	struct:USBHS_MemMap
HWGENERAL	derivative.h	/^  uint32_t HWGENERAL;                              \/**< General Hardware Parameters Register, offset: 0x4 *\/$/;"	m	struct:USBHS_MemMap
HWHOST	derivative.h	/^  uint32_t HWHOST;                                 \/**< Host Hardware Parameters Register, offset: 0x8 *\/$/;"	m	struct:USBHS_MemMap
HWRXBUF	derivative.h	/^  uint32_t HWRXBUF;                                \/**< Receive Buffer Hardware Parameters Register, offset: 0x14 *\/$/;"	m	struct:USBHS_MemMap
HWTXBUF	derivative.h	/^  uint32_t HWTXBUF;                                \/**< Transmit Buffer Hardware Parameters Register, offset: 0x10 *\/$/;"	m	struct:USBHS_MemMap
I2C0_A1	derivative.h	9733;"	d
I2C0_A2	derivative.h	9742;"	d
I2C0_BASE_PTR	derivative.h	9715;"	d
I2C0_C1	derivative.h	9735;"	d
I2C0_C2	derivative.h	9738;"	d
I2C0_D	derivative.h	9737;"	d
I2C0_F	derivative.h	9734;"	d
I2C0_FLT	derivative.h	9739;"	d
I2C0_RA	derivative.h	9740;"	d
I2C0_S	derivative.h	9736;"	d
I2C0_SLTH	derivative.h	9743;"	d
I2C0_SLTL	derivative.h	9744;"	d
I2C0_SMB	derivative.h	9741;"	d
I2C1_A1	derivative.h	9746;"	d
I2C1_A2	derivative.h	9755;"	d
I2C1_BASE_PTR	derivative.h	9717;"	d
I2C1_C1	derivative.h	9748;"	d
I2C1_C2	derivative.h	9751;"	d
I2C1_D	derivative.h	9750;"	d
I2C1_F	derivative.h	9747;"	d
I2C1_FLT	derivative.h	9752;"	d
I2C1_RA	derivative.h	9753;"	d
I2C1_S	derivative.h	9749;"	d
I2C1_SLTH	derivative.h	9756;"	d
I2C1_SLTL	derivative.h	9757;"	d
I2C1_SMB	derivative.h	9754;"	d
I2C_A1_AD	derivative.h	9610;"	d
I2C_A1_AD_MASK	derivative.h	9608;"	d
I2C_A1_AD_SHIFT	derivative.h	9609;"	d
I2C_A1_REG	derivative.h	9580;"	d
I2C_A2_REG	derivative.h	9589;"	d
I2C_A2_SAD	derivative.h	9698;"	d
I2C_A2_SAD_MASK	derivative.h	9696;"	d
I2C_A2_SAD_SHIFT	derivative.h	9697;"	d
I2C_BASE_PTRS	derivative.h	9719;"	d
I2C_C1_DMAEN_MASK	derivative.h	9619;"	d
I2C_C1_DMAEN_SHIFT	derivative.h	9620;"	d
I2C_C1_IICEN_MASK	derivative.h	9633;"	d
I2C_C1_IICEN_SHIFT	derivative.h	9634;"	d
I2C_C1_IICIE_MASK	derivative.h	9631;"	d
I2C_C1_IICIE_SHIFT	derivative.h	9632;"	d
I2C_C1_MST_MASK	derivative.h	9629;"	d
I2C_C1_MST_SHIFT	derivative.h	9630;"	d
I2C_C1_REG	derivative.h	9582;"	d
I2C_C1_RSTA_MASK	derivative.h	9623;"	d
I2C_C1_RSTA_SHIFT	derivative.h	9624;"	d
I2C_C1_TXAK_MASK	derivative.h	9625;"	d
I2C_C1_TXAK_SHIFT	derivative.h	9626;"	d
I2C_C1_TX_MASK	derivative.h	9627;"	d
I2C_C1_TX_SHIFT	derivative.h	9628;"	d
I2C_C1_WUEN_MASK	derivative.h	9621;"	d
I2C_C1_WUEN_SHIFT	derivative.h	9622;"	d
I2C_C2_AD	derivative.h	9659;"	d
I2C_C2_ADEXT_MASK	derivative.h	9666;"	d
I2C_C2_ADEXT_SHIFT	derivative.h	9667;"	d
I2C_C2_AD_MASK	derivative.h	9657;"	d
I2C_C2_AD_SHIFT	derivative.h	9658;"	d
I2C_C2_GCAEN_MASK	derivative.h	9668;"	d
I2C_C2_GCAEN_SHIFT	derivative.h	9669;"	d
I2C_C2_HDRS_MASK	derivative.h	9664;"	d
I2C_C2_HDRS_SHIFT	derivative.h	9665;"	d
I2C_C2_REG	derivative.h	9585;"	d
I2C_C2_RMEN_MASK	derivative.h	9660;"	d
I2C_C2_RMEN_SHIFT	derivative.h	9661;"	d
I2C_C2_SBRC_MASK	derivative.h	9662;"	d
I2C_C2_SBRC_SHIFT	derivative.h	9663;"	d
I2C_D_DATA	derivative.h	9655;"	d
I2C_D_DATA_MASK	derivative.h	9653;"	d
I2C_D_DATA_SHIFT	derivative.h	9654;"	d
I2C_D_REG	derivative.h	9584;"	d
I2C_FLT_FLT	derivative.h	9673;"	d
I2C_FLT_FLT_MASK	derivative.h	9671;"	d
I2C_FLT_FLT_SHIFT	derivative.h	9672;"	d
I2C_FLT_REG	derivative.h	9586;"	d
I2C_F_ICR	derivative.h	9614;"	d
I2C_F_ICR_MASK	derivative.h	9612;"	d
I2C_F_ICR_SHIFT	derivative.h	9613;"	d
I2C_F_MULT	derivative.h	9617;"	d
I2C_F_MULT_MASK	derivative.h	9615;"	d
I2C_F_MULT_SHIFT	derivative.h	9616;"	d
I2C_F_REG	derivative.h	9581;"	d
I2C_MemMap	derivative.h	/^typedef struct I2C_MemMap {$/;"	s
I2C_MemMapPtr	derivative.h	/^} volatile *I2C_MemMapPtr;$/;"	t
I2C_RA_RAD	derivative.h	9677;"	d
I2C_RA_RAD_MASK	derivative.h	9675;"	d
I2C_RA_RAD_SHIFT	derivative.h	9676;"	d
I2C_RA_REG	derivative.h	9587;"	d
I2C_SLTH_REG	derivative.h	9590;"	d
I2C_SLTH_SSLT	derivative.h	9702;"	d
I2C_SLTH_SSLT_MASK	derivative.h	9700;"	d
I2C_SLTH_SSLT_SHIFT	derivative.h	9701;"	d
I2C_SLTL_REG	derivative.h	9591;"	d
I2C_SLTL_SSLT	derivative.h	9706;"	d
I2C_SLTL_SSLT_MASK	derivative.h	9704;"	d
I2C_SLTL_SSLT_SHIFT	derivative.h	9705;"	d
I2C_SMB_ALERTEN_MASK	derivative.h	9691;"	d
I2C_SMB_ALERTEN_SHIFT	derivative.h	9692;"	d
I2C_SMB_FACK_MASK	derivative.h	9693;"	d
I2C_SMB_FACK_SHIFT	derivative.h	9694;"	d
I2C_SMB_REG	derivative.h	9588;"	d
I2C_SMB_SHTF1_MASK	derivative.h	9683;"	d
I2C_SMB_SHTF1_SHIFT	derivative.h	9684;"	d
I2C_SMB_SHTF2IE_MASK	derivative.h	9679;"	d
I2C_SMB_SHTF2IE_SHIFT	derivative.h	9680;"	d
I2C_SMB_SHTF2_MASK	derivative.h	9681;"	d
I2C_SMB_SHTF2_SHIFT	derivative.h	9682;"	d
I2C_SMB_SIICAEN_MASK	derivative.h	9689;"	d
I2C_SMB_SIICAEN_SHIFT	derivative.h	9690;"	d
I2C_SMB_SLTF_MASK	derivative.h	9685;"	d
I2C_SMB_SLTF_SHIFT	derivative.h	9686;"	d
I2C_SMB_TCKSEL_MASK	derivative.h	9687;"	d
I2C_SMB_TCKSEL_SHIFT	derivative.h	9688;"	d
I2C_S_ARBL_MASK	derivative.h	9644;"	d
I2C_S_ARBL_SHIFT	derivative.h	9645;"	d
I2C_S_BUSY_MASK	derivative.h	9646;"	d
I2C_S_BUSY_SHIFT	derivative.h	9647;"	d
I2C_S_IAAS_MASK	derivative.h	9648;"	d
I2C_S_IAAS_SHIFT	derivative.h	9649;"	d
I2C_S_IICIF_MASK	derivative.h	9638;"	d
I2C_S_IICIF_SHIFT	derivative.h	9639;"	d
I2C_S_RAM_MASK	derivative.h	9642;"	d
I2C_S_RAM_SHIFT	derivative.h	9643;"	d
I2C_S_REG	derivative.h	9583;"	d
I2C_S_RXAK_MASK	derivative.h	9636;"	d
I2C_S_RXAK_SHIFT	derivative.h	9637;"	d
I2C_S_SRW_MASK	derivative.h	9640;"	d
I2C_S_SRW_SHIFT	derivative.h	9641;"	d
I2C_S_TCF_MASK	derivative.h	9650;"	d
I2C_S_TCF_SHIFT	derivative.h	9651;"	d
I2S0_BASE_PTR	derivative.h	10091;"	d
I2S0_MCR	derivative.h	10131;"	d
I2S0_MDR	derivative.h	10132;"	d
I2S0_RCR1	derivative.h	10121;"	d
I2S0_RCR2	derivative.h	10122;"	d
I2S0_RCR3	derivative.h	10123;"	d
I2S0_RCR4	derivative.h	10124;"	d
I2S0_RCR5	derivative.h	10125;"	d
I2S0_RCSR	derivative.h	10120;"	d
I2S0_RDR	derivative.h	10164;"	d
I2S0_RDR0	derivative.h	10126;"	d
I2S0_RDR1	derivative.h	10127;"	d
I2S0_RFR	derivative.h	10166;"	d
I2S0_RFR0	derivative.h	10128;"	d
I2S0_RFR1	derivative.h	10129;"	d
I2S0_RMR	derivative.h	10130;"	d
I2S0_TCR1	derivative.h	10110;"	d
I2S0_TCR2	derivative.h	10111;"	d
I2S0_TCR3	derivative.h	10112;"	d
I2S0_TCR4	derivative.h	10113;"	d
I2S0_TCR5	derivative.h	10114;"	d
I2S0_TCSR	derivative.h	10109;"	d
I2S0_TDR	derivative.h	10160;"	d
I2S0_TDR0	derivative.h	10115;"	d
I2S0_TDR1	derivative.h	10116;"	d
I2S0_TFR	derivative.h	10162;"	d
I2S0_TFR0	derivative.h	10117;"	d
I2S0_TFR1	derivative.h	10118;"	d
I2S0_TMR	derivative.h	10119;"	d
I2S1_BASE_PTR	derivative.h	10093;"	d
I2S1_MCR	derivative.h	10156;"	d
I2S1_MDR	derivative.h	10157;"	d
I2S1_RCR1	derivative.h	10146;"	d
I2S1_RCR2	derivative.h	10147;"	d
I2S1_RCR3	derivative.h	10148;"	d
I2S1_RCR4	derivative.h	10149;"	d
I2S1_RCR5	derivative.h	10150;"	d
I2S1_RCSR	derivative.h	10145;"	d
I2S1_RDR	derivative.h	10165;"	d
I2S1_RDR0	derivative.h	10151;"	d
I2S1_RDR1	derivative.h	10152;"	d
I2S1_RFR	derivative.h	10167;"	d
I2S1_RFR0	derivative.h	10153;"	d
I2S1_RFR1	derivative.h	10154;"	d
I2S1_RMR	derivative.h	10155;"	d
I2S1_TCR1	derivative.h	10135;"	d
I2S1_TCR2	derivative.h	10136;"	d
I2S1_TCR3	derivative.h	10137;"	d
I2S1_TCR4	derivative.h	10138;"	d
I2S1_TCR5	derivative.h	10139;"	d
I2S1_TCSR	derivative.h	10134;"	d
I2S1_TDR	derivative.h	10161;"	d
I2S1_TDR0	derivative.h	10140;"	d
I2S1_TDR1	derivative.h	10141;"	d
I2S1_TFR	derivative.h	10163;"	d
I2S1_TFR0	derivative.h	10142;"	d
I2S1_TFR1	derivative.h	10143;"	d
I2S1_TMR	derivative.h	10144;"	d
I2S_BASE_PTRS	derivative.h	10095;"	d
I2S_MCR_DUF_MASK	derivative.h	10074;"	d
I2S_MCR_DUF_SHIFT	derivative.h	10075;"	d
I2S_MCR_MICS	derivative.h	10071;"	d
I2S_MCR_MICS_MASK	derivative.h	10069;"	d
I2S_MCR_MICS_SHIFT	derivative.h	10070;"	d
I2S_MCR_MOE_MASK	derivative.h	10072;"	d
I2S_MCR_MOE_SHIFT	derivative.h	10073;"	d
I2S_MCR_REG	derivative.h	9839;"	d
I2S_MDR_DIVIDE	derivative.h	10079;"	d
I2S_MDR_DIVIDE_MASK	derivative.h	10077;"	d
I2S_MDR_DIVIDE_SHIFT	derivative.h	10078;"	d
I2S_MDR_FRACT	derivative.h	10082;"	d
I2S_MDR_FRACT_MASK	derivative.h	10080;"	d
I2S_MDR_FRACT_SHIFT	derivative.h	10081;"	d
I2S_MDR_REG	derivative.h	9840;"	d
I2S_MemMap	derivative.h	/^typedef struct I2S_MemMap {$/;"	s
I2S_MemMapPtr	derivative.h	/^} volatile *I2S_MemMapPtr;$/;"	t
I2S_RCR1_REG	derivative.h	9831;"	d
I2S_RCR1_RFW	derivative.h	10002;"	d
I2S_RCR1_RFW_MASK	derivative.h	10000;"	d
I2S_RCR1_RFW_SHIFT	derivative.h	10001;"	d
I2S_RCR2_BCD_MASK	derivative.h	10007;"	d
I2S_RCR2_BCD_SHIFT	derivative.h	10008;"	d
I2S_RCR2_BCI_MASK	derivative.h	10014;"	d
I2S_RCR2_BCI_SHIFT	derivative.h	10015;"	d
I2S_RCR2_BCP_MASK	derivative.h	10009;"	d
I2S_RCR2_BCP_SHIFT	derivative.h	10010;"	d
I2S_RCR2_BCS_MASK	derivative.h	10016;"	d
I2S_RCR2_BCS_SHIFT	derivative.h	10017;"	d
I2S_RCR2_DIV	derivative.h	10006;"	d
I2S_RCR2_DIV_MASK	derivative.h	10004;"	d
I2S_RCR2_DIV_SHIFT	derivative.h	10005;"	d
I2S_RCR2_MSEL	derivative.h	10013;"	d
I2S_RCR2_MSEL_MASK	derivative.h	10011;"	d
I2S_RCR2_MSEL_SHIFT	derivative.h	10012;"	d
I2S_RCR2_REG	derivative.h	9832;"	d
I2S_RCR2_SYNC	derivative.h	10020;"	d
I2S_RCR2_SYNC_MASK	derivative.h	10018;"	d
I2S_RCR2_SYNC_SHIFT	derivative.h	10019;"	d
I2S_RCR3_RCE	derivative.h	10027;"	d
I2S_RCR3_RCE_MASK	derivative.h	10025;"	d
I2S_RCR3_RCE_SHIFT	derivative.h	10026;"	d
I2S_RCR3_REG	derivative.h	9833;"	d
I2S_RCR3_WDFL	derivative.h	10024;"	d
I2S_RCR3_WDFL_MASK	derivative.h	10022;"	d
I2S_RCR3_WDFL_SHIFT	derivative.h	10023;"	d
I2S_RCR4_FRSZ	derivative.h	10042;"	d
I2S_RCR4_FRSZ_MASK	derivative.h	10040;"	d
I2S_RCR4_FRSZ_SHIFT	derivative.h	10041;"	d
I2S_RCR4_FSD_MASK	derivative.h	10029;"	d
I2S_RCR4_FSD_SHIFT	derivative.h	10030;"	d
I2S_RCR4_FSE_MASK	derivative.h	10033;"	d
I2S_RCR4_FSE_SHIFT	derivative.h	10034;"	d
I2S_RCR4_FSP_MASK	derivative.h	10031;"	d
I2S_RCR4_FSP_SHIFT	derivative.h	10032;"	d
I2S_RCR4_MF_MASK	derivative.h	10035;"	d
I2S_RCR4_MF_SHIFT	derivative.h	10036;"	d
I2S_RCR4_REG	derivative.h	9834;"	d
I2S_RCR4_SYWD	derivative.h	10039;"	d
I2S_RCR4_SYWD_MASK	derivative.h	10037;"	d
I2S_RCR4_SYWD_SHIFT	derivative.h	10038;"	d
I2S_RCR5_FBT	derivative.h	10046;"	d
I2S_RCR5_FBT_MASK	derivative.h	10044;"	d
I2S_RCR5_FBT_SHIFT	derivative.h	10045;"	d
I2S_RCR5_REG	derivative.h	9835;"	d
I2S_RCR5_W0W	derivative.h	10049;"	d
I2S_RCR5_W0W_MASK	derivative.h	10047;"	d
I2S_RCR5_W0W_SHIFT	derivative.h	10048;"	d
I2S_RCR5_WNW	derivative.h	10052;"	d
I2S_RCR5_WNW_MASK	derivative.h	10050;"	d
I2S_RCR5_WNW_SHIFT	derivative.h	10051;"	d
I2S_RCSR_BCE_MASK	derivative.h	9991;"	d
I2S_RCSR_BCE_SHIFT	derivative.h	9992;"	d
I2S_RCSR_DBGE_MASK	derivative.h	9993;"	d
I2S_RCSR_DBGE_SHIFT	derivative.h	9994;"	d
I2S_RCSR_FEF_MASK	derivative.h	9981;"	d
I2S_RCSR_FEF_SHIFT	derivative.h	9982;"	d
I2S_RCSR_FEIE_MASK	derivative.h	9971;"	d
I2S_RCSR_FEIE_SHIFT	derivative.h	9972;"	d
I2S_RCSR_FRDE_MASK	derivative.h	9963;"	d
I2S_RCSR_FRDE_SHIFT	derivative.h	9964;"	d
I2S_RCSR_FRF_MASK	derivative.h	9977;"	d
I2S_RCSR_FRF_SHIFT	derivative.h	9978;"	d
I2S_RCSR_FRIE_MASK	derivative.h	9967;"	d
I2S_RCSR_FRIE_SHIFT	derivative.h	9968;"	d
I2S_RCSR_FR_MASK	derivative.h	9989;"	d
I2S_RCSR_FR_SHIFT	derivative.h	9990;"	d
I2S_RCSR_FWDE_MASK	derivative.h	9965;"	d
I2S_RCSR_FWDE_SHIFT	derivative.h	9966;"	d
I2S_RCSR_FWF_MASK	derivative.h	9979;"	d
I2S_RCSR_FWF_SHIFT	derivative.h	9980;"	d
I2S_RCSR_FWIE_MASK	derivative.h	9969;"	d
I2S_RCSR_FWIE_SHIFT	derivative.h	9970;"	d
I2S_RCSR_REG	derivative.h	9830;"	d
I2S_RCSR_RE_MASK	derivative.h	9997;"	d
I2S_RCSR_RE_SHIFT	derivative.h	9998;"	d
I2S_RCSR_SEF_MASK	derivative.h	9983;"	d
I2S_RCSR_SEF_SHIFT	derivative.h	9984;"	d
I2S_RCSR_SEIE_MASK	derivative.h	9973;"	d
I2S_RCSR_SEIE_SHIFT	derivative.h	9974;"	d
I2S_RCSR_SR_MASK	derivative.h	9987;"	d
I2S_RCSR_SR_SHIFT	derivative.h	9988;"	d
I2S_RCSR_STOPE_MASK	derivative.h	9995;"	d
I2S_RCSR_STOPE_SHIFT	derivative.h	9996;"	d
I2S_RCSR_WSF_MASK	derivative.h	9985;"	d
I2S_RCSR_WSF_SHIFT	derivative.h	9986;"	d
I2S_RCSR_WSIE_MASK	derivative.h	9975;"	d
I2S_RCSR_WSIE_SHIFT	derivative.h	9976;"	d
I2S_RDR_RDR	derivative.h	10056;"	d
I2S_RDR_RDR_MASK	derivative.h	10054;"	d
I2S_RDR_RDR_SHIFT	derivative.h	10055;"	d
I2S_RDR_REG	derivative.h	9836;"	d
I2S_RFR_REG	derivative.h	9837;"	d
I2S_RFR_RFP	derivative.h	10060;"	d
I2S_RFR_RFP_MASK	derivative.h	10058;"	d
I2S_RFR_RFP_SHIFT	derivative.h	10059;"	d
I2S_RFR_WFP	derivative.h	10063;"	d
I2S_RFR_WFP_MASK	derivative.h	10061;"	d
I2S_RFR_WFP_SHIFT	derivative.h	10062;"	d
I2S_RMR_REG	derivative.h	9838;"	d
I2S_RMR_RWM	derivative.h	10067;"	d
I2S_RMR_RWM_MASK	derivative.h	10065;"	d
I2S_RMR_RWM_SHIFT	derivative.h	10066;"	d
I2S_TCR1_REG	derivative.h	9822;"	d
I2S_TCR1_TFW	derivative.h	9896;"	d
I2S_TCR1_TFW_MASK	derivative.h	9894;"	d
I2S_TCR1_TFW_SHIFT	derivative.h	9895;"	d
I2S_TCR2_BCD_MASK	derivative.h	9901;"	d
I2S_TCR2_BCD_SHIFT	derivative.h	9902;"	d
I2S_TCR2_BCI_MASK	derivative.h	9908;"	d
I2S_TCR2_BCI_SHIFT	derivative.h	9909;"	d
I2S_TCR2_BCP_MASK	derivative.h	9903;"	d
I2S_TCR2_BCP_SHIFT	derivative.h	9904;"	d
I2S_TCR2_BCS_MASK	derivative.h	9910;"	d
I2S_TCR2_BCS_SHIFT	derivative.h	9911;"	d
I2S_TCR2_DIV	derivative.h	9900;"	d
I2S_TCR2_DIV_MASK	derivative.h	9898;"	d
I2S_TCR2_DIV_SHIFT	derivative.h	9899;"	d
I2S_TCR2_MSEL	derivative.h	9907;"	d
I2S_TCR2_MSEL_MASK	derivative.h	9905;"	d
I2S_TCR2_MSEL_SHIFT	derivative.h	9906;"	d
I2S_TCR2_REG	derivative.h	9823;"	d
I2S_TCR2_SYNC	derivative.h	9914;"	d
I2S_TCR2_SYNC_MASK	derivative.h	9912;"	d
I2S_TCR2_SYNC_SHIFT	derivative.h	9913;"	d
I2S_TCR3_REG	derivative.h	9824;"	d
I2S_TCR3_TCE	derivative.h	9921;"	d
I2S_TCR3_TCE_MASK	derivative.h	9919;"	d
I2S_TCR3_TCE_SHIFT	derivative.h	9920;"	d
I2S_TCR3_WDFL	derivative.h	9918;"	d
I2S_TCR3_WDFL_MASK	derivative.h	9916;"	d
I2S_TCR3_WDFL_SHIFT	derivative.h	9917;"	d
I2S_TCR4_FRSZ	derivative.h	9936;"	d
I2S_TCR4_FRSZ_MASK	derivative.h	9934;"	d
I2S_TCR4_FRSZ_SHIFT	derivative.h	9935;"	d
I2S_TCR4_FSD_MASK	derivative.h	9923;"	d
I2S_TCR4_FSD_SHIFT	derivative.h	9924;"	d
I2S_TCR4_FSE_MASK	derivative.h	9927;"	d
I2S_TCR4_FSE_SHIFT	derivative.h	9928;"	d
I2S_TCR4_FSP_MASK	derivative.h	9925;"	d
I2S_TCR4_FSP_SHIFT	derivative.h	9926;"	d
I2S_TCR4_MF_MASK	derivative.h	9929;"	d
I2S_TCR4_MF_SHIFT	derivative.h	9930;"	d
I2S_TCR4_REG	derivative.h	9825;"	d
I2S_TCR4_SYWD	derivative.h	9933;"	d
I2S_TCR4_SYWD_MASK	derivative.h	9931;"	d
I2S_TCR4_SYWD_SHIFT	derivative.h	9932;"	d
I2S_TCR5_FBT	derivative.h	9940;"	d
I2S_TCR5_FBT_MASK	derivative.h	9938;"	d
I2S_TCR5_FBT_SHIFT	derivative.h	9939;"	d
I2S_TCR5_REG	derivative.h	9826;"	d
I2S_TCR5_W0W	derivative.h	9943;"	d
I2S_TCR5_W0W_MASK	derivative.h	9941;"	d
I2S_TCR5_W0W_SHIFT	derivative.h	9942;"	d
I2S_TCR5_WNW	derivative.h	9946;"	d
I2S_TCR5_WNW_MASK	derivative.h	9944;"	d
I2S_TCR5_WNW_SHIFT	derivative.h	9945;"	d
I2S_TCSR_BCE_MASK	derivative.h	9885;"	d
I2S_TCSR_BCE_SHIFT	derivative.h	9886;"	d
I2S_TCSR_DBGE_MASK	derivative.h	9887;"	d
I2S_TCSR_DBGE_SHIFT	derivative.h	9888;"	d
I2S_TCSR_FEF_MASK	derivative.h	9875;"	d
I2S_TCSR_FEF_SHIFT	derivative.h	9876;"	d
I2S_TCSR_FEIE_MASK	derivative.h	9865;"	d
I2S_TCSR_FEIE_SHIFT	derivative.h	9866;"	d
I2S_TCSR_FRDE_MASK	derivative.h	9857;"	d
I2S_TCSR_FRDE_SHIFT	derivative.h	9858;"	d
I2S_TCSR_FRF_MASK	derivative.h	9871;"	d
I2S_TCSR_FRF_SHIFT	derivative.h	9872;"	d
I2S_TCSR_FRIE_MASK	derivative.h	9861;"	d
I2S_TCSR_FRIE_SHIFT	derivative.h	9862;"	d
I2S_TCSR_FR_MASK	derivative.h	9883;"	d
I2S_TCSR_FR_SHIFT	derivative.h	9884;"	d
I2S_TCSR_FWDE_MASK	derivative.h	9859;"	d
I2S_TCSR_FWDE_SHIFT	derivative.h	9860;"	d
I2S_TCSR_FWF_MASK	derivative.h	9873;"	d
I2S_TCSR_FWF_SHIFT	derivative.h	9874;"	d
I2S_TCSR_FWIE_MASK	derivative.h	9863;"	d
I2S_TCSR_FWIE_SHIFT	derivative.h	9864;"	d
I2S_TCSR_REG	derivative.h	9821;"	d
I2S_TCSR_SEF_MASK	derivative.h	9877;"	d
I2S_TCSR_SEF_SHIFT	derivative.h	9878;"	d
I2S_TCSR_SEIE_MASK	derivative.h	9867;"	d
I2S_TCSR_SEIE_SHIFT	derivative.h	9868;"	d
I2S_TCSR_SR_MASK	derivative.h	9881;"	d
I2S_TCSR_SR_SHIFT	derivative.h	9882;"	d
I2S_TCSR_STOPE_MASK	derivative.h	9889;"	d
I2S_TCSR_STOPE_SHIFT	derivative.h	9890;"	d
I2S_TCSR_TE_MASK	derivative.h	9891;"	d
I2S_TCSR_TE_SHIFT	derivative.h	9892;"	d
I2S_TCSR_WSF_MASK	derivative.h	9879;"	d
I2S_TCSR_WSF_SHIFT	derivative.h	9880;"	d
I2S_TCSR_WSIE_MASK	derivative.h	9869;"	d
I2S_TCSR_WSIE_SHIFT	derivative.h	9870;"	d
I2S_TDR_REG	derivative.h	9827;"	d
I2S_TDR_TDR	derivative.h	9950;"	d
I2S_TDR_TDR_MASK	derivative.h	9948;"	d
I2S_TDR_TDR_SHIFT	derivative.h	9949;"	d
I2S_TFR_REG	derivative.h	9828;"	d
I2S_TFR_RFP	derivative.h	9954;"	d
I2S_TFR_RFP_MASK	derivative.h	9952;"	d
I2S_TFR_RFP_SHIFT	derivative.h	9953;"	d
I2S_TFR_WFP	derivative.h	9957;"	d
I2S_TFR_WFP_MASK	derivative.h	9955;"	d
I2S_TFR_WFP_SHIFT	derivative.h	9956;"	d
I2S_TMR_REG	derivative.h	9829;"	d
I2S_TMR_TWM	derivative.h	9961;"	d
I2S_TMR_TWM_MASK	derivative.h	9959;"	d
I2S_TMR_TWM_SHIFT	derivative.h	9960;"	d
IABR	derivative.h	/^  uint32_t IABR[4];                                \/**< Interrupt Active bit Register n, array offset: 0x200, array step: 0x4 *\/$/;"	m	struct:NVIC_MemMap
IALR	derivative.h	/^  uint32_t IALR;                                   \/**< Descriptor Individual Lower Address Register, offset: 0x11C *\/$/;"	m	struct:ENET_MemMap
IAUR	derivative.h	/^  uint32_t IAUR;                                   \/**< Descriptor Individual Upper Address Register, offset: 0x118 *\/$/;"	m	struct:ENET_MemMap
ICER	derivative.h	/^  uint32_t ICER[4];                                \/**< Interrupt Clear Enable Register n, array offset: 0x80, array step: 0x4 *\/$/;"	m	struct:NVIC_MemMap
ICPR	derivative.h	/^  uint32_t ICPR[4];                                \/**< Interrupt Clear Pending Register n, array offset: 0x180, array step: 0x4 *\/$/;"	m	struct:NVIC_MemMap
ICSR	derivative.h	/^  uint32_t ICSR;                                   \/**< Interrupt Control and State Register, offset: 0xD04 *\/$/;"	m	struct:SCB_MemMap
ID	derivative.h	/^    uint32_t ID;                                     \/**< Message Buffer 0 ID Register..Message Buffer 15 ID Register, array offset: 0x84, array step: 0x10 *\/$/;"	m	struct:CAN_MemMap::__anon4
ID	derivative.h	/^  uint32_t ID;                                     \/**< Identification Register, offset: 0x0 *\/$/;"	m	struct:USBHS_MemMap
IDCOMP	derivative.h	/^  uint8_t IDCOMP;                                  \/**< Peripheral ID Complement Register, offset: 0x4 *\/$/;"	m	struct:USB_MemMap
IDLY	derivative.h	/^  uint32_t IDLY;                                   \/**< Interrupt Delay Register, offset: 0xC *\/$/;"	m	struct:PDB_MemMap
IDR	derivative.h	/^  uint32_t IDR;                                    \/**< ID Register, offset: 0x1E4 *\/$/;"	m	struct:ETM_MemMap
IDR2	derivative.h	/^  uint32_t IDR2;                                   \/**< ETM ID Register 2, offset: 0x208 *\/$/;"	m	struct:ETM_MemMap
IE	derivative.h	/^  uint8_t IE;                                      \/**< UART CEA709.1-B Interrupt Enable Register, offset: 0x29 *\/$/;"	m	struct:UART_MemMap
IE7816	derivative.h	/^  uint8_t IE7816;                                  \/**< UART 7816 Interrupt Enable Register, offset: 0x19 *\/$/;"	m	struct:UART_MemMap
IEEE_R_ALIGN	derivative.h	/^  uint32_t IEEE_R_ALIGN;                           \/**< Frames Received with Alignment Error (IEEE_R_ALIGN), offset: 0x2D4 *\/$/;"	m	struct:ENET_MemMap
IEEE_R_CRC	derivative.h	/^  uint32_t IEEE_R_CRC;                             \/**< Frames Received with CRC Error (IEEE_R_CRC), offset: 0x2D0 *\/$/;"	m	struct:ENET_MemMap
IEEE_R_FDXFC	derivative.h	/^  uint32_t IEEE_R_FDXFC;                           \/**< Flow Control Pause frames received (IEEE_R_FDXFC), offset: 0x2DC *\/$/;"	m	struct:ENET_MemMap
IEEE_R_MACERR	derivative.h	/^  uint32_t IEEE_R_MACERR;                          \/**< Receive Fifo Overflow count (IEEE_R_MACERR), offset: 0x2D8 *\/$/;"	m	struct:ENET_MemMap
IEEE_R_OCTETS_OK	derivative.h	/^  uint32_t IEEE_R_OCTETS_OK;                       \/**< Octet count for Frames Rcvd w\/o Error (IEEE_R_OCTETS_OK). Counts total octets (includes header and FCS fields)., offset: 0x2E0 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_1COL	derivative.h	/^  uint32_t IEEE_T_1COL;                            \/**< Frames Transmitted with Single Collision (IEEE_T_1COL), offset: 0x250 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_CSERR	derivative.h	/^  uint32_t IEEE_T_CSERR;                           \/**< Frames Transmitted with Carrier Sense Error (IEEE_T_CSERR), offset: 0x268 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_DEF	derivative.h	/^  uint32_t IEEE_T_DEF;                             \/**< Frames Transmitted after Deferral Delay (IEEE_T_DEF), offset: 0x258 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_DROP	derivative.h	/^  uint32_t IEEE_T_DROP;                            \/**< Count of frames not counted correctly (IEEE_T_DROP). NOTE: Counter not implemented (read 0 always) as not applicable., offset: 0x248 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_EXCOL	derivative.h	/^  uint32_t IEEE_T_EXCOL;                           \/**< Frames Transmitted with Excessive Collisions (IEEE_T_EXCOL), offset: 0x260 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_FDXFC	derivative.h	/^  uint32_t IEEE_T_FDXFC;                           \/**< Flow Control Pause frames transmitted (IEEE_T_FDXFC), offset: 0x270 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_FRAME_OK	derivative.h	/^  uint32_t IEEE_T_FRAME_OK;                        \/**< Frames Transmitted OK (IEEE_T_FRAME_OK), offset: 0x24C *\/$/;"	m	struct:ENET_MemMap
IEEE_T_LCOL	derivative.h	/^  uint32_t IEEE_T_LCOL;                            \/**< Frames Transmitted with Late Collision (IEEE_T_LCOL), offset: 0x25C *\/$/;"	m	struct:ENET_MemMap
IEEE_T_MACERR	derivative.h	/^  uint32_t IEEE_T_MACERR;                          \/**< Frames Transmitted with Tx FIFO Underrun (IEEE_T_MACERR), offset: 0x264 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_MCOL	derivative.h	/^  uint32_t IEEE_T_MCOL;                            \/**< Frames Transmitted with Multiple Collisions (IEEE_T_MCOL), offset: 0x254 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_OCTETS_OK	derivative.h	/^  uint32_t IEEE_T_OCTETS_OK;                       \/**< Octet count for Frames Transmitted w\/o Error (IEEE_T_OCTETS_OK). NOTE: Counts total octets (includes header and FCS fields)., offset: 0x274 *\/$/;"	m	struct:ENET_MemMap
IEEE_T_SQE	derivative.h	/^  uint32_t IEEE_T_SQE;                             \/**< Frames Transmitted with SQE Error (IEEE_T_SQE). NOTE: Counter not implemented (read 0 always) as no SQE information is available., offset: 0x26C *\/$/;"	m	struct:ENET_MemMap
IER	derivative.h	/^  uint32_t IER;                                    \/**< RTC Interrupt Enable Register, offset: 0x1C *\/$/;"	m	struct:RTC_MemMap
IFLAG1	derivative.h	/^  uint32_t IFLAG1;                                 \/**< Interrupt Flags 1 Register, offset: 0x30 *\/$/;"	m	struct:CAN_MemMap
IFLAG2	derivative.h	/^  uint32_t IFLAG2;                                 \/**< Interrupt Flags 2 Register, offset: 0x2C *\/$/;"	m	struct:CAN_MemMap
IMASK1	derivative.h	/^  uint32_t IMASK1;                                 \/**< Interrupt Masks 1 Register, offset: 0x28 *\/$/;"	m	struct:CAN_MemMap
IMASK2	derivative.h	/^  uint32_t IMASK2;                                 \/**< Interrupt Masks 2 Register, offset: 0x24 *\/$/;"	m	struct:CAN_MemMap
INT	derivative.h	/^    uint32_t INT;                                    \/**< DAC Interval n Register, array offset: 0x154, array step: 0x8 *\/$/;"	m	struct:PDB_MemMap::__anon27
INT	derivative.h	/^  uint32_t INT;                                    \/**< Interrupt Request Register, offset: 0x24 *\/$/;"	m	struct:DMA_MemMap
INTC	derivative.h	/^    uint32_t INTC;                                   \/**< DAC Interval Trigger n Control Register, array offset: 0x150, array step: 0x8 *\/$/;"	m	struct:PDB_MemMap::__anon27
INTEN	derivative.h	/^  uint8_t INTEN;                                   \/**< Interrupt Enable Register, offset: 0x84 *\/$/;"	m	struct:USB_MemMap
INT_ADC0	derivative.h	/^  INT_ADC0                     = 73,               \/**< ADC0 interrupt *\/$/;"	e	enum:__anon2
INT_ADC1	derivative.h	/^  INT_ADC1                     = 74,               \/**< ADC1 interrupt *\/$/;"	e	enum:__anon2
INT_ADC2	derivative.h	/^  INT_ADC2                     = 118,              \/**< ADC2 interrupt *\/$/;"	e	enum:__anon2
INT_ADC3	derivative.h	/^  INT_ADC3                     = 119,              \/**< ADC3 interrupt *\/$/;"	e	enum:__anon2
INT_Bus_Fault	derivative.h	/^  INT_Bus_Fault                = 5,                \/**< Bus fault exception *\/$/;"	e	enum:__anon2
INT_CAN0_Bus_Off	derivative.h	/^  INT_CAN0_Bus_Off             = 46,               \/**< CAN0 bus off interrupt *\/$/;"	e	enum:__anon2
INT_CAN0_Error	derivative.h	/^  INT_CAN0_Error               = 47,               \/**< CAN0 error interrupt *\/$/;"	e	enum:__anon2
INT_CAN0_ORed_Message_buffer	derivative.h	/^  INT_CAN0_ORed_Message_buffer = 45,               \/**< CAN0 OR'd message buffers interrupt *\/$/;"	e	enum:__anon2
INT_CAN0_Rx_Warning	derivative.h	/^  INT_CAN0_Rx_Warning          = 49,               \/**< CAN0 Rx warning interrupt *\/$/;"	e	enum:__anon2
INT_CAN0_Tx_Warning	derivative.h	/^  INT_CAN0_Tx_Warning          = 48,               \/**< CAN0 Tx warning interrupt *\/$/;"	e	enum:__anon2
INT_CAN0_Wake_Up	derivative.h	/^  INT_CAN0_Wake_Up             = 50,               \/**< CAN0 wake up interrupt *\/$/;"	e	enum:__anon2
INT_CAN1_Bus_Off	derivative.h	/^  INT_CAN1_Bus_Off             = 54,               \/**< CAN1 bus off interrupt *\/$/;"	e	enum:__anon2
INT_CAN1_Error	derivative.h	/^  INT_CAN1_Error               = 55,               \/**< CAN1 error interrupt *\/$/;"	e	enum:__anon2
INT_CAN1_ORed_Message_buffer	derivative.h	/^  INT_CAN1_ORed_Message_buffer = 53,               \/**< CAN1 OR'd message buffers interrupt *\/$/;"	e	enum:__anon2
INT_CAN1_Rx_Warning	derivative.h	/^  INT_CAN1_Rx_Warning          = 57,               \/**< CAN1 Rx warning interrupt *\/$/;"	e	enum:__anon2
INT_CAN1_Tx_Warning	derivative.h	/^  INT_CAN1_Tx_Warning          = 56,               \/**< CAN1 Tx warning interrupt *\/$/;"	e	enum:__anon2
INT_CAN1_Wake_Up	derivative.h	/^  INT_CAN1_Wake_Up             = 58,               \/**< CAN1 wake up interrupt *\/$/;"	e	enum:__anon2
INT_CMP0	derivative.h	/^  INT_CMP0                     = 75,               \/**< CMP0 interrupt *\/$/;"	e	enum:__anon2
INT_CMP1	derivative.h	/^  INT_CMP1                     = 76,               \/**< CMP1 interrupt *\/$/;"	e	enum:__anon2
INT_CMP2	derivative.h	/^  INT_CMP2                     = 77,               \/**< CMP2 interrupt *\/$/;"	e	enum:__anon2
INT_CMP3	derivative.h	/^  INT_CMP3                     = 114,              \/**< CMP3 interrupt *\/$/;"	e	enum:__anon2
INT_CMT	derivative.h	/^  INT_CMT                      = 81,               \/**< CMT interrupt *\/$/;"	e	enum:__anon2
INT_DAC0	derivative.h	/^  INT_DAC0                     = 97,               \/**< DAC0 interrupt *\/$/;"	e	enum:__anon2
INT_DAC1	derivative.h	/^  INT_DAC1                     = 98,               \/**< DAC1 interrupt *\/$/;"	e	enum:__anon2
INT_DDR	derivative.h	/^  INT_DDR                      = 109,              \/**< DDR interrupt *\/$/;"	e	enum:__anon2
INT_DMA0_DMA16	derivative.h	/^  INT_DMA0_DMA16               = 16,               \/**< DMA channel 0\/16 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA10_DMA26	derivative.h	/^  INT_DMA10_DMA26              = 26,               \/**< DMA channel 10\/26 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA11_DMA27	derivative.h	/^  INT_DMA11_DMA27              = 27,               \/**< DMA channel 11\/27 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA12_DMA28	derivative.h	/^  INT_DMA12_DMA28              = 28,               \/**< DMA channel 12\/28 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA13_DMA29	derivative.h	/^  INT_DMA13_DMA29              = 29,               \/**< DMA channel 13\/29 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA14_DMA30	derivative.h	/^  INT_DMA14_DMA30              = 30,               \/**< DMA channel 14\/30 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA15_DMA31	derivative.h	/^  INT_DMA15_DMA31              = 31,               \/**< DMA channel 15\/31 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA1_DMA17	derivative.h	/^  INT_DMA1_DMA17               = 17,               \/**< DMA channel 1\/17 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA2_DMA18	derivative.h	/^  INT_DMA2_DMA18               = 18,               \/**< DMA channel 2\/18 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA3_DMA19	derivative.h	/^  INT_DMA3_DMA19               = 19,               \/**< DMA channel 3\/19 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA4_DMA20	derivative.h	/^  INT_DMA4_DMA20               = 20,               \/**< DMA channel 4\/20 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA5_DMA21	derivative.h	/^  INT_DMA5_DMA21               = 21,               \/**< DMA channel 5\/21 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA6_DMA22	derivative.h	/^  INT_DMA6_DMA22               = 22,               \/**< DMA channel 6\/22 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA7_DMA23	derivative.h	/^  INT_DMA7_DMA23               = 23,               \/**< DMA channel 7\/23 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA8_DMA24	derivative.h	/^  INT_DMA8_DMA24               = 24,               \/**< DMA channel 8\/24 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA9_DMA25	derivative.h	/^  INT_DMA9_DMA25               = 25,               \/**< DMA channel 9\/25 transfer complete interrupt *\/$/;"	e	enum:__anon2
INT_DMA_Error	derivative.h	/^  INT_DMA_Error                = 32,               \/**< DMA error interrupt *\/$/;"	e	enum:__anon2
INT_DebugMonitor	derivative.h	/^  INT_DebugMonitor             = 12,               \/**< Debug Monitor *\/$/;"	e	enum:__anon2
INT_ENET_1588_Timer	derivative.h	/^  INT_ENET_1588_Timer          = 91,               \/**< Ethernet MAC IEEE 1588 timer interrupt *\/$/;"	e	enum:__anon2
INT_ENET_Error	derivative.h	/^  INT_ENET_Error               = 94,               \/**< Ethernet MAC error and miscelaneous interrupt *\/$/;"	e	enum:__anon2
INT_ENET_Receive	derivative.h	/^  INT_ENET_Receive             = 93,               \/**< Ethernet MAC receive interrupt *\/$/;"	e	enum:__anon2
INT_ENET_Transmit	derivative.h	/^  INT_ENET_Transmit            = 92,               \/**< Ethernet MAC transmit interrupt *\/$/;"	e	enum:__anon2
INT_FTFE	derivative.h	/^  INT_FTFE                     = 34,               \/**< FTFE interrupt *\/$/;"	e	enum:__anon2
INT_FTM0	derivative.h	/^  INT_FTM0                     = 78,               \/**< FTM0 fault, overflow and channels interrupt *\/$/;"	e	enum:__anon2
INT_FTM1	derivative.h	/^  INT_FTM1                     = 79,               \/**< FTM1 fault, overflow and channels interrupt *\/$/;"	e	enum:__anon2
INT_FTM2	derivative.h	/^  INT_FTM2                     = 80,               \/**< FTM2 fault, overflow and channels interrupt *\/$/;"	e	enum:__anon2
INT_FTM3	derivative.h	/^  INT_FTM3                     = 117,              \/**< FTM3 fault, overflow and channels interrupt *\/$/;"	e	enum:__anon2
INT_Hard_Fault	derivative.h	/^  INT_Hard_Fault               = 3,                \/**< Hard fault exception *\/$/;"	e	enum:__anon2
INT_I2C0	derivative.h	/^  INT_I2C0                     = 40,               \/**< I2C0 interrupt *\/$/;"	e	enum:__anon2
INT_I2C1	derivative.h	/^  INT_I2C1                     = 41,               \/**< I2C1 interrupt *\/$/;"	e	enum:__anon2
INT_I2S0_Rx	derivative.h	/^  INT_I2S0_Rx                  = 52,               \/**< I2S0 receive interrupt *\/$/;"	e	enum:__anon2
INT_I2S0_Tx	derivative.h	/^  INT_I2S0_Tx                  = 51,               \/**< I2S0 transmit interrupt *\/$/;"	e	enum:__anon2
INT_I2S1_Rx	derivative.h	/^  INT_I2S1_Rx                  = 121               \/**< I2S1 receive interrupt *\/$/;"	e	enum:__anon2
INT_I2S1_Tx	derivative.h	/^  INT_I2S1_Tx                  = 120,              \/**< I2S1 transmit interrupt *\/$/;"	e	enum:__anon2
INT_Initial_Program_Counter	derivative.h	/^  INT_Initial_Program_Counter  = 1,                \/**< Initial program counter *\/$/;"	e	enum:__anon2
INT_Initial_Stack_Pointer	derivative.h	/^  INT_Initial_Stack_Pointer    = 0,                \/**< Initial stack pointer *\/$/;"	e	enum:__anon2
INT_LCD	derivative.h	/^  INT_LCD                      = 113,              \/**< Graphical LCD interrupt *\/$/;"	e	enum:__anon2
INT_LLW	derivative.h	/^  INT_LLW                      = 37,               \/**< Low Leakage Wakeup *\/$/;"	e	enum:__anon2
INT_LPTimer	derivative.h	/^  INT_LPTimer                  = 101,              \/**< LPTimer interrupt *\/$/;"	e	enum:__anon2
INT_LVD_LVW	derivative.h	/^  INT_LVD_LVW                  = 36,               \/**< Low Voltage Detect, Low Voltage Warning *\/$/;"	e	enum:__anon2
INT_MCG	derivative.h	/^  INT_MCG                      = 100,              \/**< MCG interrupt *\/$/;"	e	enum:__anon2
INT_MCM	derivative.h	/^  INT_MCM                      = 33,               \/**< Normal interrupt *\/$/;"	e	enum:__anon2
INT_Mem_Manage_Fault	derivative.h	/^  INT_Mem_Manage_Fault         = 4,                \/**< Memory Manage Fault *\/$/;"	e	enum:__anon2
INT_NFC	derivative.h	/^  INT_NFC                      = 111,              \/**< NAND flash controller interrupt *\/$/;"	e	enum:__anon2
INT_NMI	derivative.h	/^  INT_NMI                      = 2,                \/**< Non-maskable interrupt *\/$/;"	e	enum:__anon2
INT_PDB0	derivative.h	/^  INT_PDB0                     = 88,               \/**< PDB0 interrupt *\/$/;"	e	enum:__anon2
INT_PIT0	derivative.h	/^  INT_PIT0                     = 84,               \/**< PIT timer channel 0 interrupt *\/$/;"	e	enum:__anon2
INT_PIT1	derivative.h	/^  INT_PIT1                     = 85,               \/**< PIT timer channel 1 interrupt *\/$/;"	e	enum:__anon2
INT_PIT2	derivative.h	/^  INT_PIT2                     = 86,               \/**< PIT timer channel 2 interrupt *\/$/;"	e	enum:__anon2
INT_PIT3	derivative.h	/^  INT_PIT3                     = 87,               \/**< PIT timer channel 3 interrupt *\/$/;"	e	enum:__anon2
INT_PORTA	derivative.h	/^  INT_PORTA                    = 103,              \/**< Port A interrupt *\/$/;"	e	enum:__anon2
INT_PORTB	derivative.h	/^  INT_PORTB                    = 104,              \/**< Port B interrupt *\/$/;"	e	enum:__anon2
INT_PORTC	derivative.h	/^  INT_PORTC                    = 105,              \/**< Port C interrupt *\/$/;"	e	enum:__anon2
INT_PORTD	derivative.h	/^  INT_PORTD                    = 106,              \/**< Port D interrupt *\/$/;"	e	enum:__anon2
INT_PORTE	derivative.h	/^  INT_PORTE                    = 107,              \/**< Port E interrupt *\/$/;"	e	enum:__anon2
INT_PORTF	derivative.h	/^  INT_PORTF                    = 108,              \/**< Port F interrupt *\/$/;"	e	enum:__anon2
INT_PendableSrvReq	derivative.h	/^  INT_PendableSrvReq           = 14,               \/**< PendSV exception - request for system level service *\/$/;"	e	enum:__anon2
INT_RNG	derivative.h	/^  INT_RNG                      = 39,               \/**< RNGA interrupt *\/$/;"	e	enum:__anon2
INT_RTC	derivative.h	/^  INT_RTC                      = 82,               \/**< RTC interrupt *\/$/;"	e	enum:__anon2
INT_RTC_Seconds	derivative.h	/^  INT_RTC_Seconds              = 83,               \/**< RTC seconds interrupt *\/$/;"	e	enum:__anon2
INT_Read_Collision	derivative.h	/^  INT_Read_Collision           = 35,               \/**< Read collision interrupt *\/$/;"	e	enum:__anon2
INT_Reserved10	derivative.h	/^  INT_Reserved10               = 10,               \/**< Reserved interrupt 10 *\/$/;"	e	enum:__anon2
INT_Reserved102	derivative.h	/^  INT_Reserved102              = 102,              \/**< Reserved interrupt 102 *\/$/;"	e	enum:__anon2
INT_Reserved115	derivative.h	/^  INT_Reserved115              = 115,              \/**< Reserved interrupt 115 *\/$/;"	e	enum:__anon2
INT_Reserved116	derivative.h	/^  INT_Reserved116              = 116,              \/**< Reserved interrupt 116 *\/$/;"	e	enum:__anon2
INT_Reserved13	derivative.h	/^  INT_Reserved13               = 13,               \/**< Reserved interrupt 13 *\/$/;"	e	enum:__anon2
INT_Reserved59	derivative.h	/^  INT_Reserved59               = 59,               \/**< Reserved interrupt 59 *\/$/;"	e	enum:__anon2
INT_Reserved7	derivative.h	/^  INT_Reserved7                = 7,                \/**< Reserved interrupt 7 *\/$/;"	e	enum:__anon2
INT_Reserved8	derivative.h	/^  INT_Reserved8                = 8,                \/**< Reserved interrupt 8 *\/$/;"	e	enum:__anon2
INT_Reserved9	derivative.h	/^  INT_Reserved9                = 9,                \/**< Reserved interrupt 9 *\/$/;"	e	enum:__anon2
INT_Reserved95	derivative.h	/^  INT_Reserved95               = 95,               \/**< Reserved interrupt 95 *\/$/;"	e	enum:__anon2
INT_SDHC	derivative.h	/^  INT_SDHC                     = 96,               \/**< SDHC interrupt *\/$/;"	e	enum:__anon2
INT_SPI0	derivative.h	/^  INT_SPI0                     = 42,               \/**< SPI0 interrupt *\/$/;"	e	enum:__anon2
INT_SPI1	derivative.h	/^  INT_SPI1                     = 43,               \/**< SPI1 interrupt *\/$/;"	e	enum:__anon2
INT_SPI2	derivative.h	/^  INT_SPI2                     = 44,               \/**< SPI2 interrupt *\/$/;"	e	enum:__anon2
INT_SVCall	derivative.h	/^  INT_SVCall                   = 11,               \/**< A supervisor call exception *\/$/;"	e	enum:__anon2
INT_SWI	derivative.h	/^  INT_SWI                      = 110,              \/**< Software interrupt *\/$/;"	e	enum:__anon2
INT_SysTick	derivative.h	/^  INT_SysTick                  = 15,               \/**< SysTick interrupt *\/$/;"	e	enum:__anon2
INT_TSI0	derivative.h	/^  INT_TSI0                     = 99,               \/**< TSI0 interrupt *\/$/;"	e	enum:__anon2
INT_UART0_ERR	derivative.h	/^  INT_UART0_ERR                = 62,               \/**< UART0 error interrupt *\/$/;"	e	enum:__anon2
INT_UART0_LON	derivative.h	/^  INT_UART0_LON                = 60,               \/**< UART0 LON interrupt *\/$/;"	e	enum:__anon2
INT_UART0_RX_TX	derivative.h	/^  INT_UART0_RX_TX              = 61,               \/**< UART0 receive\/transmit interrupt *\/$/;"	e	enum:__anon2
INT_UART1_ERR	derivative.h	/^  INT_UART1_ERR                = 64,               \/**< UART1 error interrupt *\/$/;"	e	enum:__anon2
INT_UART1_RX_TX	derivative.h	/^  INT_UART1_RX_TX              = 63,               \/**< UART1 receive\/transmit interrupt *\/$/;"	e	enum:__anon2
INT_UART2_ERR	derivative.h	/^  INT_UART2_ERR                = 66,               \/**< UART2 error interrupt *\/$/;"	e	enum:__anon2
INT_UART2_RX_TX	derivative.h	/^  INT_UART2_RX_TX              = 65,               \/**< UART2 receive\/transmit interrupt *\/$/;"	e	enum:__anon2
INT_UART3_ERR	derivative.h	/^  INT_UART3_ERR                = 68,               \/**< UART3 error interrupt *\/$/;"	e	enum:__anon2
INT_UART3_RX_TX	derivative.h	/^  INT_UART3_RX_TX              = 67,               \/**< UART3 receive\/transmit interrupt *\/$/;"	e	enum:__anon2
INT_UART4_ERR	derivative.h	/^  INT_UART4_ERR                = 70,               \/**< UART4 error interrupt *\/$/;"	e	enum:__anon2
INT_UART4_RX_TX	derivative.h	/^  INT_UART4_RX_TX              = 69,               \/**< UART4 receive\/transmit interrupt *\/$/;"	e	enum:__anon2
INT_UART5_ERR	derivative.h	/^  INT_UART5_ERR                = 72,               \/**< UART5 error interrupt *\/$/;"	e	enum:__anon2
INT_UART5_RX_TX	derivative.h	/^  INT_UART5_RX_TX              = 71,               \/**< UART5 receive\/transmit interrupt *\/$/;"	e	enum:__anon2
INT_USB0	derivative.h	/^  INT_USB0                     = 89,               \/**< USB0 interrupt *\/$/;"	e	enum:__anon2
INT_USBDCD	derivative.h	/^  INT_USBDCD                   = 90,               \/**< USBDCD interrupt *\/$/;"	e	enum:__anon2
INT_USBHS	derivative.h	/^  INT_USBHS                    = 112,              \/**< USB high speed OTG interrupt *\/$/;"	e	enum:__anon2
INT_Usage_Fault	derivative.h	/^  INT_Usage_Fault              = 6,                \/**< Usage fault exception *\/$/;"	e	enum:__anon2
INT_Watchdog	derivative.h	/^  INT_Watchdog                 = 38,               \/**< WDOG interrupt *\/$/;"	e	enum:__anon2
INVCTRL	derivative.h	/^  uint32_t INVCTRL;                                \/**< FTM Inverting Control, offset: 0x90 *\/$/;"	m	struct:FTM_MemMap
IO_H	io.h	2;"	d
IP	derivative.h	/^  uint8_t IP[106];                                 \/**< Interrupt Priority Register n, array offset: 0x300, array step: 0x1 *\/$/;"	m	struct:NVIC_MemMap
IR	derivative.h	/^  uint8_t IR;                                      \/**< UART Infrared Register, offset: 0xE *\/$/;"	m	struct:UART_MemMap
IRQInterruptIndex	derivative.h	/^} IRQInterruptIndex;$/;"	t	typeref:enum:__anon2
IRQSIGEN	derivative.h	/^  uint32_t IRQSIGEN;                               \/**< Interrupt Signal Enable Register, offset: 0x38 *\/$/;"	m	struct:SDHC_MemMap
IRQSTAT	derivative.h	/^  uint32_t IRQSTAT;                                \/**< Interrupt Status Register, offset: 0x30 *\/$/;"	m	struct:SDHC_MemMap
IRQSTATEN	derivative.h	/^  uint32_t IRQSTATEN;                              \/**< Interrupt Status Enable Register, offset: 0x34 *\/$/;"	m	struct:SDHC_MemMap
IS7816	derivative.h	/^  uint8_t IS7816;                                  \/**< UART 7816 Interrupt Status Register, offset: 0x1A *\/$/;"	m	struct:UART_MemMap
ISER	derivative.h	/^  uint32_t ISER[4];                                \/**< Interrupt Set Enable Register n, array offset: 0x0, array step: 0x4 *\/$/;"	m	struct:NVIC_MemMap
ISFR	derivative.h	/^  uint32_t ISFR;                                   \/**< Interrupt Status Flag Register, offset: 0xA0 *\/$/;"	m	struct:PORT_MemMap
ISPR	derivative.h	/^  uint32_t ISPR[4];                                \/**< Interrupt Set Pending Register n, array offset: 0x100, array step: 0x4 *\/$/;"	m	struct:NVIC_MemMap
ISR	derivative.h	/^  uint32_t ISR;                                    \/**< Interrupt Status and control Register, offset: 0x10 *\/$/;"	m	struct:MCM_MemMap
ISR	derivative.h	/^  uint32_t ISR;                                    \/**< Interrupt status, offset: 0x3F38 *\/$/;"	m	struct:NFC_MemMap
ISTAT	derivative.h	/^  uint8_t ISTAT;                                   \/**< Interrupt Status Register, offset: 0x80 *\/$/;"	m	struct:USB_MemMap
ITATBCTR0	derivative.h	/^  uint32_t ITATBCTR0;                              \/**< ETM Integration Test ATB Control 0 Register, offset: 0xEF8 *\/$/;"	m	struct:ETM_MemMap
ITATBCTR0	derivative.h	/^  uint32_t ITATBCTR0;                              \/**< Integration Register, ITATBCTR0, offset: 0xEF8 *\/$/;"	m	struct:ETB_MemMap
ITATBCTR0	derivative.h	/^  uint32_t ITATBCTR0;                              \/**< Integration Register, ITATBCTR0, offset: 0xEF8 *\/$/;"	m	struct:ETF_MemMap
ITATBCTR0	derivative.h	/^  uint32_t ITATBCTR0;                              \/**< Integration Test ATB Control 0 Register, offset: 0xEF8 *\/$/;"	m	struct:TPIU_MemMap
ITATBCTR1	derivative.h	/^  uint32_t ITATBCTR1;                              \/**< Integration Register, ITATBCTR1, offset: 0xEF4 *\/$/;"	m	struct:ETB_MemMap
ITATBCTR1	derivative.h	/^  uint32_t ITATBCTR1;                              \/**< Integration Register, ITATBCTR1, offset: 0xEF4 *\/$/;"	m	struct:ETF_MemMap
ITATBCTR2	derivative.h	/^  uint32_t ITATBCTR2;                              \/**< ETM Integration Test ATB Control 2 Register, offset: 0xEF0 *\/$/;"	m	struct:ETM_MemMap
ITATBCTR2	derivative.h	/^  uint32_t ITATBCTR2;                              \/**< Integration Register, ITATBCTR2, offset: 0xEF0 *\/$/;"	m	struct:ETB_MemMap
ITATBCTR2	derivative.h	/^  uint32_t ITATBCTR2;                              \/**< Integration Register, ITATBCTR2, offset: 0xEF0 *\/$/;"	m	struct:ETF_MemMap
ITATBCTR2	derivative.h	/^  uint32_t ITATBCTR2;                              \/**< Integration Test ATB Control 2 Register, offset: 0xEF0 *\/$/;"	m	struct:TPIU_MemMap
ITATBDATA0	derivative.h	/^  uint32_t ITATBDATA0;                             \/**< Integration Register, ITATBDATA0, offset: 0xEEC *\/$/;"	m	struct:ETB_MemMap
ITATBDATA0	derivative.h	/^  uint32_t ITATBDATA0;                             \/**< Integration Register, ITATBDATA0, offset: 0xEEC *\/$/;"	m	struct:ETF_MemMap
ITCTRL	derivative.h	/^  uint32_t ITCTRL;                                 \/**< Integration Mode Control Register, offset: 0xF00 *\/$/;"	m	struct:ETB_MemMap
ITCTRL	derivative.h	/^  uint32_t ITCTRL;                                 \/**< Integration Mode Control Register, offset: 0xF00 *\/$/;"	m	struct:ETF_MemMap
ITCTRL	derivative.h	/^  uint32_t ITCTRL;                                 \/**< Integration Mode Control Register, offset: 0xF00 *\/$/;"	m	struct:ETM_MemMap
ITCTRL	derivative.h	/^  uint32_t ITCTRL;                                 \/**< Integration Mode Control Register, offset: 0xF00 *\/$/;"	m	struct:TPIU_MemMap
ITMISCIN	derivative.h	/^  uint32_t ITMISCIN;                               \/**< Integration Test Miscelaneous Inputs Register, offset: 0xEE0 *\/$/;"	m	struct:ETM_MemMap
ITMISCOP0	derivative.h	/^  uint32_t ITMISCOP0;                              \/**< Integration Register, ITMISCOP0, offset: 0xEE0 *\/$/;"	m	struct:ETB_MemMap
ITM_BASE_PTR	derivative.h	10271;"	d
ITM_BASE_PTRS	derivative.h	10273;"	d
ITM_CID0	derivative.h	10364;"	d
ITM_CID0_REG	derivative.h	10244;"	d
ITM_CID1	derivative.h	10365;"	d
ITM_CID1_REG	derivative.h	10245;"	d
ITM_CID2	derivative.h	10366;"	d
ITM_CID2_REG	derivative.h	10246;"	d
ITM_CID3	derivative.h	10367;"	d
ITM_CID3_REG	derivative.h	10247;"	d
ITM_LAR	derivative.h	10354;"	d
ITM_LAR_REG	derivative.h	10234;"	d
ITM_LSR	derivative.h	10355;"	d
ITM_LSR_REG	derivative.h	10235;"	d
ITM_MemMap	derivative.h	/^typedef struct ITM_MemMap {$/;"	s
ITM_MemMapPtr	derivative.h	/^} volatile *ITM_MemMapPtr;$/;"	t
ITM_PID0	derivative.h	10360;"	d
ITM_PID0_REG	derivative.h	10240;"	d
ITM_PID1	derivative.h	10361;"	d
ITM_PID1_REG	derivative.h	10241;"	d
ITM_PID2	derivative.h	10362;"	d
ITM_PID2_REG	derivative.h	10242;"	d
ITM_PID3	derivative.h	10363;"	d
ITM_PID3_REG	derivative.h	10243;"	d
ITM_PID4	derivative.h	10356;"	d
ITM_PID4_REG	derivative.h	10236;"	d
ITM_PID5	derivative.h	10357;"	d
ITM_PID5_REG	derivative.h	10237;"	d
ITM_PID6	derivative.h	10358;"	d
ITM_PID6_REG	derivative.h	10238;"	d
ITM_PID7	derivative.h	10359;"	d
ITM_PID7_REG	derivative.h	10239;"	d
ITM_STIM0_READ	derivative.h	10287;"	d
ITM_STIM0_WRITE	derivative.h	10288;"	d
ITM_STIM10_READ	derivative.h	10307;"	d
ITM_STIM10_WRITE	derivative.h	10308;"	d
ITM_STIM11_READ	derivative.h	10309;"	d
ITM_STIM11_WRITE	derivative.h	10310;"	d
ITM_STIM12_READ	derivative.h	10311;"	d
ITM_STIM12_WRITE	derivative.h	10312;"	d
ITM_STIM13_READ	derivative.h	10313;"	d
ITM_STIM13_WRITE	derivative.h	10314;"	d
ITM_STIM14_READ	derivative.h	10315;"	d
ITM_STIM14_WRITE	derivative.h	10316;"	d
ITM_STIM15_READ	derivative.h	10317;"	d
ITM_STIM15_WRITE	derivative.h	10318;"	d
ITM_STIM16_READ	derivative.h	10319;"	d
ITM_STIM16_WRITE	derivative.h	10320;"	d
ITM_STIM17_READ	derivative.h	10321;"	d
ITM_STIM17_WRITE	derivative.h	10322;"	d
ITM_STIM18_READ	derivative.h	10323;"	d
ITM_STIM18_WRITE	derivative.h	10324;"	d
ITM_STIM19_READ	derivative.h	10325;"	d
ITM_STIM19_WRITE	derivative.h	10326;"	d
ITM_STIM1_READ	derivative.h	10289;"	d
ITM_STIM1_WRITE	derivative.h	10290;"	d
ITM_STIM20_READ	derivative.h	10327;"	d
ITM_STIM20_WRITE	derivative.h	10328;"	d
ITM_STIM21_READ	derivative.h	10329;"	d
ITM_STIM21_WRITE	derivative.h	10330;"	d
ITM_STIM22_READ	derivative.h	10331;"	d
ITM_STIM22_WRITE	derivative.h	10332;"	d
ITM_STIM23_READ	derivative.h	10333;"	d
ITM_STIM23_WRITE	derivative.h	10334;"	d
ITM_STIM24_READ	derivative.h	10335;"	d
ITM_STIM24_WRITE	derivative.h	10336;"	d
ITM_STIM25_READ	derivative.h	10337;"	d
ITM_STIM25_WRITE	derivative.h	10338;"	d
ITM_STIM26_READ	derivative.h	10339;"	d
ITM_STIM26_WRITE	derivative.h	10340;"	d
ITM_STIM27_READ	derivative.h	10341;"	d
ITM_STIM27_WRITE	derivative.h	10342;"	d
ITM_STIM28_READ	derivative.h	10343;"	d
ITM_STIM28_WRITE	derivative.h	10344;"	d
ITM_STIM29_READ	derivative.h	10345;"	d
ITM_STIM29_WRITE	derivative.h	10346;"	d
ITM_STIM2_READ	derivative.h	10291;"	d
ITM_STIM2_WRITE	derivative.h	10292;"	d
ITM_STIM30_READ	derivative.h	10347;"	d
ITM_STIM30_WRITE	derivative.h	10348;"	d
ITM_STIM31_READ	derivative.h	10349;"	d
ITM_STIM31_WRITE	derivative.h	10350;"	d
ITM_STIM3_READ	derivative.h	10293;"	d
ITM_STIM3_WRITE	derivative.h	10294;"	d
ITM_STIM4_READ	derivative.h	10295;"	d
ITM_STIM4_WRITE	derivative.h	10296;"	d
ITM_STIM5_READ	derivative.h	10297;"	d
ITM_STIM5_WRITE	derivative.h	10298;"	d
ITM_STIM6_READ	derivative.h	10299;"	d
ITM_STIM6_WRITE	derivative.h	10300;"	d
ITM_STIM7_READ	derivative.h	10301;"	d
ITM_STIM7_WRITE	derivative.h	10302;"	d
ITM_STIM8_READ	derivative.h	10303;"	d
ITM_STIM8_WRITE	derivative.h	10304;"	d
ITM_STIM9_READ	derivative.h	10305;"	d
ITM_STIM9_WRITE	derivative.h	10306;"	d
ITM_STIM_READ	derivative.h	10370;"	d
ITM_STIM_READ_REG	derivative.h	10229;"	d
ITM_STIM_WRITE	derivative.h	10371;"	d
ITM_STIM_WRITE_REG	derivative.h	10230;"	d
ITM_TCR	derivative.h	10353;"	d
ITM_TCR_REG	derivative.h	10233;"	d
ITM_TER	derivative.h	10351;"	d
ITM_TER_REG	derivative.h	10231;"	d
ITM_TPR	derivative.h	10352;"	d
ITM_TPR_REG	derivative.h	10232;"	d
ITTRFLIN	derivative.h	/^  uint32_t ITTRFLIN;                               \/**< Integration Register, ITTRFLIN, offset: 0xEE8 *\/$/;"	m	struct:ETB_MemMap
ITTRFLINACK	derivative.h	/^  uint32_t ITTRFLINACK;                            \/**< Integration Register, ITTRFLINACK, offset: 0xEE4 *\/$/;"	m	struct:ETB_MemMap
ITTRIGOUT	derivative.h	/^  uint32_t ITTRIGOUT;                              \/**< Integration Test Trigger Out Register, offset: 0xEE8 *\/$/;"	m	struct:ETM_MemMap
LAR	derivative.h	/^  uint32_t LAR;                                    \/**< Lock Access Register, offset: 0xFB0 *\/$/;"	m	struct:ETB_MemMap
LAR	derivative.h	/^  uint32_t LAR;                                    \/**< Lock Access Register, offset: 0xFB0 *\/$/;"	m	struct:ETF_MemMap
LAR	derivative.h	/^  uint32_t LAR;                                    \/**< Lock Access Register, offset: 0xFB0 *\/$/;"	m	struct:ETM_MemMap
LAR	derivative.h	/^  uint32_t LAR;                                    \/**< Lock Access Register, offset: 0xFB0 *\/$/;"	m	struct:ITM_MemMap
LAUSCCR	derivative.h	/^  uint32_t LAUSCCR;                                \/**< LCDC AUS mode cursor control register, offset: 0x84 *\/$/;"	m	struct:LCDC_MemMap
LAUSCR	derivative.h	/^  uint32_t LAUSCR;                                 \/**< LCDC AUS mode control register, offset: 0x80 *\/$/;"	m	struct:LCDC_MemMap
LCCMR	derivative.h	/^  uint32_t LCCMR;                                  \/**< LCDC color cursor mapping register, offset: 0x14 *\/$/;"	m	struct:LCDC_MemMap
LCDC	io.h	/^    LCDC,$/;"	e	enum:__anon37
LCDC1	io.h	/^typedef enum {LCDC1} lcdc_minor_device; $/;"	e	enum:__anon35
LCDCCONSOLE_TAB_STOP_SPACING	lcdcConsole.h	19;"	d
LCDC_ALT2	lcdcdriver.h	61;"	d
LCDC_ALT5	lcdcdriver.h	62;"	d
LCDC_ALT7	lcdcdriver.h	63;"	d
LCDC_BASE_PTR	derivative.h	10727;"	d
LCDC_BASE_PTRS	derivative.h	10729;"	d
LCDC_BLUE_MASK	lcdcdriver.h	33;"	d
LCDC_BLUE_SHIFT	lcdcdriver.h	36;"	d
LCDC_BYTES_PER_PIXEL	lcdcdriver.h	28;"	d
LCDC_FRAME_BUFFER_SIZE	lcdcdriver.h	55;"	d
LCDC_FRAME_START_ADDRESS	lcdcdriver.h	54;"	d
LCDC_GREEN_MASK	lcdcdriver.h	32;"	d
LCDC_GREEN_SHIFT	lcdcdriver.h	35;"	d
LCDC_GW_BUFFER_SIZE	lcdcdriver.h	58;"	d
LCDC_GW_START_ADDRESS	lcdcdriver.h	57;"	d
LCDC_GW_XSIZE	lcdcdriver.h	24;"	d
LCDC_GW_YSIZE	lcdcdriver.h	25;"	d
LCDC_LAUSCCR	derivative.h	10767;"	d
LCDC_LAUSCCR_ACUR_COL_B	derivative.h	10712;"	d
LCDC_LAUSCCR_ACUR_COL_B_MASK	derivative.h	10710;"	d
LCDC_LAUSCCR_ACUR_COL_B_SHIFT	derivative.h	10711;"	d
LCDC_LAUSCCR_ACUR_COL_G	derivative.h	10715;"	d
LCDC_LAUSCCR_ACUR_COL_G_MASK	derivative.h	10713;"	d
LCDC_LAUSCCR_ACUR_COL_G_SHIFT	derivative.h	10714;"	d
LCDC_LAUSCCR_ACUR_COL_R	derivative.h	10718;"	d
LCDC_LAUSCCR_ACUR_COL_R_MASK	derivative.h	10716;"	d
LCDC_LAUSCCR_ACUR_COL_R_SHIFT	derivative.h	10717;"	d
LCDC_LAUSCCR_REG	derivative.h	10459;"	d
LCDC_LAUSCR	derivative.h	10766;"	d
LCDC_LAUSCR_AGWCKB	derivative.h	10700;"	d
LCDC_LAUSCR_AGWCKB_MASK	derivative.h	10698;"	d
LCDC_LAUSCR_AGWCKB_SHIFT	derivative.h	10699;"	d
LCDC_LAUSCR_AGWCKG	derivative.h	10703;"	d
LCDC_LAUSCR_AGWCKG_MASK	derivative.h	10701;"	d
LCDC_LAUSCR_AGWCKG_SHIFT	derivative.h	10702;"	d
LCDC_LAUSCR_AGWCKR	derivative.h	10706;"	d
LCDC_LAUSCR_AGWCKR_MASK	derivative.h	10704;"	d
LCDC_LAUSCR_AGWCKR_SHIFT	derivative.h	10705;"	d
LCDC_LAUSCR_AUS_Mode_MASK	derivative.h	10707;"	d
LCDC_LAUSCR_AUS_Mode_SHIFT	derivative.h	10708;"	d
LCDC_LAUSCR_REG	derivative.h	10458;"	d
LCDC_LCCMR	derivative.h	10748;"	d
LCDC_LCCMR_CUR_COL_B	derivative.h	10517;"	d
LCDC_LCCMR_CUR_COL_B_MASK	derivative.h	10515;"	d
LCDC_LCCMR_CUR_COL_B_SHIFT	derivative.h	10516;"	d
LCDC_LCCMR_CUR_COL_G	derivative.h	10520;"	d
LCDC_LCCMR_CUR_COL_G_MASK	derivative.h	10518;"	d
LCDC_LCCMR_CUR_COL_G_SHIFT	derivative.h	10519;"	d
LCDC_LCCMR_CUR_COL_R	derivative.h	10523;"	d
LCDC_LCCMR_CUR_COL_R_MASK	derivative.h	10521;"	d
LCDC_LCCMR_CUR_COL_R_SHIFT	derivative.h	10522;"	d
LCDC_LCCMR_REG	derivative.h	10440;"	d
LCDC_LCPR	derivative.h	10746;"	d
LCDC_LCPR_CC	derivative.h	10501;"	d
LCDC_LCPR_CC_MASK	derivative.h	10499;"	d
LCDC_LCPR_CC_SHIFT	derivative.h	10500;"	d
LCDC_LCPR_CXP	derivative.h	10496;"	d
LCDC_LCPR_CXP_MASK	derivative.h	10494;"	d
LCDC_LCPR_CXP_SHIFT	derivative.h	10495;"	d
LCDC_LCPR_CYP	derivative.h	10493;"	d
LCDC_LCPR_CYP_MASK	derivative.h	10491;"	d
LCDC_LCPR_CYP_SHIFT	derivative.h	10492;"	d
LCDC_LCPR_OP_MASK	derivative.h	10497;"	d
LCDC_LCPR_OP_SHIFT	derivative.h	10498;"	d
LCDC_LCPR_REG	derivative.h	10438;"	d
LCDC_LCWHB	derivative.h	10747;"	d
LCDC_LCWHB_BD	derivative.h	10505;"	d
LCDC_LCWHB_BD_MASK	derivative.h	10503;"	d
LCDC_LCWHB_BD_SHIFT	derivative.h	10504;"	d
LCDC_LCWHB_BK_EN_MASK	derivative.h	10512;"	d
LCDC_LCWHB_BK_EN_SHIFT	derivative.h	10513;"	d
LCDC_LCWHB_CH	derivative.h	10508;"	d
LCDC_LCWHB_CH_MASK	derivative.h	10506;"	d
LCDC_LCWHB_CH_SHIFT	derivative.h	10507;"	d
LCDC_LCWHB_CW	derivative.h	10511;"	d
LCDC_LCWHB_CW_MASK	derivative.h	10509;"	d
LCDC_LCWHB_CW_SHIFT	derivative.h	10510;"	d
LCDC_LCWHB_REG	derivative.h	10439;"	d
LCDC_LDCR	derivative.h	10754;"	d
LCDC_LDCR_BURST_MASK	derivative.h	10605;"	d
LCDC_LDCR_BURST_SHIFT	derivative.h	10606;"	d
LCDC_LDCR_HM	derivative.h	10604;"	d
LCDC_LDCR_HM_MASK	derivative.h	10602;"	d
LCDC_LDCR_HM_SHIFT	derivative.h	10603;"	d
LCDC_LDCR_REG	derivative.h	10446;"	d
LCDC_LDCR_TM	derivative.h	10601;"	d
LCDC_LDCR_TM_MASK	derivative.h	10599;"	d
LCDC_LDCR_TM_SHIFT	derivative.h	10600;"	d
LCDC_LGWCR	derivative.h	10764;"	d
LCDC_LGWCR_GWAV	derivative.h	10687;"	d
LCDC_LGWCR_GWAV_MASK	derivative.h	10685;"	d
LCDC_LGWCR_GWAV_SHIFT	derivative.h	10686;"	d
LCDC_LGWCR_GWCKB	derivative.h	10672;"	d
LCDC_LGWCR_GWCKB_MASK	derivative.h	10670;"	d
LCDC_LGWCR_GWCKB_SHIFT	derivative.h	10671;"	d
LCDC_LGWCR_GWCKE_MASK	derivative.h	10683;"	d
LCDC_LGWCR_GWCKE_SHIFT	derivative.h	10684;"	d
LCDC_LGWCR_GWCKG	derivative.h	10675;"	d
LCDC_LGWCR_GWCKG_MASK	derivative.h	10673;"	d
LCDC_LGWCR_GWCKG_SHIFT	derivative.h	10674;"	d
LCDC_LGWCR_GWCKR	derivative.h	10678;"	d
LCDC_LGWCR_GWCKR_MASK	derivative.h	10676;"	d
LCDC_LGWCR_GWCKR_SHIFT	derivative.h	10677;"	d
LCDC_LGWCR_GWE_MASK	derivative.h	10681;"	d
LCDC_LGWCR_GWE_SHIFT	derivative.h	10682;"	d
LCDC_LGWCR_GW_RVS_MASK	derivative.h	10679;"	d
LCDC_LGWCR_GW_RVS_SHIFT	derivative.h	10680;"	d
LCDC_LGWCR_REG	derivative.h	10456;"	d
LCDC_LGWDCR	derivative.h	10765;"	d
LCDC_LGWDCR_GWBT_MASK	derivative.h	10695;"	d
LCDC_LGWDCR_GWBT_SHIFT	derivative.h	10696;"	d
LCDC_LGWDCR_GWHM	derivative.h	10694;"	d
LCDC_LGWDCR_GWHM_MASK	derivative.h	10692;"	d
LCDC_LGWDCR_GWHM_SHIFT	derivative.h	10693;"	d
LCDC_LGWDCR_GWTM	derivative.h	10691;"	d
LCDC_LGWDCR_GWTM_MASK	derivative.h	10689;"	d
LCDC_LGWDCR_GWTM_SHIFT	derivative.h	10690;"	d
LCDC_LGWDCR_REG	derivative.h	10457;"	d
LCDC_LGWPOR	derivative.h	10762;"	d
LCDC_LGWPOR_GWPO	derivative.h	10661;"	d
LCDC_LGWPOR_GWPO_MASK	derivative.h	10659;"	d
LCDC_LGWPOR_GWPO_SHIFT	derivative.h	10660;"	d
LCDC_LGWPOR_REG	derivative.h	10454;"	d
LCDC_LGWPR	derivative.h	10763;"	d
LCDC_LGWPR_GWXP	derivative.h	10668;"	d
LCDC_LGWPR_GWXP_MASK	derivative.h	10666;"	d
LCDC_LGWPR_GWXP_SHIFT	derivative.h	10667;"	d
LCDC_LGWPR_GWYP	derivative.h	10665;"	d
LCDC_LGWPR_GWYP_MASK	derivative.h	10663;"	d
LCDC_LGWPR_GWYP_SHIFT	derivative.h	10664;"	d
LCDC_LGWPR_REG	derivative.h	10455;"	d
LCDC_LGWSAR	derivative.h	10759;"	d
LCDC_LGWSAR_GWSA	derivative.h	10646;"	d
LCDC_LGWSAR_GWSA_MASK	derivative.h	10644;"	d
LCDC_LGWSAR_GWSA_SHIFT	derivative.h	10645;"	d
LCDC_LGWSAR_REG	derivative.h	10451;"	d
LCDC_LGWSR	derivative.h	10760;"	d
LCDC_LGWSR_GWH	derivative.h	10650;"	d
LCDC_LGWSR_GWH_MASK	derivative.h	10648;"	d
LCDC_LGWSR_GWH_SHIFT	derivative.h	10649;"	d
LCDC_LGWSR_GWW	derivative.h	10653;"	d
LCDC_LGWSR_GWW_MASK	derivative.h	10651;"	d
LCDC_LGWSR_GWW_SHIFT	derivative.h	10652;"	d
LCDC_LGWSR_REG	derivative.h	10452;"	d
LCDC_LGWVPWR	derivative.h	10761;"	d
LCDC_LGWVPWR_GWVPW	derivative.h	10657;"	d
LCDC_LGWVPWR_GWVPW_MASK	derivative.h	10655;"	d
LCDC_LGWVPWR_GWVPW_SHIFT	derivative.h	10656;"	d
LCDC_LGWVPWR_REG	derivative.h	10453;"	d
LCDC_LHCR	derivative.h	10750;"	d
LCDC_LHCR_H_WAIT_1	derivative.h	10569;"	d
LCDC_LHCR_H_WAIT_1_MASK	derivative.h	10567;"	d
LCDC_LHCR_H_WAIT_1_SHIFT	derivative.h	10568;"	d
LCDC_LHCR_H_WAIT_2	derivative.h	10566;"	d
LCDC_LHCR_H_WAIT_2_MASK	derivative.h	10564;"	d
LCDC_LHCR_H_WAIT_2_SHIFT	derivative.h	10565;"	d
LCDC_LHCR_H_WIDTH	derivative.h	10572;"	d
LCDC_LHCR_H_WIDTH_MASK	derivative.h	10570;"	d
LCDC_LHCR_H_WIDTH_SHIFT	derivative.h	10571;"	d
LCDC_LHCR_REG	derivative.h	10442;"	d
LCDC_LICR	derivative.h	10756;"	d
LCDC_LICR_GW_INT_CON_MASK	derivative.h	10615;"	d
LCDC_LICR_GW_INT_CON_SHIFT	derivative.h	10616;"	d
LCDC_LICR_INTCON_MASK	derivative.h	10611;"	d
LCDC_LICR_INTCON_SHIFT	derivative.h	10612;"	d
LCDC_LICR_INTSYN_MASK	derivative.h	10613;"	d
LCDC_LICR_INTSYN_SHIFT	derivative.h	10614;"	d
LCDC_LICR_REG	derivative.h	10448;"	d
LCDC_LIER	derivative.h	10757;"	d
LCDC_LIER_BOF_EN_MASK	derivative.h	10618;"	d
LCDC_LIER_BOF_EN_SHIFT	derivative.h	10619;"	d
LCDC_LIER_EOF_EN_MASK	derivative.h	10620;"	d
LCDC_LIER_EOF_EN_SHIFT	derivative.h	10621;"	d
LCDC_LIER_ERR_RES_EN_MASK	derivative.h	19834;"	d
LCDC_LIER_ERR_RES_EN_SHIFT	derivative.h	19835;"	d
LCDC_LIER_GW_BOF_EN_MASK	derivative.h	10624;"	d
LCDC_LIER_GW_BOF_EN_SHIFT	derivative.h	10625;"	d
LCDC_LIER_GW_EOF_EN_MASK	derivative.h	10626;"	d
LCDC_LIER_GW_EOF_EN_SHIFT	derivative.h	10627;"	d
LCDC_LIER_GW_ERR_RES_EN_MASK	derivative.h	19836;"	d
LCDC_LIER_GW_ERR_RES_EN_SHIFT	derivative.h	19837;"	d
LCDC_LIER_GW_UDR_ERR_EN_MASK	derivative.h	10628;"	d
LCDC_LIER_GW_UDR_ERR_EN_SHIFT	derivative.h	10629;"	d
LCDC_LIER_REG	derivative.h	10449;"	d
LCDC_LIER_UDR_ERR_EN_MASK	derivative.h	10622;"	d
LCDC_LIER_UDR_ERR_EN_SHIFT	derivative.h	10623;"	d
LCDC_LISR	derivative.h	10758;"	d
LCDC_LISR_BOF_MASK	derivative.h	10631;"	d
LCDC_LISR_BOF_SHIFT	derivative.h	10632;"	d
LCDC_LISR_EOF_MASK	derivative.h	10633;"	d
LCDC_LISR_EOF_SHIFT	derivative.h	10634;"	d
LCDC_LISR_ERR_RES_MASK	derivative.h	19838;"	d
LCDC_LISR_ERR_RES_SHIFT	derivative.h	19839;"	d
LCDC_LISR_GW_BOF_MASK	derivative.h	10637;"	d
LCDC_LISR_GW_BOF_SHIFT	derivative.h	10638;"	d
LCDC_LISR_GW_EOF_MASK	derivative.h	10639;"	d
LCDC_LISR_GW_EOF_SHIFT	derivative.h	10640;"	d
LCDC_LISR_GW_ERR_RES_MASK	derivative.h	19840;"	d
LCDC_LISR_GW_ERR_RES_SHIFT	derivative.h	19841;"	d
LCDC_LISR_GW_UDR_ERR_MASK	derivative.h	10641;"	d
LCDC_LISR_GW_UDR_ERR_SHIFT	derivative.h	10642;"	d
LCDC_LISR_REG	derivative.h	10450;"	d
LCDC_LISR_UDR_ERR_MASK	derivative.h	10635;"	d
LCDC_LISR_UDR_ERR_SHIFT	derivative.h	10636;"	d
LCDC_LPCCR	derivative.h	10753;"	d
LCDC_LPCCR_CC_EN_MASK	derivative.h	10591;"	d
LCDC_LPCCR_CC_EN_SHIFT	derivative.h	10592;"	d
LCDC_LPCCR_LDMSK_MASK	derivative.h	10596;"	d
LCDC_LPCCR_LDMSK_SHIFT	derivative.h	10597;"	d
LCDC_LPCCR_PW	derivative.h	10590;"	d
LCDC_LPCCR_PW_MASK	derivative.h	10588;"	d
LCDC_LPCCR_PW_SHIFT	derivative.h	10589;"	d
LCDC_LPCCR_REG	derivative.h	10445;"	d
LCDC_LPCCR_SCR	derivative.h	10595;"	d
LCDC_LPCCR_SCR_MASK	derivative.h	10593;"	d
LCDC_LPCCR_SCR_SHIFT	derivative.h	10594;"	d
LCDC_LPCR	derivative.h	10749;"	d
LCDC_LPCR_ACD	derivative.h	10532;"	d
LCDC_LPCR_ACDSEL_MASK	derivative.h	10533;"	d
LCDC_LPCR_ACDSEL_SHIFT	derivative.h	10534;"	d
LCDC_LPCR_ACD_MASK	derivative.h	10530;"	d
LCDC_LPCR_ACD_SHIFT	derivative.h	10531;"	d
LCDC_LPCR_BPIX	derivative.h	10555;"	d
LCDC_LPCR_BPIX_MASK	derivative.h	10553;"	d
LCDC_LPCR_BPIX_SHIFT	derivative.h	10554;"	d
LCDC_LPCR_CLKPOL_MASK	derivative.h	10545;"	d
LCDC_LPCR_CLKPOL_SHIFT	derivative.h	10546;"	d
LCDC_LPCR_COLOR_MASK	derivative.h	10559;"	d
LCDC_LPCR_COLOR_SHIFT	derivative.h	10560;"	d
LCDC_LPCR_END_SEL_MASK	derivative.h	10539;"	d
LCDC_LPCR_END_SEL_SHIFT	derivative.h	10540;"	d
LCDC_LPCR_FLMPOL_MASK	derivative.h	10549;"	d
LCDC_LPCR_FLMPOL_SHIFT	derivative.h	10550;"	d
LCDC_LPCR_LPPOL_MASK	derivative.h	10547;"	d
LCDC_LPCR_LPPOL_SHIFT	derivative.h	10548;"	d
LCDC_LPCR_OEPOL_MASK	derivative.h	10543;"	d
LCDC_LPCR_OEPOL_SHIFT	derivative.h	10544;"	d
LCDC_LPCR_PBSIZ	derivative.h	10558;"	d
LCDC_LPCR_PBSIZ_MASK	derivative.h	10556;"	d
LCDC_LPCR_PBSIZ_SHIFT	derivative.h	10557;"	d
LCDC_LPCR_PCD	derivative.h	10527;"	d
LCDC_LPCR_PCD_MASK	derivative.h	10525;"	d
LCDC_LPCR_PCD_SHIFT	derivative.h	10526;"	d
LCDC_LPCR_PIXPOL_MASK	derivative.h	10551;"	d
LCDC_LPCR_PIXPOL_SHIFT	derivative.h	10552;"	d
LCDC_LPCR_REG	derivative.h	10441;"	d
LCDC_LPCR_REV_VS_MASK	derivative.h	10535;"	d
LCDC_LPCR_REV_VS_SHIFT	derivative.h	10536;"	d
LCDC_LPCR_SCLKIDLE_MASK	derivative.h	10541;"	d
LCDC_LPCR_SCLKIDLE_SHIFT	derivative.h	10542;"	d
LCDC_LPCR_SCLKSEL_MASK	derivative.h	10528;"	d
LCDC_LPCR_SCLKSEL_SHIFT	derivative.h	10529;"	d
LCDC_LPCR_SWAP_SEL_MASK	derivative.h	10537;"	d
LCDC_LPCR_SWAP_SEL_SHIFT	derivative.h	10538;"	d
LCDC_LPCR_TFT_MASK	derivative.h	10561;"	d
LCDC_LPCR_TFT_SHIFT	derivative.h	10562;"	d
LCDC_LPOR	derivative.h	10752;"	d
LCDC_LPOR_POS	derivative.h	10586;"	d
LCDC_LPOR_POS_MASK	derivative.h	10584;"	d
LCDC_LPOR_POS_SHIFT	derivative.h	10585;"	d
LCDC_LPOR_REG	derivative.h	10444;"	d
LCDC_LRMCR	derivative.h	10755;"	d
LCDC_LRMCR_REG	derivative.h	10447;"	d
LCDC_LRMCR_SELF_REF_MASK	derivative.h	10608;"	d
LCDC_LRMCR_SELF_REF_SHIFT	derivative.h	10609;"	d
LCDC_LSR	derivative.h	10744;"	d
LCDC_LSR_GWLPM_MASK	derivative.h	19832;"	d
LCDC_LSR_GWLPM_SHIFT	derivative.h	19833;"	d
LCDC_LSR_REG	derivative.h	10436;"	d
LCDC_LSR_XMAX	derivative.h	10485;"	d
LCDC_LSR_XMAX_MASK	derivative.h	10483;"	d
LCDC_LSR_XMAX_SHIFT	derivative.h	10484;"	d
LCDC_LSR_YMAX	derivative.h	10482;"	d
LCDC_LSR_YMAX_MASK	derivative.h	10480;"	d
LCDC_LSR_YMAX_SHIFT	derivative.h	10481;"	d
LCDC_LSSAR	derivative.h	10743;"	d
LCDC_LSSAR_REG	derivative.h	10435;"	d
LCDC_LSSAR_SSA	derivative.h	10478;"	d
LCDC_LSSAR_SSA_MASK	derivative.h	10476;"	d
LCDC_LSSAR_SSA_SHIFT	derivative.h	10477;"	d
LCDC_LVCR	derivative.h	10751;"	d
LCDC_LVCR_REG	derivative.h	10443;"	d
LCDC_LVCR_V_WAIT_1	derivative.h	10579;"	d
LCDC_LVCR_V_WAIT_1_MASK	derivative.h	10577;"	d
LCDC_LVCR_V_WAIT_1_SHIFT	derivative.h	10578;"	d
LCDC_LVCR_V_WAIT_2	derivative.h	10576;"	d
LCDC_LVCR_V_WAIT_2_MASK	derivative.h	10574;"	d
LCDC_LVCR_V_WAIT_2_SHIFT	derivative.h	10575;"	d
LCDC_LVCR_V_WIDTH	derivative.h	10582;"	d
LCDC_LVCR_V_WIDTH_MASK	derivative.h	10580;"	d
LCDC_LVCR_V_WIDTH_SHIFT	derivative.h	10581;"	d
LCDC_LVPWR	derivative.h	10745;"	d
LCDC_LVPWR_REG	derivative.h	10437;"	d
LCDC_LVPWR_VPW	derivative.h	10489;"	d
LCDC_LVPWR_VPW_MASK	derivative.h	10487;"	d
LCDC_LVPWR_VPW_SHIFT	derivative.h	10488;"	d
LCDC_MemMap	derivative.h	/^typedef struct LCDC_MemMap {$/;"	s
LCDC_MemMapPtr	derivative.h	/^} volatile *LCDC_MemMapPtr;$/;"	t
LCDC_PIXEL_BLUE	lcdcdriver.h	42;"	d
LCDC_PIXEL_GREEN	lcdcdriver.h	40;"	d
LCDC_PIXEL_RED	lcdcdriver.h	38;"	d
LCDC_RED_MASK	lcdcdriver.h	31;"	d
LCDC_RED_SHIFT	lcdcdriver.h	34;"	d
LCDC_SCREEN_BACKGROUND_COLOR	lcdcdriver.h	52;"	d
LCDC_SCREEN_FOREGROUND_COLOR	lcdcdriver.h	50;"	d
LCDC_SCREEN_XSIZE	lcdcdriver.h	20;"	d
LCDC_SCREEN_YSIZE	lcdcdriver.h	21;"	d
LCPR	derivative.h	/^  uint32_t LCPR;                                   \/**< LCDC cursor position register, offset: 0xC *\/$/;"	m	struct:LCDC_MemMap
LCWHB	derivative.h	/^  uint32_t LCWHB;                                  \/**< LCDC cursor width, height, and blink register, offset: 0x10 *\/$/;"	m	struct:LCDC_MemMap
LDCR	derivative.h	/^  uint32_t LDCR;                                   \/**< LCDC DMA control register, offset: 0x30 *\/$/;"	m	struct:LCDC_MemMap
LDR_CA	derivative.h	/^  uint32_t LDR_CA[9];                              \/**< General Purpose Register 0 - Load Register command..General Purpose Register 8 - Load Register command, array offset: 0x848, array step: 0x4 *\/$/;"	m	struct:CAU_MemMap
LDR_CAA	derivative.h	/^  uint32_t LDR_CAA;                                \/**< Accumulator register - Load Register command, offset: 0x844 *\/$/;"	m	struct:CAU_MemMap
LDR_CASR	derivative.h	/^  uint32_t LDR_CASR;                               \/**< Status register  - Load Register command, offset: 0x840 *\/$/;"	m	struct:CAU_MemMap
LDVAL	derivative.h	/^    uint32_t LDVAL;                                  \/**< Timer Load Value Register, array offset: 0x100, array step: 0x10 *\/$/;"	m	struct:PIT_MemMap::__anon28
LED	io.h	/^    LED,$/;"	e	enum:__anon37
LED_BLUE	io.h	/^typedef enum { LED_ORANGE, LED_YELLOW, LED_GREEN, LED_BLUE} led_minor_device;  $/;"	e	enum:__anon39
LED_BLUE_PORTA_BIT	led.h	8;"	d
LED_BLUE_PORTA_BIT	leddriver.h	18;"	d
LED_GREEN	io.h	/^typedef enum { LED_ORANGE, LED_YELLOW, LED_GREEN, LED_BLUE} led_minor_device;  $/;"	e	enum:__anon39
LED_GREEN_PORTA_BIT	led.h	7;"	d
LED_GREEN_PORTA_BIT	leddriver.h	17;"	d
LED_ORANGE	io.h	/^typedef enum { LED_ORANGE, LED_YELLOW, LED_GREEN, LED_BLUE} led_minor_device;  $/;"	e	enum:__anon39
LED_ORANGE_PORTA_BIT	led.h	5;"	d
LED_ORANGE_PORTA_BIT	leddriver.h	15;"	d
LED_YELLOW	io.h	/^typedef enum { LED_ORANGE, LED_YELLOW, LED_GREEN, LED_BLUE} led_minor_device;  $/;"	e	enum:__anon39
LED_YELLOW_PORTA_BIT	led.h	6;"	d
LED_YELLOW_PORTA_BIT	leddriver.h	16;"	d
LGWCR	derivative.h	/^  uint32_t LGWCR;                                  \/**< LCDC graphic window control register, offset: 0x64 *\/$/;"	m	struct:LCDC_MemMap
LGWDCR	derivative.h	/^  uint32_t LGWDCR;                                 \/**< LCDC graphic window DMA control register, offset: 0x68 *\/$/;"	m	struct:LCDC_MemMap
LGWPOR	derivative.h	/^  uint32_t LGWPOR;                                 \/**< LCDC graphic window panning offset register, offset: 0x5C *\/$/;"	m	struct:LCDC_MemMap
LGWPR	derivative.h	/^  uint32_t LGWPR;                                  \/**< LCDC graphic window position register, offset: 0x60 *\/$/;"	m	struct:LCDC_MemMap
LGWSAR	derivative.h	/^  uint32_t LGWSAR;                                 \/**< LCDC graphic window start address register, offset: 0x50 *\/$/;"	m	struct:LCDC_MemMap
LGWSR	derivative.h	/^  uint32_t LGWSR;                                  \/**< LCDC graphic window size register, offset: 0x54 *\/$/;"	m	struct:LCDC_MemMap
LGWVPWR	derivative.h	/^  uint32_t LGWVPWR;                                \/**< LCDC graphic window virtual page width register, offset: 0x58 *\/$/;"	m	struct:LCDC_MemMap
LHCR	derivative.h	/^  uint32_t LHCR;                                   \/**< LCDC horizontal configuration register, offset: 0x1C *\/$/;"	m	struct:LCDC_MemMap
LICR	derivative.h	/^  uint32_t LICR;                                   \/**< LCDC interrupt configuration register, offset: 0x38 *\/$/;"	m	struct:LCDC_MemMap
LIER	derivative.h	/^  uint32_t LIER;                                   \/**< LCDC interrupt enable register, offset: 0x3C *\/$/;"	m	struct:LCDC_MemMap
LISR	derivative.h	/^  uint32_t LISR;                                   \/**< LCDC interrupt status register, offset: 0x40 *\/$/;"	m	struct:LCDC_MemMap
LLWU_BASE_PTR	derivative.h	10991;"	d
LLWU_BASE_PTRS	derivative.h	10993;"	d
LLWU_F1	derivative.h	11012;"	d
LLWU_F1_REG	derivative.h	10819;"	d
LLWU_F1_WUF0_MASK	derivative.h	10910;"	d
LLWU_F1_WUF0_SHIFT	derivative.h	10911;"	d
LLWU_F1_WUF1_MASK	derivative.h	10912;"	d
LLWU_F1_WUF1_SHIFT	derivative.h	10913;"	d
LLWU_F1_WUF2_MASK	derivative.h	10914;"	d
LLWU_F1_WUF2_SHIFT	derivative.h	10915;"	d
LLWU_F1_WUF3_MASK	derivative.h	10916;"	d
LLWU_F1_WUF3_SHIFT	derivative.h	10917;"	d
LLWU_F1_WUF4_MASK	derivative.h	10918;"	d
LLWU_F1_WUF4_SHIFT	derivative.h	10919;"	d
LLWU_F1_WUF5_MASK	derivative.h	10920;"	d
LLWU_F1_WUF5_SHIFT	derivative.h	10921;"	d
LLWU_F1_WUF6_MASK	derivative.h	10922;"	d
LLWU_F1_WUF6_SHIFT	derivative.h	10923;"	d
LLWU_F1_WUF7_MASK	derivative.h	10924;"	d
LLWU_F1_WUF7_SHIFT	derivative.h	10925;"	d
LLWU_F2	derivative.h	11013;"	d
LLWU_F2_REG	derivative.h	10820;"	d
LLWU_F2_WUF10_MASK	derivative.h	10931;"	d
LLWU_F2_WUF10_SHIFT	derivative.h	10932;"	d
LLWU_F2_WUF11_MASK	derivative.h	10933;"	d
LLWU_F2_WUF11_SHIFT	derivative.h	10934;"	d
LLWU_F2_WUF12_MASK	derivative.h	10935;"	d
LLWU_F2_WUF12_SHIFT	derivative.h	10936;"	d
LLWU_F2_WUF13_MASK	derivative.h	10937;"	d
LLWU_F2_WUF13_SHIFT	derivative.h	10938;"	d
LLWU_F2_WUF14_MASK	derivative.h	10939;"	d
LLWU_F2_WUF14_SHIFT	derivative.h	10940;"	d
LLWU_F2_WUF15_MASK	derivative.h	10941;"	d
LLWU_F2_WUF15_SHIFT	derivative.h	10942;"	d
LLWU_F2_WUF8_MASK	derivative.h	10927;"	d
LLWU_F2_WUF8_SHIFT	derivative.h	10928;"	d
LLWU_F2_WUF9_MASK	derivative.h	10929;"	d
LLWU_F2_WUF9_SHIFT	derivative.h	10930;"	d
LLWU_F3	derivative.h	11014;"	d
LLWU_F3_MWUF0_MASK	derivative.h	10944;"	d
LLWU_F3_MWUF0_SHIFT	derivative.h	10945;"	d
LLWU_F3_MWUF1_MASK	derivative.h	10946;"	d
LLWU_F3_MWUF1_SHIFT	derivative.h	10947;"	d
LLWU_F3_MWUF2_MASK	derivative.h	10948;"	d
LLWU_F3_MWUF2_SHIFT	derivative.h	10949;"	d
LLWU_F3_MWUF3_MASK	derivative.h	10950;"	d
LLWU_F3_MWUF3_SHIFT	derivative.h	10951;"	d
LLWU_F3_MWUF4_MASK	derivative.h	10952;"	d
LLWU_F3_MWUF4_SHIFT	derivative.h	10953;"	d
LLWU_F3_MWUF5_MASK	derivative.h	10954;"	d
LLWU_F3_MWUF5_SHIFT	derivative.h	10955;"	d
LLWU_F3_MWUF6_MASK	derivative.h	10956;"	d
LLWU_F3_MWUF6_SHIFT	derivative.h	10957;"	d
LLWU_F3_MWUF7_MASK	derivative.h	10958;"	d
LLWU_F3_MWUF7_SHIFT	derivative.h	10959;"	d
LLWU_F3_REG	derivative.h	10821;"	d
LLWU_FILT1	derivative.h	11015;"	d
LLWU_FILT1_FILTE	derivative.h	10966;"	d
LLWU_FILT1_FILTE_MASK	derivative.h	10964;"	d
LLWU_FILT1_FILTE_SHIFT	derivative.h	10965;"	d
LLWU_FILT1_FILTF_MASK	derivative.h	10967;"	d
LLWU_FILT1_FILTF_SHIFT	derivative.h	10968;"	d
LLWU_FILT1_FILTSEL	derivative.h	10963;"	d
LLWU_FILT1_FILTSEL_MASK	derivative.h	10961;"	d
LLWU_FILT1_FILTSEL_SHIFT	derivative.h	10962;"	d
LLWU_FILT1_REG	derivative.h	10822;"	d
LLWU_FILT2	derivative.h	11016;"	d
LLWU_FILT2_FILTE	derivative.h	10975;"	d
LLWU_FILT2_FILTE_MASK	derivative.h	10973;"	d
LLWU_FILT2_FILTE_SHIFT	derivative.h	10974;"	d
LLWU_FILT2_FILTF_MASK	derivative.h	10976;"	d
LLWU_FILT2_FILTF_SHIFT	derivative.h	10977;"	d
LLWU_FILT2_FILTSEL	derivative.h	10972;"	d
LLWU_FILT2_FILTSEL_MASK	derivative.h	10970;"	d
LLWU_FILT2_FILTSEL_SHIFT	derivative.h	10971;"	d
LLWU_FILT2_REG	derivative.h	10823;"	d
LLWU_ME	derivative.h	11011;"	d
LLWU_ME_REG	derivative.h	10818;"	d
LLWU_ME_WUME0_MASK	derivative.h	10893;"	d
LLWU_ME_WUME0_SHIFT	derivative.h	10894;"	d
LLWU_ME_WUME1_MASK	derivative.h	10895;"	d
LLWU_ME_WUME1_SHIFT	derivative.h	10896;"	d
LLWU_ME_WUME2_MASK	derivative.h	10897;"	d
LLWU_ME_WUME2_SHIFT	derivative.h	10898;"	d
LLWU_ME_WUME3_MASK	derivative.h	10899;"	d
LLWU_ME_WUME3_SHIFT	derivative.h	10900;"	d
LLWU_ME_WUME4_MASK	derivative.h	10901;"	d
LLWU_ME_WUME4_SHIFT	derivative.h	10902;"	d
LLWU_ME_WUME5_MASK	derivative.h	10903;"	d
LLWU_ME_WUME5_SHIFT	derivative.h	10904;"	d
LLWU_ME_WUME6_MASK	derivative.h	10905;"	d
LLWU_ME_WUME6_SHIFT	derivative.h	10906;"	d
LLWU_ME_WUME7_MASK	derivative.h	10907;"	d
LLWU_ME_WUME7_SHIFT	derivative.h	10908;"	d
LLWU_MemMap	derivative.h	/^typedef struct LLWU_MemMap {$/;"	s
LLWU_MemMapPtr	derivative.h	/^} volatile *LLWU_MemMapPtr;$/;"	t
LLWU_PE1	derivative.h	11007;"	d
LLWU_PE1_REG	derivative.h	10814;"	d
LLWU_PE1_WUPE0	derivative.h	10843;"	d
LLWU_PE1_WUPE0_MASK	derivative.h	10841;"	d
LLWU_PE1_WUPE0_SHIFT	derivative.h	10842;"	d
LLWU_PE1_WUPE1	derivative.h	10846;"	d
LLWU_PE1_WUPE1_MASK	derivative.h	10844;"	d
LLWU_PE1_WUPE1_SHIFT	derivative.h	10845;"	d
LLWU_PE1_WUPE2	derivative.h	10849;"	d
LLWU_PE1_WUPE2_MASK	derivative.h	10847;"	d
LLWU_PE1_WUPE2_SHIFT	derivative.h	10848;"	d
LLWU_PE1_WUPE3	derivative.h	10852;"	d
LLWU_PE1_WUPE3_MASK	derivative.h	10850;"	d
LLWU_PE1_WUPE3_SHIFT	derivative.h	10851;"	d
LLWU_PE2	derivative.h	11008;"	d
LLWU_PE2_REG	derivative.h	10815;"	d
LLWU_PE2_WUPE4	derivative.h	10856;"	d
LLWU_PE2_WUPE4_MASK	derivative.h	10854;"	d
LLWU_PE2_WUPE4_SHIFT	derivative.h	10855;"	d
LLWU_PE2_WUPE5	derivative.h	10859;"	d
LLWU_PE2_WUPE5_MASK	derivative.h	10857;"	d
LLWU_PE2_WUPE5_SHIFT	derivative.h	10858;"	d
LLWU_PE2_WUPE6	derivative.h	10862;"	d
LLWU_PE2_WUPE6_MASK	derivative.h	10860;"	d
LLWU_PE2_WUPE6_SHIFT	derivative.h	10861;"	d
LLWU_PE2_WUPE7	derivative.h	10865;"	d
LLWU_PE2_WUPE7_MASK	derivative.h	10863;"	d
LLWU_PE2_WUPE7_SHIFT	derivative.h	10864;"	d
LLWU_PE3	derivative.h	11009;"	d
LLWU_PE3_REG	derivative.h	10816;"	d
LLWU_PE3_WUPE10	derivative.h	10875;"	d
LLWU_PE3_WUPE10_MASK	derivative.h	10873;"	d
LLWU_PE3_WUPE10_SHIFT	derivative.h	10874;"	d
LLWU_PE3_WUPE11	derivative.h	10878;"	d
LLWU_PE3_WUPE11_MASK	derivative.h	10876;"	d
LLWU_PE3_WUPE11_SHIFT	derivative.h	10877;"	d
LLWU_PE3_WUPE8	derivative.h	10869;"	d
LLWU_PE3_WUPE8_MASK	derivative.h	10867;"	d
LLWU_PE3_WUPE8_SHIFT	derivative.h	10868;"	d
LLWU_PE3_WUPE9	derivative.h	10872;"	d
LLWU_PE3_WUPE9_MASK	derivative.h	10870;"	d
LLWU_PE3_WUPE9_SHIFT	derivative.h	10871;"	d
LLWU_PE4	derivative.h	11010;"	d
LLWU_PE4_REG	derivative.h	10817;"	d
LLWU_PE4_WUPE12	derivative.h	10882;"	d
LLWU_PE4_WUPE12_MASK	derivative.h	10880;"	d
LLWU_PE4_WUPE12_SHIFT	derivative.h	10881;"	d
LLWU_PE4_WUPE13	derivative.h	10885;"	d
LLWU_PE4_WUPE13_MASK	derivative.h	10883;"	d
LLWU_PE4_WUPE13_SHIFT	derivative.h	10884;"	d
LLWU_PE4_WUPE14	derivative.h	10888;"	d
LLWU_PE4_WUPE14_MASK	derivative.h	10886;"	d
LLWU_PE4_WUPE14_SHIFT	derivative.h	10887;"	d
LLWU_PE4_WUPE15	derivative.h	10891;"	d
LLWU_PE4_WUPE15_MASK	derivative.h	10889;"	d
LLWU_PE4_WUPE15_SHIFT	derivative.h	10890;"	d
LLWU_RST	derivative.h	11017;"	d
LLWU_RST_LLRSTE_MASK	derivative.h	10981;"	d
LLWU_RST_LLRSTE_SHIFT	derivative.h	10982;"	d
LLWU_RST_REG	derivative.h	10824;"	d
LLWU_RST_RSTFILT_MASK	derivative.h	10979;"	d
LLWU_RST_RSTFILT_SHIFT	derivative.h	10980;"	d
LMEM_BASE_PTR	derivative.h	11293;"	d
LMEM_BASE_PTRS	derivative.h	11295;"	d
LMEM_MemMap	derivative.h	/^typedef struct LMEM_MemMap {$/;"	s
LMEM_MemMapPtr	derivative.h	/^} volatile *LMEM_MemMapPtr;$/;"	t
LMEM_PCCCR	derivative.h	11309;"	d
LMEM_PCCCR_ENCACHE_MASK	derivative.h	11092;"	d
LMEM_PCCCR_ENCACHE_SHIFT	derivative.h	11093;"	d
LMEM_PCCCR_ENWRBUF_MASK	derivative.h	11094;"	d
LMEM_PCCCR_ENWRBUF_SHIFT	derivative.h	11095;"	d
LMEM_PCCCR_GO_MASK	derivative.h	11104;"	d
LMEM_PCCCR_GO_SHIFT	derivative.h	11105;"	d
LMEM_PCCCR_INVW0_MASK	derivative.h	11096;"	d
LMEM_PCCCR_INVW0_SHIFT	derivative.h	11097;"	d
LMEM_PCCCR_INVW1_MASK	derivative.h	11100;"	d
LMEM_PCCCR_INVW1_SHIFT	derivative.h	11101;"	d
LMEM_PCCCR_PUSHW0_MASK	derivative.h	11098;"	d
LMEM_PCCCR_PUSHW0_SHIFT	derivative.h	11099;"	d
LMEM_PCCCR_PUSHW1_MASK	derivative.h	11102;"	d
LMEM_PCCCR_PUSHW1_SHIFT	derivative.h	11103;"	d
LMEM_PCCCR_REG	derivative.h	11066;"	d
LMEM_PCCCVR	derivative.h	11312;"	d
LMEM_PCCCVR_DATA	derivative.h	11138;"	d
LMEM_PCCCVR_DATA_MASK	derivative.h	11136;"	d
LMEM_PCCCVR_DATA_SHIFT	derivative.h	11137;"	d
LMEM_PCCCVR_REG	derivative.h	11069;"	d
LMEM_PCCLCR	derivative.h	11310;"	d
LMEM_PCCLCR_CACHEADDR	derivative.h	11111;"	d
LMEM_PCCLCR_CACHEADDR_MASK	derivative.h	11109;"	d
LMEM_PCCLCR_CACHEADDR_SHIFT	derivative.h	11110;"	d
LMEM_PCCLCR_LACC_MASK	derivative.h	11127;"	d
LMEM_PCCLCR_LACC_SHIFT	derivative.h	11128;"	d
LMEM_PCCLCR_LADSEL_MASK	derivative.h	11125;"	d
LMEM_PCCLCR_LADSEL_SHIFT	derivative.h	11126;"	d
LMEM_PCCLCR_LCIMB_MASK	derivative.h	11118;"	d
LMEM_PCCLCR_LCIMB_SHIFT	derivative.h	11119;"	d
LMEM_PCCLCR_LCIVB_MASK	derivative.h	11116;"	d
LMEM_PCCLCR_LCIVB_SHIFT	derivative.h	11117;"	d
LMEM_PCCLCR_LCMD	derivative.h	11124;"	d
LMEM_PCCLCR_LCMD_MASK	derivative.h	11122;"	d
LMEM_PCCLCR_LCMD_SHIFT	derivative.h	11123;"	d
LMEM_PCCLCR_LCWAY_MASK	derivative.h	11120;"	d
LMEM_PCCLCR_LCWAY_SHIFT	derivative.h	11121;"	d
LMEM_PCCLCR_LGO_MASK	derivative.h	11107;"	d
LMEM_PCCLCR_LGO_SHIFT	derivative.h	11108;"	d
LMEM_PCCLCR_REG	derivative.h	11067;"	d
LMEM_PCCLCR_TDSEL_MASK	derivative.h	11114;"	d
LMEM_PCCLCR_TDSEL_SHIFT	derivative.h	11115;"	d
LMEM_PCCLCR_WSEL_MASK	derivative.h	11112;"	d
LMEM_PCCLCR_WSEL_SHIFT	derivative.h	11113;"	d
LMEM_PCCRMR	derivative.h	11313;"	d
LMEM_PCCRMR_R0	derivative.h	11187;"	d
LMEM_PCCRMR_R0_MASK	derivative.h	11185;"	d
LMEM_PCCRMR_R0_SHIFT	derivative.h	11186;"	d
LMEM_PCCRMR_R1	derivative.h	11184;"	d
LMEM_PCCRMR_R10	derivative.h	11157;"	d
LMEM_PCCRMR_R10_MASK	derivative.h	11155;"	d
LMEM_PCCRMR_R10_SHIFT	derivative.h	11156;"	d
LMEM_PCCRMR_R11	derivative.h	11154;"	d
LMEM_PCCRMR_R11_MASK	derivative.h	11152;"	d
LMEM_PCCRMR_R11_SHIFT	derivative.h	11153;"	d
LMEM_PCCRMR_R12	derivative.h	11151;"	d
LMEM_PCCRMR_R12_MASK	derivative.h	11149;"	d
LMEM_PCCRMR_R12_SHIFT	derivative.h	11150;"	d
LMEM_PCCRMR_R13	derivative.h	11148;"	d
LMEM_PCCRMR_R13_MASK	derivative.h	11146;"	d
LMEM_PCCRMR_R13_SHIFT	derivative.h	11147;"	d
LMEM_PCCRMR_R14	derivative.h	11145;"	d
LMEM_PCCRMR_R14_MASK	derivative.h	11143;"	d
LMEM_PCCRMR_R14_SHIFT	derivative.h	11144;"	d
LMEM_PCCRMR_R15	derivative.h	11142;"	d
LMEM_PCCRMR_R15_MASK	derivative.h	11140;"	d
LMEM_PCCRMR_R15_SHIFT	derivative.h	11141;"	d
LMEM_PCCRMR_R1_MASK	derivative.h	11182;"	d
LMEM_PCCRMR_R1_SHIFT	derivative.h	11183;"	d
LMEM_PCCRMR_R2	derivative.h	11181;"	d
LMEM_PCCRMR_R2_MASK	derivative.h	11179;"	d
LMEM_PCCRMR_R2_SHIFT	derivative.h	11180;"	d
LMEM_PCCRMR_R3	derivative.h	11178;"	d
LMEM_PCCRMR_R3_MASK	derivative.h	11176;"	d
LMEM_PCCRMR_R3_SHIFT	derivative.h	11177;"	d
LMEM_PCCRMR_R4	derivative.h	11175;"	d
LMEM_PCCRMR_R4_MASK	derivative.h	11173;"	d
LMEM_PCCRMR_R4_SHIFT	derivative.h	11174;"	d
LMEM_PCCRMR_R5	derivative.h	11172;"	d
LMEM_PCCRMR_R5_MASK	derivative.h	11170;"	d
LMEM_PCCRMR_R5_SHIFT	derivative.h	11171;"	d
LMEM_PCCRMR_R6	derivative.h	11169;"	d
LMEM_PCCRMR_R6_MASK	derivative.h	11167;"	d
LMEM_PCCRMR_R6_SHIFT	derivative.h	11168;"	d
LMEM_PCCRMR_R7	derivative.h	11166;"	d
LMEM_PCCRMR_R7_MASK	derivative.h	11164;"	d
LMEM_PCCRMR_R7_SHIFT	derivative.h	11165;"	d
LMEM_PCCRMR_R8	derivative.h	11163;"	d
LMEM_PCCRMR_R8_MASK	derivative.h	11161;"	d
LMEM_PCCRMR_R8_SHIFT	derivative.h	11162;"	d
LMEM_PCCRMR_R9	derivative.h	11160;"	d
LMEM_PCCRMR_R9_MASK	derivative.h	11158;"	d
LMEM_PCCRMR_R9_SHIFT	derivative.h	11159;"	d
LMEM_PCCRMR_REG	derivative.h	11070;"	d
LMEM_PCCSAR	derivative.h	11311;"	d
LMEM_PCCSAR_LGO_MASK	derivative.h	11130;"	d
LMEM_PCCSAR_LGO_SHIFT	derivative.h	11131;"	d
LMEM_PCCSAR_PHYADDR	derivative.h	11134;"	d
LMEM_PCCSAR_PHYADDR_MASK	derivative.h	11132;"	d
LMEM_PCCSAR_PHYADDR_SHIFT	derivative.h	11133;"	d
LMEM_PCCSAR_REG	derivative.h	11068;"	d
LMEM_PSCCR	derivative.h	11314;"	d
LMEM_PSCCR_ENCACHE_MASK	derivative.h	11189;"	d
LMEM_PSCCR_ENCACHE_SHIFT	derivative.h	11190;"	d
LMEM_PSCCR_ENWRBUF_MASK	derivative.h	11191;"	d
LMEM_PSCCR_ENWRBUF_SHIFT	derivative.h	11192;"	d
LMEM_PSCCR_GO_MASK	derivative.h	11201;"	d
LMEM_PSCCR_GO_SHIFT	derivative.h	11202;"	d
LMEM_PSCCR_INVW0_MASK	derivative.h	11193;"	d
LMEM_PSCCR_INVW0_SHIFT	derivative.h	11194;"	d
LMEM_PSCCR_INVW1_MASK	derivative.h	11197;"	d
LMEM_PSCCR_INVW1_SHIFT	derivative.h	11198;"	d
LMEM_PSCCR_PUSHW0_MASK	derivative.h	11195;"	d
LMEM_PSCCR_PUSHW0_SHIFT	derivative.h	11196;"	d
LMEM_PSCCR_PUSHW1_MASK	derivative.h	11199;"	d
LMEM_PSCCR_PUSHW1_SHIFT	derivative.h	11200;"	d
LMEM_PSCCR_REG	derivative.h	11071;"	d
LMEM_PSCCVR	derivative.h	11317;"	d
LMEM_PSCCVR_DATA	derivative.h	11235;"	d
LMEM_PSCCVR_DATA_MASK	derivative.h	11233;"	d
LMEM_PSCCVR_DATA_SHIFT	derivative.h	11234;"	d
LMEM_PSCCVR_REG	derivative.h	11074;"	d
LMEM_PSCLCR	derivative.h	11315;"	d
LMEM_PSCLCR_CACHEADDR	derivative.h	11208;"	d
LMEM_PSCLCR_CACHEADDR_MASK	derivative.h	11206;"	d
LMEM_PSCLCR_CACHEADDR_SHIFT	derivative.h	11207;"	d
LMEM_PSCLCR_LACC_MASK	derivative.h	11224;"	d
LMEM_PSCLCR_LACC_SHIFT	derivative.h	11225;"	d
LMEM_PSCLCR_LADSEL_MASK	derivative.h	11222;"	d
LMEM_PSCLCR_LADSEL_SHIFT	derivative.h	11223;"	d
LMEM_PSCLCR_LCIMB_MASK	derivative.h	11215;"	d
LMEM_PSCLCR_LCIMB_SHIFT	derivative.h	11216;"	d
LMEM_PSCLCR_LCIVB_MASK	derivative.h	11213;"	d
LMEM_PSCLCR_LCIVB_SHIFT	derivative.h	11214;"	d
LMEM_PSCLCR_LCMD	derivative.h	11221;"	d
LMEM_PSCLCR_LCMD_MASK	derivative.h	11219;"	d
LMEM_PSCLCR_LCMD_SHIFT	derivative.h	11220;"	d
LMEM_PSCLCR_LCWAY_MASK	derivative.h	11217;"	d
LMEM_PSCLCR_LCWAY_SHIFT	derivative.h	11218;"	d
LMEM_PSCLCR_LGO_MASK	derivative.h	11204;"	d
LMEM_PSCLCR_LGO_SHIFT	derivative.h	11205;"	d
LMEM_PSCLCR_REG	derivative.h	11072;"	d
LMEM_PSCLCR_TDSEL_MASK	derivative.h	11211;"	d
LMEM_PSCLCR_TDSEL_SHIFT	derivative.h	11212;"	d
LMEM_PSCLCR_WSEL_MASK	derivative.h	11209;"	d
LMEM_PSCLCR_WSEL_SHIFT	derivative.h	11210;"	d
LMEM_PSCRMR	derivative.h	11318;"	d
LMEM_PSCRMR_R0	derivative.h	11284;"	d
LMEM_PSCRMR_R0_MASK	derivative.h	11282;"	d
LMEM_PSCRMR_R0_SHIFT	derivative.h	11283;"	d
LMEM_PSCRMR_R1	derivative.h	11281;"	d
LMEM_PSCRMR_R10	derivative.h	11254;"	d
LMEM_PSCRMR_R10_MASK	derivative.h	11252;"	d
LMEM_PSCRMR_R10_SHIFT	derivative.h	11253;"	d
LMEM_PSCRMR_R11	derivative.h	11251;"	d
LMEM_PSCRMR_R11_MASK	derivative.h	11249;"	d
LMEM_PSCRMR_R11_SHIFT	derivative.h	11250;"	d
LMEM_PSCRMR_R12	derivative.h	11248;"	d
LMEM_PSCRMR_R12_MASK	derivative.h	11246;"	d
LMEM_PSCRMR_R12_SHIFT	derivative.h	11247;"	d
LMEM_PSCRMR_R13	derivative.h	11245;"	d
LMEM_PSCRMR_R13_MASK	derivative.h	11243;"	d
LMEM_PSCRMR_R13_SHIFT	derivative.h	11244;"	d
LMEM_PSCRMR_R14	derivative.h	11242;"	d
LMEM_PSCRMR_R14_MASK	derivative.h	11240;"	d
LMEM_PSCRMR_R14_SHIFT	derivative.h	11241;"	d
LMEM_PSCRMR_R15	derivative.h	11239;"	d
LMEM_PSCRMR_R15_MASK	derivative.h	11237;"	d
LMEM_PSCRMR_R15_SHIFT	derivative.h	11238;"	d
LMEM_PSCRMR_R1_MASK	derivative.h	11279;"	d
LMEM_PSCRMR_R1_SHIFT	derivative.h	11280;"	d
LMEM_PSCRMR_R2	derivative.h	11278;"	d
LMEM_PSCRMR_R2_MASK	derivative.h	11276;"	d
LMEM_PSCRMR_R2_SHIFT	derivative.h	11277;"	d
LMEM_PSCRMR_R3	derivative.h	11275;"	d
LMEM_PSCRMR_R3_MASK	derivative.h	11273;"	d
LMEM_PSCRMR_R3_SHIFT	derivative.h	11274;"	d
LMEM_PSCRMR_R4	derivative.h	11272;"	d
LMEM_PSCRMR_R4_MASK	derivative.h	11270;"	d
LMEM_PSCRMR_R4_SHIFT	derivative.h	11271;"	d
LMEM_PSCRMR_R5	derivative.h	11269;"	d
LMEM_PSCRMR_R5_MASK	derivative.h	11267;"	d
LMEM_PSCRMR_R5_SHIFT	derivative.h	11268;"	d
LMEM_PSCRMR_R6	derivative.h	11266;"	d
LMEM_PSCRMR_R6_MASK	derivative.h	11264;"	d
LMEM_PSCRMR_R6_SHIFT	derivative.h	11265;"	d
LMEM_PSCRMR_R7	derivative.h	11263;"	d
LMEM_PSCRMR_R7_MASK	derivative.h	11261;"	d
LMEM_PSCRMR_R7_SHIFT	derivative.h	11262;"	d
LMEM_PSCRMR_R8	derivative.h	11260;"	d
LMEM_PSCRMR_R8_MASK	derivative.h	11258;"	d
LMEM_PSCRMR_R8_SHIFT	derivative.h	11259;"	d
LMEM_PSCRMR_R9	derivative.h	11257;"	d
LMEM_PSCRMR_R9_MASK	derivative.h	11255;"	d
LMEM_PSCRMR_R9_SHIFT	derivative.h	11256;"	d
LMEM_PSCRMR_REG	derivative.h	11075;"	d
LMEM_PSCSAR	derivative.h	11316;"	d
LMEM_PSCSAR_LGO_MASK	derivative.h	11227;"	d
LMEM_PSCSAR_LGO_SHIFT	derivative.h	11228;"	d
LMEM_PSCSAR_PHYADDR	derivative.h	11231;"	d
LMEM_PSCSAR_PHYADDR_MASK	derivative.h	11229;"	d
LMEM_PSCSAR_PHYADDR_SHIFT	derivative.h	11230;"	d
LMEM_PSCSAR_REG	derivative.h	11073;"	d
LPCCR	derivative.h	/^  uint32_t LPCCR;                                  \/**< LCDC PWM contrast control register, offset: 0x2C *\/$/;"	m	struct:LCDC_MemMap
LPCR	derivative.h	/^  uint32_t LPCR;                                   \/**< LCDC panel configuration register, offset: 0x18 *\/$/;"	m	struct:LCDC_MemMap
LPOR	derivative.h	/^  uint32_t LPOR;                                   \/**< LCDC panning offset register, offset: 0x24 *\/$/;"	m	struct:LCDC_MemMap
LPTMR0_BASE_PTR	derivative.h	11418;"	d
LPTMR0_CMR	derivative.h	11436;"	d
LPTMR0_CNR	derivative.h	11437;"	d
LPTMR0_CSR	derivative.h	11434;"	d
LPTMR0_PSR	derivative.h	11435;"	d
LPTMR_BASE_PTRS	derivative.h	11420;"	d
LPTMR_CMR_COMPARE	derivative.h	11405;"	d
LPTMR_CMR_COMPARE_MASK	derivative.h	11403;"	d
LPTMR_CMR_COMPARE_SHIFT	derivative.h	11404;"	d
LPTMR_CMR_REG	derivative.h	11360;"	d
LPTMR_CNR_COUNTER	derivative.h	11409;"	d
LPTMR_CNR_COUNTER_MASK	derivative.h	11407;"	d
LPTMR_CNR_COUNTER_SHIFT	derivative.h	11408;"	d
LPTMR_CNR_REG	derivative.h	11361;"	d
LPTMR_CSR_REG	derivative.h	11358;"	d
LPTMR_CSR_TCF_MASK	derivative.h	11391;"	d
LPTMR_CSR_TCF_SHIFT	derivative.h	11392;"	d
LPTMR_CSR_TEN_MASK	derivative.h	11378;"	d
LPTMR_CSR_TEN_SHIFT	derivative.h	11379;"	d
LPTMR_CSR_TFC_MASK	derivative.h	11382;"	d
LPTMR_CSR_TFC_SHIFT	derivative.h	11383;"	d
LPTMR_CSR_TIE_MASK	derivative.h	11389;"	d
LPTMR_CSR_TIE_SHIFT	derivative.h	11390;"	d
LPTMR_CSR_TMS_MASK	derivative.h	11380;"	d
LPTMR_CSR_TMS_SHIFT	derivative.h	11381;"	d
LPTMR_CSR_TPP_MASK	derivative.h	11384;"	d
LPTMR_CSR_TPP_SHIFT	derivative.h	11385;"	d
LPTMR_CSR_TPS	derivative.h	11388;"	d
LPTMR_CSR_TPS_MASK	derivative.h	11386;"	d
LPTMR_CSR_TPS_SHIFT	derivative.h	11387;"	d
LPTMR_MemMap	derivative.h	/^typedef struct LPTMR_MemMap {$/;"	s
LPTMR_MemMapPtr	derivative.h	/^} volatile *LPTMR_MemMapPtr;$/;"	t
LPTMR_PSR_PBYP_MASK	derivative.h	11397;"	d
LPTMR_PSR_PBYP_SHIFT	derivative.h	11398;"	d
LPTMR_PSR_PCS	derivative.h	11396;"	d
LPTMR_PSR_PCS_MASK	derivative.h	11394;"	d
LPTMR_PSR_PCS_SHIFT	derivative.h	11395;"	d
LPTMR_PSR_PRESCALE	derivative.h	11401;"	d
LPTMR_PSR_PRESCALE_MASK	derivative.h	11399;"	d
LPTMR_PSR_PRESCALE_SHIFT	derivative.h	11400;"	d
LPTMR_PSR_REG	derivative.h	11359;"	d
LR	derivative.h	/^  uint32_t LR;                                     \/**< RTC Lock Register, offset: 0x18 *\/$/;"	m	struct:RTC_MemMap
LRMCR	derivative.h	/^  uint32_t LRMCR;                                  \/**< LCDC refresh mode control register, offset: 0x34 *\/$/;"	m	struct:LCDC_MemMap
LSR	derivative.h	/^  uint32_t LSR;                                    \/**< LCDC size register, offset: 0x4 *\/$/;"	m	struct:LCDC_MemMap
LSR	derivative.h	/^  uint32_t LSR;                                    \/**< Lock Status Register, offset: 0xFB4 *\/$/;"	m	struct:ETB_MemMap
LSR	derivative.h	/^  uint32_t LSR;                                    \/**< Lock Status Register, offset: 0xFB4 *\/$/;"	m	struct:ETF_MemMap
LSR	derivative.h	/^  uint32_t LSR;                                    \/**< Lock Status Register, offset: 0xFB4 *\/$/;"	m	struct:ETM_MemMap
LSR	derivative.h	/^  uint32_t LSR;                                    \/**< Lock Status Register, offset: 0xFB4 *\/$/;"	m	struct:ITM_MemMap
LSSAR	derivative.h	/^  uint32_t LSSAR;                                  \/**< LCDC screen start address register, offset: 0x0 *\/$/;"	m	struct:LCDC_MemMap
LSUCNT	derivative.h	/^  uint32_t LSUCNT;                                 \/**< LSU Count Register, offset: 0x14 *\/$/;"	m	struct:DWT_MemMap
LVCR	derivative.h	/^  uint32_t LVCR;                                   \/**< LCDC vertical configuration register, offset: 0x20 *\/$/;"	m	struct:LCDC_MemMap
LVDSC1	derivative.h	/^  uint8_t LVDSC1;                                  \/**< Low Voltage Detect Status and Control 1 Register, offset: 0x0 *\/$/;"	m	struct:PMC_MemMap
LVDSC2	derivative.h	/^  uint8_t LVDSC2;                                  \/**< Low Voltage Detect Status and Control 2 Register, offset: 0x1 *\/$/;"	m	struct:PMC_MemMap
LVPWR	derivative.h	/^  uint32_t LVPWR;                                  \/**< LCDC virtual page width register, offset: 0x8 *\/$/;"	m	struct:LCDC_MemMap
MA1	derivative.h	/^  uint8_t MA1;                                     \/**< UART Match Address Registers 1, offset: 0x8 *\/$/;"	m	struct:UART_MemMap
MA2	derivative.h	/^  uint8_t MA2;                                     \/**< UART Match Address Registers 2, offset: 0x9 *\/$/;"	m	struct:UART_MemMap
MASK	derivative.h	/^    uint32_t MASK;                                   \/**< Mask Register 0..Mask Register 3, array offset: 0x24, array step: 0x10 *\/$/;"	m	struct:DWT_MemMap::__anon19
MAX_DEVICES	io.h	3;"	d
MAX_FILE_DESCRIPTORS	io.h	4;"	d
MB	derivative.h	/^  } MB[16];$/;"	m	struct:CAN_MemMap	typeref:struct:CAN_MemMap::__anon4
MCG_ATCVH	derivative.h	11706;"	d
MCG_ATCVH_ATCVH	derivative.h	11618;"	d
MCG_ATCVH_ATCVH_MASK	derivative.h	11616;"	d
MCG_ATCVH_ATCVH_SHIFT	derivative.h	11617;"	d
MCG_ATCVH_REG	derivative.h	11500;"	d
MCG_ATCVL	derivative.h	11707;"	d
MCG_ATCVL_ATCVL	derivative.h	11622;"	d
MCG_ATCVL_ATCVL_MASK	derivative.h	11620;"	d
MCG_ATCVL_ATCVL_SHIFT	derivative.h	11621;"	d
MCG_ATCVL_REG	derivative.h	11501;"	d
MCG_BASE_PTR	derivative.h	11682;"	d
MCG_BASE_PTRS	derivative.h	11684;"	d
MCG_C1	derivative.h	11698;"	d
MCG_C10	derivative.h	11710;"	d
MCG_C10_EREFS1_MASK	derivative.h	11634;"	d
MCG_C10_EREFS1_SHIFT	derivative.h	11635;"	d
MCG_C10_HGO1_MASK	derivative.h	11636;"	d
MCG_C10_HGO1_SHIFT	derivative.h	11637;"	d
MCG_C10_LOCRE2_MASK	derivative.h	11641;"	d
MCG_C10_LOCRE2_SHIFT	derivative.h	11642;"	d
MCG_C10_RANGE1	derivative.h	11640;"	d
MCG_C10_RANGE1_MASK	derivative.h	11638;"	d
MCG_C10_RANGE1_SHIFT	derivative.h	11639;"	d
MCG_C10_REG	derivative.h	11504;"	d
MCG_C11	derivative.h	11711;"	d
MCG_C11_PLLCLKEN1_MASK	derivative.h	11651;"	d
MCG_C11_PLLCLKEN1_SHIFT	derivative.h	11652;"	d
MCG_C11_PLLCS_MASK	derivative.h	11647;"	d
MCG_C11_PLLCS_SHIFT	derivative.h	11648;"	d
MCG_C11_PLLREFSEL1_MASK	derivative.h	11653;"	d
MCG_C11_PLLREFSEL1_SHIFT	derivative.h	11654;"	d
MCG_C11_PLLSTEN1_MASK	derivative.h	11649;"	d
MCG_C11_PLLSTEN1_SHIFT	derivative.h	11650;"	d
MCG_C11_PRDIV1	derivative.h	11646;"	d
MCG_C11_PRDIV1_MASK	derivative.h	11644;"	d
MCG_C11_PRDIV1_SHIFT	derivative.h	11645;"	d
MCG_C11_REG	derivative.h	11505;"	d
MCG_C12	derivative.h	11712;"	d
MCG_C12_CME2_MASK	derivative.h	11659;"	d
MCG_C12_CME2_SHIFT	derivative.h	11660;"	d
MCG_C12_LOLIE1_MASK	derivative.h	11661;"	d
MCG_C12_LOLIE1_SHIFT	derivative.h	11662;"	d
MCG_C12_REG	derivative.h	11506;"	d
MCG_C12_VDIV1	derivative.h	11658;"	d
MCG_C12_VDIV1_MASK	derivative.h	11656;"	d
MCG_C12_VDIV1_SHIFT	derivative.h	11657;"	d
MCG_C1_CLKS	derivative.h	11535;"	d
MCG_C1_CLKS_MASK	derivative.h	11533;"	d
MCG_C1_CLKS_SHIFT	derivative.h	11534;"	d
MCG_C1_FRDIV	derivative.h	11532;"	d
MCG_C1_FRDIV_MASK	derivative.h	11530;"	d
MCG_C1_FRDIV_SHIFT	derivative.h	11531;"	d
MCG_C1_IRCLKEN_MASK	derivative.h	11526;"	d
MCG_C1_IRCLKEN_SHIFT	derivative.h	11527;"	d
MCG_C1_IREFSTEN_MASK	derivative.h	11524;"	d
MCG_C1_IREFSTEN_SHIFT	derivative.h	11525;"	d
MCG_C1_IREFS_MASK	derivative.h	11528;"	d
MCG_C1_IREFS_SHIFT	derivative.h	11529;"	d
MCG_C1_REG	derivative.h	11492;"	d
MCG_C2	derivative.h	11699;"	d
MCG_C2_EREFS0_MASK	derivative.h	11541;"	d
MCG_C2_EREFS0_SHIFT	derivative.h	11542;"	d
MCG_C2_HGO0_MASK	derivative.h	11543;"	d
MCG_C2_HGO0_SHIFT	derivative.h	11544;"	d
MCG_C2_IRCS_MASK	derivative.h	11537;"	d
MCG_C2_IRCS_SHIFT	derivative.h	11538;"	d
MCG_C2_LOCRE0_MASK	derivative.h	11548;"	d
MCG_C2_LOCRE0_SHIFT	derivative.h	11549;"	d
MCG_C2_LP_MASK	derivative.h	11539;"	d
MCG_C2_LP_SHIFT	derivative.h	11540;"	d
MCG_C2_RANGE0	derivative.h	11547;"	d
MCG_C2_RANGE0_MASK	derivative.h	11545;"	d
MCG_C2_RANGE0_SHIFT	derivative.h	11546;"	d
MCG_C2_REG	derivative.h	11493;"	d
MCG_C3	derivative.h	11700;"	d
MCG_C3_REG	derivative.h	11494;"	d
MCG_C3_SCTRIM	derivative.h	11553;"	d
MCG_C3_SCTRIM_MASK	derivative.h	11551;"	d
MCG_C3_SCTRIM_SHIFT	derivative.h	11552;"	d
MCG_C4	derivative.h	11701;"	d
MCG_C4_DMX32_MASK	derivative.h	11563;"	d
MCG_C4_DMX32_SHIFT	derivative.h	11564;"	d
MCG_C4_DRST_DRS	derivative.h	11562;"	d
MCG_C4_DRST_DRS_MASK	derivative.h	11560;"	d
MCG_C4_DRST_DRS_SHIFT	derivative.h	11561;"	d
MCG_C4_FCTRIM	derivative.h	11559;"	d
MCG_C4_FCTRIM_MASK	derivative.h	11557;"	d
MCG_C4_FCTRIM_SHIFT	derivative.h	11558;"	d
MCG_C4_REG	derivative.h	11495;"	d
MCG_C4_SCFTRIM_MASK	derivative.h	11555;"	d
MCG_C4_SCFTRIM_SHIFT	derivative.h	11556;"	d
MCG_C5	derivative.h	11702;"	d
MCG_C5_PLLCLKEN0_MASK	derivative.h	11571;"	d
MCG_C5_PLLCLKEN0_SHIFT	derivative.h	11572;"	d
MCG_C5_PLLREFSEL0_MASK	derivative.h	11573;"	d
MCG_C5_PLLREFSEL0_SHIFT	derivative.h	11574;"	d
MCG_C5_PLLSTEN0_MASK	derivative.h	11569;"	d
MCG_C5_PLLSTEN0_SHIFT	derivative.h	11570;"	d
MCG_C5_PRDIV0	derivative.h	11568;"	d
MCG_C5_PRDIV0_MASK	derivative.h	11566;"	d
MCG_C5_PRDIV0_SHIFT	derivative.h	11567;"	d
MCG_C5_REG	derivative.h	11496;"	d
MCG_C6	derivative.h	11703;"	d
MCG_C6_CME0_MASK	derivative.h	11579;"	d
MCG_C6_CME0_SHIFT	derivative.h	11580;"	d
MCG_C6_LOLIE0_MASK	derivative.h	11583;"	d
MCG_C6_LOLIE0_SHIFT	derivative.h	11584;"	d
MCG_C6_PLLS_MASK	derivative.h	11581;"	d
MCG_C6_PLLS_SHIFT	derivative.h	11582;"	d
MCG_C6_REG	derivative.h	11497;"	d
MCG_C6_VDIV0	derivative.h	11578;"	d
MCG_C6_VDIV0_MASK	derivative.h	11576;"	d
MCG_C6_VDIV0_SHIFT	derivative.h	11577;"	d
MCG_C7	derivative.h	11708;"	d
MCG_C7_OSCSEL_MASK	derivative.h	11624;"	d
MCG_C7_OSCSEL_SHIFT	derivative.h	11625;"	d
MCG_C7_REG	derivative.h	11502;"	d
MCG_C8	derivative.h	11709;"	d
MCG_C8_CME1_MASK	derivative.h	11629;"	d
MCG_C8_CME1_SHIFT	derivative.h	11630;"	d
MCG_C8_LOCRE1_MASK	derivative.h	11631;"	d
MCG_C8_LOCRE1_SHIFT	derivative.h	11632;"	d
MCG_C8_LOCS1_MASK	derivative.h	11627;"	d
MCG_C8_LOCS1_SHIFT	derivative.h	11628;"	d
MCG_C8_REG	derivative.h	11503;"	d
MCG_MemMap	derivative.h	/^typedef struct MCG_MemMap {$/;"	s
MCG_MemMapPtr	derivative.h	/^} volatile *MCG_MemMapPtr;$/;"	t
MCG_S	derivative.h	11704;"	d
MCG_S2	derivative.h	11713;"	d
MCG_S2_LOCK1_MASK	derivative.h	11670;"	d
MCG_S2_LOCK1_SHIFT	derivative.h	11671;"	d
MCG_S2_LOCS2_MASK	derivative.h	11664;"	d
MCG_S2_LOCS2_SHIFT	derivative.h	11665;"	d
MCG_S2_LOLS1_MASK	derivative.h	11672;"	d
MCG_S2_LOLS1_SHIFT	derivative.h	11673;"	d
MCG_S2_OSCINIT1_MASK	derivative.h	11666;"	d
MCG_S2_OSCINIT1_SHIFT	derivative.h	11667;"	d
MCG_S2_PLLCST_MASK	derivative.h	11668;"	d
MCG_S2_PLLCST_SHIFT	derivative.h	11669;"	d
MCG_S2_REG	derivative.h	11507;"	d
MCG_SC	derivative.h	11705;"	d
MCG_SC_ATME_MASK	derivative.h	11613;"	d
MCG_SC_ATME_SHIFT	derivative.h	11614;"	d
MCG_SC_ATMF_MASK	derivative.h	11609;"	d
MCG_SC_ATMF_SHIFT	derivative.h	11610;"	d
MCG_SC_ATMS_MASK	derivative.h	11611;"	d
MCG_SC_ATMS_SHIFT	derivative.h	11612;"	d
MCG_SC_FCRDIV	derivative.h	11606;"	d
MCG_SC_FCRDIV_MASK	derivative.h	11604;"	d
MCG_SC_FCRDIV_SHIFT	derivative.h	11605;"	d
MCG_SC_FLTPRSRV_MASK	derivative.h	11607;"	d
MCG_SC_FLTPRSRV_SHIFT	derivative.h	11608;"	d
MCG_SC_LOCS0_MASK	derivative.h	11602;"	d
MCG_SC_LOCS0_SHIFT	derivative.h	11603;"	d
MCG_SC_REG	derivative.h	11499;"	d
MCG_S_CLKST	derivative.h	11592;"	d
MCG_S_CLKST_MASK	derivative.h	11590;"	d
MCG_S_CLKST_SHIFT	derivative.h	11591;"	d
MCG_S_IRCST_MASK	derivative.h	11586;"	d
MCG_S_IRCST_SHIFT	derivative.h	11587;"	d
MCG_S_IREFST_MASK	derivative.h	11593;"	d
MCG_S_IREFST_SHIFT	derivative.h	11594;"	d
MCG_S_LOCK0_MASK	derivative.h	11597;"	d
MCG_S_LOCK0_SHIFT	derivative.h	11598;"	d
MCG_S_LOLS0_MASK	derivative.h	11599;"	d
MCG_S_LOLS0_SHIFT	derivative.h	11600;"	d
MCG_S_OSCINIT0_MASK	derivative.h	11588;"	d
MCG_S_OSCINIT0_SHIFT	derivative.h	11589;"	d
MCG_S_PLLST_MASK	derivative.h	11595;"	d
MCG_S_PLLST_SHIFT	derivative.h	11596;"	d
MCG_S_REG	derivative.h	11498;"	d
MCHR	derivative.h	/^  uint32_t MCHR;                                   \/**< RTC Monotonic Counter High Register, offset: 0x2C *\/$/;"	m	struct:RTC_MemMap
MCLR	derivative.h	/^  uint32_t MCLR;                                   \/**< RTC Monotonic Counter Low Register, offset: 0x28 *\/$/;"	m	struct:RTC_MemMap
MCM_BASE_PTR	derivative.h	11900;"	d
MCM_BASE_PTRS	derivative.h	11902;"	d
MCM_CR	derivative.h	11918;"	d
MCM_CR_DDRSIZE	derivative.h	11799;"	d
MCM_CR_DDRSIZE_128_MBYTES	sdram.h	22;"	d
MCM_CR_DDRSIZE_256_MBYTES	sdram.h	23;"	d
MCM_CR_DDRSIZE_512_MBYTES	sdram.h	24;"	d
MCM_CR_DDRSIZE_ADDRESS_TRANSLATION_DISABLED	sdram.h	21;"	d
MCM_CR_DDRSIZE_MASK	derivative.h	11797;"	d
MCM_CR_DDRSIZE_SHIFT	derivative.h	11798;"	d
MCM_CR_REG	derivative.h	11764;"	d
MCM_CR_SRAMLAP	derivative.h	11807;"	d
MCM_CR_SRAMLAP_MASK	derivative.h	11805;"	d
MCM_CR_SRAMLAP_SHIFT	derivative.h	11806;"	d
MCM_CR_SRAMLWP_MASK	derivative.h	11808;"	d
MCM_CR_SRAMLWP_SHIFT	derivative.h	11809;"	d
MCM_CR_SRAMUAP	derivative.h	11802;"	d
MCM_CR_SRAMUAP_MASK	derivative.h	11800;"	d
MCM_CR_SRAMUAP_SHIFT	derivative.h	11801;"	d
MCM_CR_SRAMUWP_MASK	derivative.h	11803;"	d
MCM_CR_SRAMUWP_SHIFT	derivative.h	11804;"	d
MCM_ETBCC	derivative.h	11920;"	d
MCM_ETBCC_CNTEN_MASK	derivative.h	11846;"	d
MCM_ETBCC_CNTEN_SHIFT	derivative.h	11847;"	d
MCM_ETBCC_ETDIS_MASK	derivative.h	11853;"	d
MCM_ETBCC_ETDIS_SHIFT	derivative.h	11854;"	d
MCM_ETBCC_ITDIS_MASK	derivative.h	11855;"	d
MCM_ETBCC_ITDIS_SHIFT	derivative.h	11856;"	d
MCM_ETBCC_REG	derivative.h	11766;"	d
MCM_ETBCC_RLRQ_MASK	derivative.h	11851;"	d
MCM_ETBCC_RLRQ_SHIFT	derivative.h	11852;"	d
MCM_ETBCC_RSPT	derivative.h	11850;"	d
MCM_ETBCC_RSPT_MASK	derivative.h	11848;"	d
MCM_ETBCC_RSPT_SHIFT	derivative.h	11849;"	d
MCM_ETBCNT	derivative.h	11922;"	d
MCM_ETBCNT_COUNTER	derivative.h	11864;"	d
MCM_ETBCNT_COUNTER_MASK	derivative.h	11862;"	d
MCM_ETBCNT_COUNTER_SHIFT	derivative.h	11863;"	d
MCM_ETBCNT_REG	derivative.h	11768;"	d
MCM_ETBRL	derivative.h	11921;"	d
MCM_ETBRL_REG	derivative.h	11767;"	d
MCM_ETBRL_RELOAD	derivative.h	11860;"	d
MCM_ETBRL_RELOAD_MASK	derivative.h	11858;"	d
MCM_ETBRL_RELOAD_SHIFT	derivative.h	11859;"	d
MCM_FADR	derivative.h	11923;"	d
MCM_FADR_ADDRESS	derivative.h	11868;"	d
MCM_FADR_ADDRESS_MASK	derivative.h	11866;"	d
MCM_FADR_ADDRESS_SHIFT	derivative.h	11867;"	d
MCM_FADR_REG	derivative.h	11769;"	d
MCM_FATR	derivative.h	11924;"	d
MCM_FATR_BEDA_MASK	derivative.h	11870;"	d
MCM_FATR_BEDA_SHIFT	derivative.h	11871;"	d
MCM_FATR_BEMD_MASK	derivative.h	11872;"	d
MCM_FATR_BEMD_SHIFT	derivative.h	11873;"	d
MCM_FATR_BEMN	derivative.h	11881;"	d
MCM_FATR_BEMN_MASK	derivative.h	11879;"	d
MCM_FATR_BEMN_SHIFT	derivative.h	11880;"	d
MCM_FATR_BEOVR_MASK	derivative.h	11882;"	d
MCM_FATR_BEOVR_SHIFT	derivative.h	11883;"	d
MCM_FATR_BESZ	derivative.h	11876;"	d
MCM_FATR_BESZ_MASK	derivative.h	11874;"	d
MCM_FATR_BESZ_SHIFT	derivative.h	11875;"	d
MCM_FATR_BEWT_MASK	derivative.h	11877;"	d
MCM_FATR_BEWT_SHIFT	derivative.h	11878;"	d
MCM_FATR_REG	derivative.h	11770;"	d
MCM_FDR	derivative.h	11925;"	d
MCM_FDR_DATA	derivative.h	11887;"	d
MCM_FDR_DATA_MASK	derivative.h	11885;"	d
MCM_FDR_DATA_SHIFT	derivative.h	11886;"	d
MCM_FDR_REG	derivative.h	11771;"	d
MCM_ISCR	derivative.h	11919;"	d
MCM_ISR_CWBEE_MASK	derivative.h	11831;"	d
MCM_ISR_CWBEE_SHIFT	derivative.h	11832;"	d
MCM_ISR_CWBER_MASK	derivative.h	11817;"	d
MCM_ISR_CWBER_SHIFT	derivative.h	11818;"	d
MCM_ISR_DHREQ_MASK	derivative.h	11815;"	d
MCM_ISR_DHREQ_SHIFT	derivative.h	11816;"	d
MCM_ISR_FDZCE_MASK	derivative.h	11835;"	d
MCM_ISR_FDZCE_SHIFT	derivative.h	11836;"	d
MCM_ISR_FDZC_MASK	derivative.h	11821;"	d
MCM_ISR_FDZC_SHIFT	derivative.h	11822;"	d
MCM_ISR_FIDCE_MASK	derivative.h	11843;"	d
MCM_ISR_FIDCE_SHIFT	derivative.h	11844;"	d
MCM_ISR_FIDC_MASK	derivative.h	11829;"	d
MCM_ISR_FIDC_SHIFT	derivative.h	11830;"	d
MCM_ISR_FIOCE_MASK	derivative.h	11833;"	d
MCM_ISR_FIOCE_SHIFT	derivative.h	11834;"	d
MCM_ISR_FIOC_MASK	derivative.h	11819;"	d
MCM_ISR_FIOC_SHIFT	derivative.h	11820;"	d
MCM_ISR_FIXCE_MASK	derivative.h	11841;"	d
MCM_ISR_FIXCE_SHIFT	derivative.h	11842;"	d
MCM_ISR_FIXC_MASK	derivative.h	11827;"	d
MCM_ISR_FIXC_SHIFT	derivative.h	11828;"	d
MCM_ISR_FOFCE_MASK	derivative.h	11837;"	d
MCM_ISR_FOFCE_SHIFT	derivative.h	11838;"	d
MCM_ISR_FOFC_MASK	derivative.h	11823;"	d
MCM_ISR_FOFC_SHIFT	derivative.h	11824;"	d
MCM_ISR_FUFCE_MASK	derivative.h	11839;"	d
MCM_ISR_FUFCE_SHIFT	derivative.h	11840;"	d
MCM_ISR_FUFC_MASK	derivative.h	11825;"	d
MCM_ISR_FUFC_SHIFT	derivative.h	11826;"	d
MCM_ISR_IRQ_MASK	derivative.h	11811;"	d
MCM_ISR_IRQ_SHIFT	derivative.h	11812;"	d
MCM_ISR_NMI_MASK	derivative.h	11813;"	d
MCM_ISR_NMI_SHIFT	derivative.h	11814;"	d
MCM_ISR_REG	derivative.h	11765;"	d
MCM_MemMap	derivative.h	/^typedef struct MCM_MemMap {$/;"	s
MCM_MemMapPtr	derivative.h	/^} volatile *MCM_MemMapPtr;$/;"	t
MCM_PID	derivative.h	11926;"	d
MCM_PID_PID	derivative.h	11891;"	d
MCM_PID_PID_MASK	derivative.h	11889;"	d
MCM_PID_PID_SHIFT	derivative.h	11890;"	d
MCM_PID_REG	derivative.h	11772;"	d
MCM_PLAMC	derivative.h	11917;"	d
MCM_PLAMC_AMC	derivative.h	11795;"	d
MCM_PLAMC_AMC_MASK	derivative.h	11793;"	d
MCM_PLAMC_AMC_SHIFT	derivative.h	11794;"	d
MCM_PLAMC_REG	derivative.h	11763;"	d
MCM_PLASC	derivative.h	11916;"	d
MCM_PLASC_ASC	derivative.h	11791;"	d
MCM_PLASC_ASC_MASK	derivative.h	11789;"	d
MCM_PLASC_ASC_SHIFT	derivative.h	11790;"	d
MCM_PLASC_REG	derivative.h	11762;"	d
MCR	derivative.h	/^  uint32_t MCR;                                    \/**< DSPI Module Configuration Register, offset: 0x0 *\/$/;"	m	struct:SPI_MemMap
MCR	derivative.h	/^  uint32_t MCR;                                    \/**< Misc Control Register, offset: 0x106C *\/$/;"	m	struct:SIM_MemMap
MCR	derivative.h	/^  uint32_t MCR;                                    \/**< Module Configuration Register, offset: 0x0 *\/$/;"	m	struct:CAN_MemMap
MCR	derivative.h	/^  uint32_t MCR;                                    \/**< PIT Module Control Register, offset: 0x0 *\/$/;"	m	struct:PIT_MemMap
MCR	derivative.h	/^  uint32_t MCR;                                    \/**< SAI MCLK Control Register, offset: 0x100 *\/$/;"	m	struct:I2S_MemMap
MCU_ACTIVE	derivative.h	83;"	d
MCU_MEM_MAP_VERSION	derivative.h	89;"	d
MCU_MEM_MAP_VERSION_MINOR	derivative.h	91;"	d
MCU_MK70F12	derivative.h	76;"	d
MCU_MK70F15	derivative.h	77;"	d
MDR	derivative.h	/^  uint32_t MDR;                                    \/**< MCLK Divide Register, offset: 0x104 *\/$/;"	m	struct:I2S_MemMap
ME	derivative.h	/^  uint8_t ME;                                      \/**< LLWU Module Enable Register, offset: 0x4 *\/$/;"	m	struct:LLWU_MemMap
MEMORY_DATA_PADDING	mymalloc.c	11;"	d	file:
MEMORY_SIZE	mymalloc.h	3;"	d
MER	derivative.h	/^  uint32_t MER;                                    \/**< RTC Monotonic Enable Register, offset: 0x24 *\/$/;"	m	struct:RTC_MemMap
MG	derivative.h	/^  uint32_t MG;                                     \/**< ADC minus-side gain register, offset: 0x30 *\/$/;"	m	struct:ADC_MemMap
MGPCR0	derivative.h	/^  uint32_t MGPCR0;                                 \/**< Master General Purpose Control Register, offset: 0x800 *\/$/;"	m	struct:AXBS_MemMap
MGPCR1	derivative.h	/^  uint32_t MGPCR1;                                 \/**< Master General Purpose Control Register, offset: 0x900 *\/$/;"	m	struct:AXBS_MemMap
MGPCR2	derivative.h	/^  uint32_t MGPCR2;                                 \/**< Master General Purpose Control Register, offset: 0xA00 *\/$/;"	m	struct:AXBS_MemMap
MGPCR3	derivative.h	/^  uint32_t MGPCR3;                                 \/**< Master General Purpose Control Register, offset: 0xB00 *\/$/;"	m	struct:AXBS_MemMap
MGPCR4	derivative.h	/^  uint32_t MGPCR4;                                 \/**< Master General Purpose Control Register, offset: 0xC00 *\/$/;"	m	struct:AXBS_MemMap
MGPCR5	derivative.h	/^  uint32_t MGPCR5;                                 \/**< Master General Purpose Control Register, offset: 0xD00 *\/$/;"	m	struct:AXBS_MemMap
MGPCR6	derivative.h	/^  uint32_t MGPCR6;                                 \/**< Master General Purpose Control Register, offset: 0xE00 *\/$/;"	m	struct:AXBS_MemMap
MGPCR7	derivative.h	/^  uint32_t MGPCR7;                                 \/**< Master General Purpose Control Register, offset: 0xF00 *\/$/;"	m	struct:AXBS_MemMap
MIBC	derivative.h	/^  uint32_t MIBC;                                   \/**< MIB Control Register, offset: 0x64 *\/$/;"	m	struct:ENET_MemMap
MMCBOOT	derivative.h	/^  uint32_t MMCBOOT;                                \/**< MMC Boot Register, offset: 0xC4 *\/$/;"	m	struct:SDHC_MemMap
MMFAR	derivative.h	/^  uint32_t MMFAR;                                  \/**< MemManage Address Register, offset: 0xD34 *\/$/;"	m	struct:SCB_MemMap
MMFR	derivative.h	/^  uint32_t MMFR;                                   \/**< MII Management Frame Register, offset: 0x40 *\/$/;"	m	struct:ENET_MemMap
MOD	derivative.h	/^  uint32_t MOD;                                    \/**< Modulo, offset: 0x8 *\/$/;"	m	struct:FTM_MemMap
MOD	derivative.h	/^  uint32_t MOD;                                    \/**< Modulus Register, offset: 0x4 *\/$/;"	m	struct:PDB_MemMap
MODE	derivative.h	/^  uint32_t MODE;                                   \/**< Features Mode Selection, offset: 0x54 *\/$/;"	m	struct:FTM_MemMap
MODEM	derivative.h	/^  uint8_t MODEM;                                   \/**< UART Modem Register, offset: 0xD *\/$/;"	m	struct:UART_MemMap
MPRA	derivative.h	/^  uint32_t MPRA;                                   \/**< Master Privilege Register A, offset: 0x0 *\/$/;"	m	struct:AIPS_MemMap
MPU_BASE_PTR	derivative.h	12146;"	d
MPU_BASE_PTRS	derivative.h	12148;"	d
MPU_CESR	derivative.h	12162;"	d
MPU_CESR_HRL	derivative.h	12003;"	d
MPU_CESR_HRL_MASK	derivative.h	12001;"	d
MPU_CESR_HRL_SHIFT	derivative.h	12002;"	d
MPU_CESR_NRGD	derivative.h	11997;"	d
MPU_CESR_NRGD_MASK	derivative.h	11995;"	d
MPU_CESR_NRGD_SHIFT	derivative.h	11996;"	d
MPU_CESR_NSP	derivative.h	12000;"	d
MPU_CESR_NSP_MASK	derivative.h	11998;"	d
MPU_CESR_NSP_SHIFT	derivative.h	11999;"	d
MPU_CESR_REG	derivative.h	11972;"	d
MPU_CESR_SPERR	derivative.h	12006;"	d
MPU_CESR_SPERR_MASK	derivative.h	12004;"	d
MPU_CESR_SPERR_SHIFT	derivative.h	12005;"	d
MPU_CESR_VLD_MASK	derivative.h	11993;"	d
MPU_CESR_VLD_SHIFT	derivative.h	11994;"	d
MPU_EAR	derivative.h	12255;"	d
MPU_EAR0	derivative.h	12163;"	d
MPU_EAR1	derivative.h	12165;"	d
MPU_EAR2	derivative.h	12167;"	d
MPU_EAR3	derivative.h	12169;"	d
MPU_EAR4	derivative.h	12171;"	d
MPU_EAR_EADDR	derivative.h	12010;"	d
MPU_EAR_EADDR_MASK	derivative.h	12008;"	d
MPU_EAR_EADDR_SHIFT	derivative.h	12009;"	d
MPU_EAR_REG	derivative.h	11973;"	d
MPU_EDR	derivative.h	12256;"	d
MPU_EDR0	derivative.h	12164;"	d
MPU_EDR1	derivative.h	12166;"	d
MPU_EDR2	derivative.h	12168;"	d
MPU_EDR3	derivative.h	12170;"	d
MPU_EDR4	derivative.h	12172;"	d
MPU_EDR_EACD	derivative.h	12025;"	d
MPU_EDR_EACD_MASK	derivative.h	12023;"	d
MPU_EDR_EACD_SHIFT	derivative.h	12024;"	d
MPU_EDR_EATTR	derivative.h	12016;"	d
MPU_EDR_EATTR_MASK	derivative.h	12014;"	d
MPU_EDR_EATTR_SHIFT	derivative.h	12015;"	d
MPU_EDR_EMN	derivative.h	12019;"	d
MPU_EDR_EMN_MASK	derivative.h	12017;"	d
MPU_EDR_EMN_SHIFT	derivative.h	12018;"	d
MPU_EDR_EPID	derivative.h	12022;"	d
MPU_EDR_EPID_MASK	derivative.h	12020;"	d
MPU_EDR_EPID_SHIFT	derivative.h	12021;"	d
MPU_EDR_ERW_MASK	derivative.h	12012;"	d
MPU_EDR_ERW_SHIFT	derivative.h	12013;"	d
MPU_EDR_REG	derivative.h	11974;"	d
MPU_MemMap	derivative.h	/^typedef struct MPU_MemMap {$/;"	s
MPU_MemMapPtr	derivative.h	/^} volatile *MPU_MemMapPtr;$/;"	t
MPU_RGD0_WORD0	derivative.h	12173;"	d
MPU_RGD0_WORD1	derivative.h	12174;"	d
MPU_RGD0_WORD2	derivative.h	12175;"	d
MPU_RGD0_WORD3	derivative.h	12176;"	d
MPU_RGD10_WORD0	derivative.h	12213;"	d
MPU_RGD10_WORD1	derivative.h	12214;"	d
MPU_RGD10_WORD2	derivative.h	12215;"	d
MPU_RGD10_WORD3	derivative.h	12216;"	d
MPU_RGD11_WORD0	derivative.h	12217;"	d
MPU_RGD11_WORD1	derivative.h	12218;"	d
MPU_RGD11_WORD2	derivative.h	12219;"	d
MPU_RGD11_WORD3	derivative.h	12220;"	d
MPU_RGD12_WORD0	derivative.h	12221;"	d
MPU_RGD12_WORD1	derivative.h	12222;"	d
MPU_RGD12_WORD2	derivative.h	12223;"	d
MPU_RGD12_WORD3	derivative.h	12224;"	d
MPU_RGD13_WORD0	derivative.h	12225;"	d
MPU_RGD13_WORD1	derivative.h	12226;"	d
MPU_RGD13_WORD2	derivative.h	12227;"	d
MPU_RGD13_WORD3	derivative.h	12228;"	d
MPU_RGD14_WORD0	derivative.h	12229;"	d
MPU_RGD14_WORD1	derivative.h	12230;"	d
MPU_RGD14_WORD2	derivative.h	12231;"	d
MPU_RGD14_WORD3	derivative.h	12232;"	d
MPU_RGD15_WORD0	derivative.h	12233;"	d
MPU_RGD15_WORD1	derivative.h	12234;"	d
MPU_RGD15_WORD2	derivative.h	12235;"	d
MPU_RGD15_WORD3	derivative.h	12236;"	d
MPU_RGD1_WORD0	derivative.h	12177;"	d
MPU_RGD1_WORD1	derivative.h	12178;"	d
MPU_RGD1_WORD2	derivative.h	12179;"	d
MPU_RGD1_WORD3	derivative.h	12180;"	d
MPU_RGD2_WORD0	derivative.h	12181;"	d
MPU_RGD2_WORD1	derivative.h	12182;"	d
MPU_RGD2_WORD2	derivative.h	12183;"	d
MPU_RGD2_WORD3	derivative.h	12184;"	d
MPU_RGD3_WORD0	derivative.h	12185;"	d
MPU_RGD3_WORD1	derivative.h	12186;"	d
MPU_RGD3_WORD2	derivative.h	12187;"	d
MPU_RGD3_WORD3	derivative.h	12188;"	d
MPU_RGD4_WORD0	derivative.h	12189;"	d
MPU_RGD4_WORD1	derivative.h	12190;"	d
MPU_RGD4_WORD2	derivative.h	12191;"	d
MPU_RGD4_WORD3	derivative.h	12192;"	d
MPU_RGD5_WORD0	derivative.h	12193;"	d
MPU_RGD5_WORD1	derivative.h	12194;"	d
MPU_RGD5_WORD2	derivative.h	12195;"	d
MPU_RGD5_WORD3	derivative.h	12196;"	d
MPU_RGD6_WORD0	derivative.h	12197;"	d
MPU_RGD6_WORD1	derivative.h	12198;"	d
MPU_RGD6_WORD2	derivative.h	12199;"	d
MPU_RGD6_WORD3	derivative.h	12200;"	d
MPU_RGD7_WORD0	derivative.h	12201;"	d
MPU_RGD7_WORD1	derivative.h	12202;"	d
MPU_RGD7_WORD2	derivative.h	12203;"	d
MPU_RGD7_WORD3	derivative.h	12204;"	d
MPU_RGD8_WORD0	derivative.h	12205;"	d
MPU_RGD8_WORD1	derivative.h	12206;"	d
MPU_RGD8_WORD2	derivative.h	12207;"	d
MPU_RGD8_WORD3	derivative.h	12208;"	d
MPU_RGD9_WORD0	derivative.h	12209;"	d
MPU_RGD9_WORD1	derivative.h	12210;"	d
MPU_RGD9_WORD2	derivative.h	12211;"	d
MPU_RGD9_WORD3	derivative.h	12212;"	d
MPU_RGDAAC	derivative.h	12258;"	d
MPU_RGDAAC0	derivative.h	12237;"	d
MPU_RGDAAC1	derivative.h	12238;"	d
MPU_RGDAAC10	derivative.h	12247;"	d
MPU_RGDAAC11	derivative.h	12248;"	d
MPU_RGDAAC12	derivative.h	12249;"	d
MPU_RGDAAC13	derivative.h	12250;"	d
MPU_RGDAAC14	derivative.h	12251;"	d
MPU_RGDAAC15	derivative.h	12252;"	d
MPU_RGDAAC2	derivative.h	12239;"	d
MPU_RGDAAC3	derivative.h	12240;"	d
MPU_RGDAAC4	derivative.h	12241;"	d
MPU_RGDAAC5	derivative.h	12242;"	d
MPU_RGDAAC6	derivative.h	12243;"	d
MPU_RGDAAC7	derivative.h	12244;"	d
MPU_RGDAAC8	derivative.h	12245;"	d
MPU_RGDAAC9	derivative.h	12246;"	d
MPU_RGDAAC_M0PE_MASK	derivative.h	12096;"	d
MPU_RGDAAC_M0PE_SHIFT	derivative.h	12097;"	d
MPU_RGDAAC_M0SM	derivative.h	12095;"	d
MPU_RGDAAC_M0SM_MASK	derivative.h	12093;"	d
MPU_RGDAAC_M0SM_SHIFT	derivative.h	12094;"	d
MPU_RGDAAC_M0UM	derivative.h	12092;"	d
MPU_RGDAAC_M0UM_MASK	derivative.h	12090;"	d
MPU_RGDAAC_M0UM_SHIFT	derivative.h	12091;"	d
MPU_RGDAAC_M1PE_MASK	derivative.h	12104;"	d
MPU_RGDAAC_M1PE_SHIFT	derivative.h	12105;"	d
MPU_RGDAAC_M1SM	derivative.h	12103;"	d
MPU_RGDAAC_M1SM_MASK	derivative.h	12101;"	d
MPU_RGDAAC_M1SM_SHIFT	derivative.h	12102;"	d
MPU_RGDAAC_M1UM	derivative.h	12100;"	d
MPU_RGDAAC_M1UM_MASK	derivative.h	12098;"	d
MPU_RGDAAC_M1UM_SHIFT	derivative.h	12099;"	d
MPU_RGDAAC_M2PE_MASK	derivative.h	12112;"	d
MPU_RGDAAC_M2PE_SHIFT	derivative.h	12113;"	d
MPU_RGDAAC_M2SM	derivative.h	12111;"	d
MPU_RGDAAC_M2SM_MASK	derivative.h	12109;"	d
MPU_RGDAAC_M2SM_SHIFT	derivative.h	12110;"	d
MPU_RGDAAC_M2UM	derivative.h	12108;"	d
MPU_RGDAAC_M2UM_MASK	derivative.h	12106;"	d
MPU_RGDAAC_M2UM_SHIFT	derivative.h	12107;"	d
MPU_RGDAAC_M3PE_MASK	derivative.h	12120;"	d
MPU_RGDAAC_M3PE_SHIFT	derivative.h	12121;"	d
MPU_RGDAAC_M3SM	derivative.h	12119;"	d
MPU_RGDAAC_M3SM_MASK	derivative.h	12117;"	d
MPU_RGDAAC_M3SM_SHIFT	derivative.h	12118;"	d
MPU_RGDAAC_M3UM	derivative.h	12116;"	d
MPU_RGDAAC_M3UM_MASK	derivative.h	12114;"	d
MPU_RGDAAC_M3UM_SHIFT	derivative.h	12115;"	d
MPU_RGDAAC_M4RE_MASK	derivative.h	12124;"	d
MPU_RGDAAC_M4RE_SHIFT	derivative.h	12125;"	d
MPU_RGDAAC_M4WE_MASK	derivative.h	12122;"	d
MPU_RGDAAC_M4WE_SHIFT	derivative.h	12123;"	d
MPU_RGDAAC_M5RE_MASK	derivative.h	12128;"	d
MPU_RGDAAC_M5RE_SHIFT	derivative.h	12129;"	d
MPU_RGDAAC_M5WE_MASK	derivative.h	12126;"	d
MPU_RGDAAC_M5WE_SHIFT	derivative.h	12127;"	d
MPU_RGDAAC_M6RE_MASK	derivative.h	12132;"	d
MPU_RGDAAC_M6RE_SHIFT	derivative.h	12133;"	d
MPU_RGDAAC_M6WE_MASK	derivative.h	12130;"	d
MPU_RGDAAC_M6WE_SHIFT	derivative.h	12131;"	d
MPU_RGDAAC_M7RE_MASK	derivative.h	12136;"	d
MPU_RGDAAC_M7RE_SHIFT	derivative.h	12137;"	d
MPU_RGDAAC_M7WE_MASK	derivative.h	12134;"	d
MPU_RGDAAC_M7WE_SHIFT	derivative.h	12135;"	d
MPU_RGDAAC_REG	derivative.h	11976;"	d
MPU_WORD	derivative.h	12257;"	d
MPU_WORD_ENDADDR	derivative.h	12039;"	d
MPU_WORD_ENDADDR_MASK	derivative.h	12037;"	d
MPU_WORD_ENDADDR_SHIFT	derivative.h	12038;"	d
MPU_WORD_M0PE_MASK	derivative.h	12035;"	d
MPU_WORD_M0PE_SHIFT	derivative.h	12036;"	d
MPU_WORD_M0SM	derivative.h	12034;"	d
MPU_WORD_M0SM_MASK	derivative.h	12032;"	d
MPU_WORD_M0SM_SHIFT	derivative.h	12033;"	d
MPU_WORD_M0UM	derivative.h	12031;"	d
MPU_WORD_M0UM_MASK	derivative.h	12029;"	d
MPU_WORD_M0UM_SHIFT	derivative.h	12030;"	d
MPU_WORD_M1PE_MASK	derivative.h	12049;"	d
MPU_WORD_M1PE_SHIFT	derivative.h	12050;"	d
MPU_WORD_M1SM	derivative.h	12048;"	d
MPU_WORD_M1SM_MASK	derivative.h	12046;"	d
MPU_WORD_M1SM_SHIFT	derivative.h	12047;"	d
MPU_WORD_M1UM	derivative.h	12045;"	d
MPU_WORD_M1UM_MASK	derivative.h	12043;"	d
MPU_WORD_M1UM_SHIFT	derivative.h	12044;"	d
MPU_WORD_M2PE_MASK	derivative.h	12060;"	d
MPU_WORD_M2PE_SHIFT	derivative.h	12061;"	d
MPU_WORD_M2SM	derivative.h	12056;"	d
MPU_WORD_M2SM_MASK	derivative.h	12054;"	d
MPU_WORD_M2SM_SHIFT	derivative.h	12055;"	d
MPU_WORD_M2UM	derivative.h	12053;"	d
MPU_WORD_M2UM_MASK	derivative.h	12051;"	d
MPU_WORD_M2UM_SHIFT	derivative.h	12052;"	d
MPU_WORD_M3PE_MASK	derivative.h	12068;"	d
MPU_WORD_M3PE_SHIFT	derivative.h	12069;"	d
MPU_WORD_M3SM	derivative.h	12067;"	d
MPU_WORD_M3SM_MASK	derivative.h	12065;"	d
MPU_WORD_M3SM_SHIFT	derivative.h	12066;"	d
MPU_WORD_M3UM	derivative.h	12064;"	d
MPU_WORD_M3UM_MASK	derivative.h	12062;"	d
MPU_WORD_M3UM_SHIFT	derivative.h	12063;"	d
MPU_WORD_M4RE_MASK	derivative.h	12075;"	d
MPU_WORD_M4RE_SHIFT	derivative.h	12076;"	d
MPU_WORD_M4WE_MASK	derivative.h	12073;"	d
MPU_WORD_M4WE_SHIFT	derivative.h	12074;"	d
MPU_WORD_M5RE_MASK	derivative.h	12079;"	d
MPU_WORD_M5RE_SHIFT	derivative.h	12080;"	d
MPU_WORD_M5WE_MASK	derivative.h	12077;"	d
MPU_WORD_M5WE_SHIFT	derivative.h	12078;"	d
MPU_WORD_M6RE_MASK	derivative.h	12083;"	d
MPU_WORD_M6RE_SHIFT	derivative.h	12084;"	d
MPU_WORD_M6WE_MASK	derivative.h	12081;"	d
MPU_WORD_M6WE_SHIFT	derivative.h	12082;"	d
MPU_WORD_M7RE_MASK	derivative.h	12087;"	d
MPU_WORD_M7RE_SHIFT	derivative.h	12088;"	d
MPU_WORD_M7WE_MASK	derivative.h	12085;"	d
MPU_WORD_M7WE_SHIFT	derivative.h	12086;"	d
MPU_WORD_PID	derivative.h	12072;"	d
MPU_WORD_PIDMASK	derivative.h	12059;"	d
MPU_WORD_PIDMASK_MASK	derivative.h	12057;"	d
MPU_WORD_PIDMASK_SHIFT	derivative.h	12058;"	d
MPU_WORD_PID_MASK	derivative.h	12070;"	d
MPU_WORD_PID_SHIFT	derivative.h	12071;"	d
MPU_WORD_REG	derivative.h	11975;"	d
MPU_WORD_SRTADDR	derivative.h	12042;"	d
MPU_WORD_SRTADDR_MASK	derivative.h	12040;"	d
MPU_WORD_SRTADDR_SHIFT	derivative.h	12041;"	d
MPU_WORD_VLD_MASK	derivative.h	12027;"	d
MPU_WORD_VLD_SHIFT	derivative.h	12028;"	d
MR	derivative.h	/^  uint8_t MR;                                      \/**< Mode Register, offset: 0x7 *\/$/;"	m	struct:RCM_MemMap
MRBR	derivative.h	/^  uint32_t MRBR;                                   \/**< Maximum Receive Buffer Size Register, offset: 0x188 *\/$/;"	m	struct:ENET_MemMap
MSC	derivative.h	/^  uint8_t MSC;                                     \/**< CMT Modulator Status and Control Register, offset: 0x5 *\/$/;"	m	struct:CMT_MemMap
MSCR	derivative.h	/^  uint32_t MSCR;                                   \/**< MII Speed Control Register, offset: 0x44 *\/$/;"	m	struct:ENET_MemMap
MUXCR	derivative.h	/^  uint8_t MUXCR;                                   \/**< MUX Control Register, offset: 0x5 *\/$/;"	m	struct:CMP_MemMap
MYMALLOC_H	mymalloc.h	2;"	d
NBYTES_MLNO	derivative.h	/^      uint32_t NBYTES_MLNO;                            \/**< TCD Minor Byte Count (Minor Loop Disabled), array offset: 0x1008, array step: 0x20 *\/$/;"	m	union:DMA_MemMap::__anon15::__anon16
NBYTES_MLOFFNO	derivative.h	/^      uint32_t NBYTES_MLOFFNO;                         \/**< TCD Signed Minor Loop Offset (Minor Loop Enabled and Offset Disabled), array offset: 0x1008, array step: 0x20 *\/$/;"	m	union:DMA_MemMap::__anon15::__anon16
NBYTES_MLOFFYES	derivative.h	/^      uint32_t NBYTES_MLOFFYES;                        \/**< TCD Signed Minor Loop Offset (Minor Loop and Offset Enabled), array offset: 0x1008, array step: 0x20 *\/$/;"	m	union:DMA_MemMap::__anon15::__anon16
NFC_BASE_PTR	derivative.h	12542;"	d
NFC_BASE_PTRS	derivative.h	12544;"	d
NFC_CAR	derivative.h	12560;"	d
NFC_CAR_BYTE1	derivative.h	12377;"	d
NFC_CAR_BYTE1_MASK	derivative.h	12375;"	d
NFC_CAR_BYTE1_SHIFT	derivative.h	12376;"	d
NFC_CAR_BYTE2	derivative.h	12380;"	d
NFC_CAR_BYTE2_MASK	derivative.h	12378;"	d
NFC_CAR_BYTE2_SHIFT	derivative.h	12379;"	d
NFC_CAR_REG	derivative.h	12327;"	d
NFC_CFG	derivative.h	12570;"	d
NFC_CFG_AIAD_MASK	derivative.h	12468;"	d
NFC_CFG_AIAD_SHIFT	derivative.h	12469;"	d
NFC_CFG_AIBN_MASK	derivative.h	12466;"	d
NFC_CFG_AIBN_SHIFT	derivative.h	12467;"	d
NFC_CFG_BITWIDTH_MASK	derivative.h	12470;"	d
NFC_CFG_BITWIDTH_SHIFT	derivative.h	12471;"	d
NFC_CFG_DMAREQ_MASK	derivative.h	12483;"	d
NFC_CFG_DMAREQ_SHIFT	derivative.h	12484;"	d
NFC_CFG_ECCAD	derivative.h	12489;"	d
NFC_CFG_ECCAD_MASK	derivative.h	12487;"	d
NFC_CFG_ECCAD_SHIFT	derivative.h	12488;"	d
NFC_CFG_ECCMODE	derivative.h	12482;"	d
NFC_CFG_ECCMODE_MASK	derivative.h	12480;"	d
NFC_CFG_ECCMODE_SHIFT	derivative.h	12481;"	d
NFC_CFG_ECCSRAM_MASK	derivative.h	12485;"	d
NFC_CFG_ECCSRAM_SHIFT	derivative.h	12486;"	d
NFC_CFG_FAST_MASK	derivative.h	12478;"	d
NFC_CFG_FAST_SHIFT	derivative.h	12479;"	d
NFC_CFG_IDCNT	derivative.h	12477;"	d
NFC_CFG_IDCNT_MASK	derivative.h	12475;"	d
NFC_CFG_IDCNT_SHIFT	derivative.h	12476;"	d
NFC_CFG_PAGECNT	derivative.h	12465;"	d
NFC_CFG_PAGECNT_MASK	derivative.h	12463;"	d
NFC_CFG_PAGECNT_SHIFT	derivative.h	12464;"	d
NFC_CFG_REG	derivative.h	12337;"	d
NFC_CFG_STOPWERR_MASK	derivative.h	12490;"	d
NFC_CFG_STOPWERR_SHIFT	derivative.h	12491;"	d
NFC_CFG_TIMEOUT	derivative.h	12474;"	d
NFC_CFG_TIMEOUT_MASK	derivative.h	12472;"	d
NFC_CFG_TIMEOUT_SHIFT	derivative.h	12473;"	d
NFC_CMD1	derivative.h	12558;"	d
NFC_CMD1_BYTE2	derivative.h	12361;"	d
NFC_CMD1_BYTE2_MASK	derivative.h	12359;"	d
NFC_CMD1_BYTE2_SHIFT	derivative.h	12360;"	d
NFC_CMD1_BYTE3	derivative.h	12358;"	d
NFC_CMD1_BYTE3_MASK	derivative.h	12356;"	d
NFC_CMD1_BYTE3_SHIFT	derivative.h	12357;"	d
NFC_CMD1_REG	derivative.h	12325;"	d
NFC_CMD2	derivative.h	12559;"	d
NFC_CMD2_BUFNO	derivative.h	12367;"	d
NFC_CMD2_BUFNO_MASK	derivative.h	12365;"	d
NFC_CMD2_BUFNO_SHIFT	derivative.h	12366;"	d
NFC_CMD2_BUSY_START_MASK	derivative.h	12363;"	d
NFC_CMD2_BUSY_START_SHIFT	derivative.h	12364;"	d
NFC_CMD2_BYTE1	derivative.h	12373;"	d
NFC_CMD2_BYTE1_MASK	derivative.h	12371;"	d
NFC_CMD2_BYTE1_SHIFT	derivative.h	12372;"	d
NFC_CMD2_CODE	derivative.h	12370;"	d
NFC_CMD2_CODE_MASK	derivative.h	12368;"	d
NFC_CMD2_CODE_SHIFT	derivative.h	12369;"	d
NFC_CMD2_REG	derivative.h	12326;"	d
NFC_DMA1	derivative.h	12566;"	d
NFC_DMA1_ADDRESS	derivative.h	12436;"	d
NFC_DMA1_ADDRESS_MASK	derivative.h	12434;"	d
NFC_DMA1_ADDRESS_SHIFT	derivative.h	12435;"	d
NFC_DMA1_REG	derivative.h	12333;"	d
NFC_DMA2	derivative.h	12571;"	d
NFC_DMA2_ADDRESS	derivative.h	12495;"	d
NFC_DMA2_ADDRESS_MASK	derivative.h	12493;"	d
NFC_DMA2_ADDRESS_SHIFT	derivative.h	12494;"	d
NFC_DMA2_REG	derivative.h	12338;"	d
NFC_DMACFG	derivative.h	12567;"	d
NFC_DMACFG_ACT1_MASK	derivative.h	12440;"	d
NFC_DMACFG_ACT1_SHIFT	derivative.h	12441;"	d
NFC_DMACFG_ACT2_MASK	derivative.h	12438;"	d
NFC_DMACFG_ACT2_SHIFT	derivative.h	12439;"	d
NFC_DMACFG_COUNT1	derivative.h	12450;"	d
NFC_DMACFG_COUNT1_MASK	derivative.h	12448;"	d
NFC_DMACFG_COUNT1_SHIFT	derivative.h	12449;"	d
NFC_DMACFG_COUNT2	derivative.h	12447;"	d
NFC_DMACFG_COUNT2_MASK	derivative.h	12445;"	d
NFC_DMACFG_COUNT2_SHIFT	derivative.h	12446;"	d
NFC_DMACFG_OFFSET2	derivative.h	12444;"	d
NFC_DMACFG_OFFSET2_MASK	derivative.h	12442;"	d
NFC_DMACFG_OFFSET2_SHIFT	derivative.h	12443;"	d
NFC_DMACFG_REG	derivative.h	12334;"	d
NFC_ISR	derivative.h	12572;"	d
NFC_ISR_CMDBUSY_MASK	derivative.h	12524;"	d
NFC_ISR_CMDBUSY_SHIFT	derivative.h	12525;"	d
NFC_ISR_DMABN	derivative.h	12499;"	d
NFC_ISR_DMABN_MASK	derivative.h	12497;"	d
NFC_ISR_DMABN_SHIFT	derivative.h	12498;"	d
NFC_ISR_DMABUSY_MASK	derivative.h	12518;"	d
NFC_ISR_DMABUSY_SHIFT	derivative.h	12519;"	d
NFC_ISR_DONECLR_MASK	derivative.h	12508;"	d
NFC_ISR_DONECLR_SHIFT	derivative.h	12509;"	d
NFC_ISR_DONEEN_MASK	derivative.h	12514;"	d
NFC_ISR_DONEEN_SHIFT	derivative.h	12515;"	d
NFC_ISR_DONE_MASK	derivative.h	12530;"	d
NFC_ISR_DONE_SHIFT	derivative.h	12531;"	d
NFC_ISR_ECCBN	derivative.h	12502;"	d
NFC_ISR_ECCBN_MASK	derivative.h	12500;"	d
NFC_ISR_ECCBN_SHIFT	derivative.h	12501;"	d
NFC_ISR_ECCBUSY_MASK	derivative.h	12520;"	d
NFC_ISR_ECCBUSY_SHIFT	derivative.h	12521;"	d
NFC_ISR_IDLECLR_MASK	derivative.h	12506;"	d
NFC_ISR_IDLECLR_SHIFT	derivative.h	12507;"	d
NFC_ISR_IDLEEN_MASK	derivative.h	12512;"	d
NFC_ISR_IDLEEN_SHIFT	derivative.h	12513;"	d
NFC_ISR_IDLE_MASK	derivative.h	12528;"	d
NFC_ISR_IDLE_SHIFT	derivative.h	12529;"	d
NFC_ISR_REG	derivative.h	12339;"	d
NFC_ISR_RESBN	derivative.h	12505;"	d
NFC_ISR_RESBN_MASK	derivative.h	12503;"	d
NFC_ISR_RESBN_SHIFT	derivative.h	12504;"	d
NFC_ISR_RESBUSY_MASK	derivative.h	12522;"	d
NFC_ISR_RESBUSY_SHIFT	derivative.h	12523;"	d
NFC_ISR_WERRCLR_MASK	derivative.h	12510;"	d
NFC_ISR_WERRCLR_SHIFT	derivative.h	12511;"	d
NFC_ISR_WERREN_MASK	derivative.h	12516;"	d
NFC_ISR_WERREN_SHIFT	derivative.h	12517;"	d
NFC_ISR_WERRNS_MASK	derivative.h	12526;"	d
NFC_ISR_WERRNS_SHIFT	derivative.h	12527;"	d
NFC_ISR_WERR_MASK	derivative.h	12532;"	d
NFC_ISR_WERR_SHIFT	derivative.h	12533;"	d
NFC_MemMap	derivative.h	/^typedef struct NFC_MemMap {$/;"	s
NFC_MemMapPtr	derivative.h	/^} volatile *NFC_MemMapPtr;$/;"	t
NFC_RAI	derivative.h	12563;"	d
NFC_RAI_INC1	derivative.h	12406;"	d
NFC_RAI_INC1_MASK	derivative.h	12404;"	d
NFC_RAI_INC1_SHIFT	derivative.h	12405;"	d
NFC_RAI_INC2	derivative.h	12409;"	d
NFC_RAI_INC2_MASK	derivative.h	12407;"	d
NFC_RAI_INC2_SHIFT	derivative.h	12408;"	d
NFC_RAI_INC3	derivative.h	12412;"	d
NFC_RAI_INC3_MASK	derivative.h	12410;"	d
NFC_RAI_INC3_SHIFT	derivative.h	12411;"	d
NFC_RAI_REG	derivative.h	12330;"	d
NFC_RAR	derivative.h	12561;"	d
NFC_RAR_BYTE1	derivative.h	12384;"	d
NFC_RAR_BYTE1_MASK	derivative.h	12382;"	d
NFC_RAR_BYTE1_SHIFT	derivative.h	12383;"	d
NFC_RAR_BYTE2	derivative.h	12387;"	d
NFC_RAR_BYTE2_MASK	derivative.h	12385;"	d
NFC_RAR_BYTE2_SHIFT	derivative.h	12386;"	d
NFC_RAR_BYTE3	derivative.h	12390;"	d
NFC_RAR_BYTE3_MASK	derivative.h	12388;"	d
NFC_RAR_BYTE3_SHIFT	derivative.h	12389;"	d
NFC_RAR_CS0_MASK	derivative.h	12395;"	d
NFC_RAR_CS0_SHIFT	derivative.h	12396;"	d
NFC_RAR_CS1_MASK	derivative.h	12397;"	d
NFC_RAR_CS1_SHIFT	derivative.h	12398;"	d
NFC_RAR_RB0_MASK	derivative.h	12391;"	d
NFC_RAR_RB0_SHIFT	derivative.h	12392;"	d
NFC_RAR_RB1_MASK	derivative.h	12393;"	d
NFC_RAR_RB1_SHIFT	derivative.h	12394;"	d
NFC_RAR_REG	derivative.h	12328;"	d
NFC_RPT	derivative.h	12562;"	d
NFC_RPT_COUNT	derivative.h	12402;"	d
NFC_RPT_COUNT_MASK	derivative.h	12400;"	d
NFC_RPT_COUNT_SHIFT	derivative.h	12401;"	d
NFC_RPT_REG	derivative.h	12329;"	d
NFC_SECSZ	derivative.h	12569;"	d
NFC_SECSZ_REG	derivative.h	12336;"	d
NFC_SECSZ_SIZE	derivative.h	12461;"	d
NFC_SECSZ_SIZE_MASK	derivative.h	12459;"	d
NFC_SECSZ_SIZE_SHIFT	derivative.h	12460;"	d
NFC_SR1	derivative.h	12564;"	d
NFC_SR1_ID1	derivative.h	12425;"	d
NFC_SR1_ID1_MASK	derivative.h	12423;"	d
NFC_SR1_ID1_SHIFT	derivative.h	12424;"	d
NFC_SR1_ID2	derivative.h	12422;"	d
NFC_SR1_ID2_MASK	derivative.h	12420;"	d
NFC_SR1_ID2_SHIFT	derivative.h	12421;"	d
NFC_SR1_ID3	derivative.h	12419;"	d
NFC_SR1_ID3_MASK	derivative.h	12417;"	d
NFC_SR1_ID3_SHIFT	derivative.h	12418;"	d
NFC_SR1_ID4	derivative.h	12416;"	d
NFC_SR1_ID4_MASK	derivative.h	12414;"	d
NFC_SR1_ID4_SHIFT	derivative.h	12415;"	d
NFC_SR1_REG	derivative.h	12331;"	d
NFC_SR2	derivative.h	12565;"	d
NFC_SR2_ID5	derivative.h	12432;"	d
NFC_SR2_ID5_MASK	derivative.h	12430;"	d
NFC_SR2_ID5_SHIFT	derivative.h	12431;"	d
NFC_SR2_REG	derivative.h	12332;"	d
NFC_SR2_STATUS1	derivative.h	12429;"	d
NFC_SR2_STATUS1_MASK	derivative.h	12427;"	d
NFC_SR2_STATUS1_SHIFT	derivative.h	12428;"	d
NFC_SRAM_B0	derivative.h	12289;"	d
NFC_SRAM_B0_REG	derivative.h	12284;"	d
NFC_SRAM_B1	derivative.h	12290;"	d
NFC_SRAM_B1_REG	derivative.h	12285;"	d
NFC_SRAM_B2	derivative.h	12291;"	d
NFC_SRAM_B2_REG	derivative.h	12286;"	d
NFC_SRAM_B3	derivative.h	12292;"	d
NFC_SRAM_B3_REG	derivative.h	12287;"	d
NFC_SWAP	derivative.h	12568;"	d
NFC_SWAP_ADDR1	derivative.h	12457;"	d
NFC_SWAP_ADDR1_MASK	derivative.h	12455;"	d
NFC_SWAP_ADDR1_SHIFT	derivative.h	12456;"	d
NFC_SWAP_ADDR2	derivative.h	12454;"	d
NFC_SWAP_ADDR2_MASK	derivative.h	12452;"	d
NFC_SWAP_ADDR2_SHIFT	derivative.h	12453;"	d
NFC_SWAP_REG	derivative.h	12335;"	d
NUM_OF_CAPACITIVEPADS	capacitivepads.h	5;"	d
NUM_OF_LCDCS	lcdc.h	4;"	d
NUM_OF_LEDS	led.h	3;"	d
NUM_OF_POTENTIOMETERS	potentiometer.h	5;"	d
NUM_OF_PUSHBUTTONS	pushbutton.h	3;"	d
NUM_OF_THERMISTORS	thermistor.h	5;"	d
NUM_OF_UARTS	uart.h	4;"	d
NVICIABR0	derivative.h	13222;"	d
NVICIABR1	derivative.h	13223;"	d
NVICIABR2	derivative.h	13224;"	d
NVICIABR3	derivative.h	13225;"	d
NVICICER0	derivative.h	13210;"	d
NVICICER1	derivative.h	13211;"	d
NVICICER2	derivative.h	13212;"	d
NVICICER3	derivative.h	13213;"	d
NVICICPR0	derivative.h	13218;"	d
NVICICPR1	derivative.h	13219;"	d
NVICICPR2	derivative.h	13220;"	d
NVICICPR3	derivative.h	13221;"	d
NVICIP0	derivative.h	13226;"	d
NVICIP1	derivative.h	13227;"	d
NVICIP10	derivative.h	13236;"	d
NVICIP100	derivative.h	13326;"	d
NVICIP101	derivative.h	13327;"	d
NVICIP102	derivative.h	13328;"	d
NVICIP103	derivative.h	13329;"	d
NVICIP104	derivative.h	13330;"	d
NVICIP105	derivative.h	13331;"	d
NVICIP11	derivative.h	13237;"	d
NVICIP12	derivative.h	13238;"	d
NVICIP13	derivative.h	13239;"	d
NVICIP14	derivative.h	13240;"	d
NVICIP15	derivative.h	13241;"	d
NVICIP16	derivative.h	13242;"	d
NVICIP17	derivative.h	13243;"	d
NVICIP18	derivative.h	13244;"	d
NVICIP19	derivative.h	13245;"	d
NVICIP2	derivative.h	13228;"	d
NVICIP20	derivative.h	13246;"	d
NVICIP21	derivative.h	13247;"	d
NVICIP22	derivative.h	13248;"	d
NVICIP23	derivative.h	13249;"	d
NVICIP24	derivative.h	13250;"	d
NVICIP25	derivative.h	13251;"	d
NVICIP26	derivative.h	13252;"	d
NVICIP27	derivative.h	13253;"	d
NVICIP28	derivative.h	13254;"	d
NVICIP29	derivative.h	13255;"	d
NVICIP3	derivative.h	13229;"	d
NVICIP30	derivative.h	13256;"	d
NVICIP31	derivative.h	13257;"	d
NVICIP32	derivative.h	13258;"	d
NVICIP33	derivative.h	13259;"	d
NVICIP34	derivative.h	13260;"	d
NVICIP35	derivative.h	13261;"	d
NVICIP36	derivative.h	13262;"	d
NVICIP37	derivative.h	13263;"	d
NVICIP38	derivative.h	13264;"	d
NVICIP39	derivative.h	13265;"	d
NVICIP4	derivative.h	13230;"	d
NVICIP40	derivative.h	13266;"	d
NVICIP41	derivative.h	13267;"	d
NVICIP42	derivative.h	13268;"	d
NVICIP43	derivative.h	13269;"	d
NVICIP44	derivative.h	13270;"	d
NVICIP45	derivative.h	13271;"	d
NVICIP46	derivative.h	13272;"	d
NVICIP47	derivative.h	13273;"	d
NVICIP48	derivative.h	13274;"	d
NVICIP49	derivative.h	13275;"	d
NVICIP5	derivative.h	13231;"	d
NVICIP50	derivative.h	13276;"	d
NVICIP51	derivative.h	13277;"	d
NVICIP52	derivative.h	13278;"	d
NVICIP53	derivative.h	13279;"	d
NVICIP54	derivative.h	13280;"	d
NVICIP55	derivative.h	13281;"	d
NVICIP56	derivative.h	13282;"	d
NVICIP57	derivative.h	13283;"	d
NVICIP58	derivative.h	13284;"	d
NVICIP59	derivative.h	13285;"	d
NVICIP6	derivative.h	13232;"	d
NVICIP60	derivative.h	13286;"	d
NVICIP61	derivative.h	13287;"	d
NVICIP62	derivative.h	13288;"	d
NVICIP63	derivative.h	13289;"	d
NVICIP64	derivative.h	13290;"	d
NVICIP65	derivative.h	13291;"	d
NVICIP66	derivative.h	13292;"	d
NVICIP67	derivative.h	13293;"	d
NVICIP68	derivative.h	13294;"	d
NVICIP69	derivative.h	13295;"	d
NVICIP7	derivative.h	13233;"	d
NVICIP70	derivative.h	13296;"	d
NVICIP71	derivative.h	13297;"	d
NVICIP72	derivative.h	13298;"	d
NVICIP73	derivative.h	13299;"	d
NVICIP74	derivative.h	13300;"	d
NVICIP75	derivative.h	13301;"	d
NVICIP76	derivative.h	13302;"	d
NVICIP77	derivative.h	13303;"	d
NVICIP78	derivative.h	13304;"	d
NVICIP79	derivative.h	13305;"	d
NVICIP8	derivative.h	13234;"	d
NVICIP80	derivative.h	13306;"	d
NVICIP81	derivative.h	13307;"	d
NVICIP82	derivative.h	13308;"	d
NVICIP83	derivative.h	13309;"	d
NVICIP84	derivative.h	13310;"	d
NVICIP85	derivative.h	13311;"	d
NVICIP86	derivative.h	13312;"	d
NVICIP87	derivative.h	13313;"	d
NVICIP88	derivative.h	13314;"	d
NVICIP89	derivative.h	13315;"	d
NVICIP9	derivative.h	13235;"	d
NVICIP90	derivative.h	13316;"	d
NVICIP91	derivative.h	13317;"	d
NVICIP92	derivative.h	13318;"	d
NVICIP93	derivative.h	13319;"	d
NVICIP94	derivative.h	13320;"	d
NVICIP95	derivative.h	13321;"	d
NVICIP96	derivative.h	13322;"	d
NVICIP97	derivative.h	13323;"	d
NVICIP98	derivative.h	13324;"	d
NVICIP99	derivative.h	13325;"	d
NVICISER0	derivative.h	13206;"	d
NVICISER1	derivative.h	13207;"	d
NVICISER2	derivative.h	13208;"	d
NVICISER3	derivative.h	13209;"	d
NVICISPR0	derivative.h	13214;"	d
NVICISPR1	derivative.h	13215;"	d
NVICISPR2	derivative.h	13216;"	d
NVICISPR3	derivative.h	13217;"	d
NVICSTIR	derivative.h	13332;"	d
NVIC_BASE_PTR	derivative.h	13190;"	d
NVIC_BASE_PTRS	derivative.h	13192;"	d
NVIC_IABR	derivative.h	13339;"	d
NVIC_IABR_ACTIVE	derivative.h	12858;"	d
NVIC_IABR_ACTIVE_MASK	derivative.h	12856;"	d
NVIC_IABR_ACTIVE_SHIFT	derivative.h	12857;"	d
NVIC_IABR_REG	derivative.h	12821;"	d
NVIC_ICER	derivative.h	13336;"	d
NVIC_ICER_CLRENA	derivative.h	12846;"	d
NVIC_ICER_CLRENA_MASK	derivative.h	12844;"	d
NVIC_ICER_CLRENA_SHIFT	derivative.h	12845;"	d
NVIC_ICER_REG	derivative.h	12818;"	d
NVIC_ICPR	derivative.h	13338;"	d
NVIC_ICPR_CLRPEND	derivative.h	12854;"	d
NVIC_ICPR_CLRPEND_MASK	derivative.h	12852;"	d
NVIC_ICPR_CLRPEND_SHIFT	derivative.h	12853;"	d
NVIC_ICPR_REG	derivative.h	12820;"	d
NVIC_IP	derivative.h	13340;"	d
NVIC_IP_PRI0	derivative.h	12862;"	d
NVIC_IP_PRI0_MASK	derivative.h	12860;"	d
NVIC_IP_PRI0_SHIFT	derivative.h	12861;"	d
NVIC_IP_PRI1	derivative.h	12865;"	d
NVIC_IP_PRI10	derivative.h	12892;"	d
NVIC_IP_PRI100	derivative.h	13162;"	d
NVIC_IP_PRI100_MASK	derivative.h	13160;"	d
NVIC_IP_PRI100_SHIFT	derivative.h	13161;"	d
NVIC_IP_PRI101	derivative.h	13165;"	d
NVIC_IP_PRI101_MASK	derivative.h	13163;"	d
NVIC_IP_PRI101_SHIFT	derivative.h	13164;"	d
NVIC_IP_PRI102	derivative.h	13168;"	d
NVIC_IP_PRI102_MASK	derivative.h	13166;"	d
NVIC_IP_PRI102_SHIFT	derivative.h	13167;"	d
NVIC_IP_PRI103	derivative.h	13171;"	d
NVIC_IP_PRI103_MASK	derivative.h	13169;"	d
NVIC_IP_PRI103_SHIFT	derivative.h	13170;"	d
NVIC_IP_PRI104	derivative.h	13174;"	d
NVIC_IP_PRI104_MASK	derivative.h	13172;"	d
NVIC_IP_PRI104_SHIFT	derivative.h	13173;"	d
NVIC_IP_PRI105	derivative.h	13177;"	d
NVIC_IP_PRI105_MASK	derivative.h	13175;"	d
NVIC_IP_PRI105_SHIFT	derivative.h	13176;"	d
NVIC_IP_PRI10_MASK	derivative.h	12890;"	d
NVIC_IP_PRI10_SHIFT	derivative.h	12891;"	d
NVIC_IP_PRI11	derivative.h	12895;"	d
NVIC_IP_PRI11_MASK	derivative.h	12893;"	d
NVIC_IP_PRI11_SHIFT	derivative.h	12894;"	d
NVIC_IP_PRI12	derivative.h	12898;"	d
NVIC_IP_PRI12_MASK	derivative.h	12896;"	d
NVIC_IP_PRI12_SHIFT	derivative.h	12897;"	d
NVIC_IP_PRI13	derivative.h	12901;"	d
NVIC_IP_PRI13_MASK	derivative.h	12899;"	d
NVIC_IP_PRI13_SHIFT	derivative.h	12900;"	d
NVIC_IP_PRI14	derivative.h	12904;"	d
NVIC_IP_PRI14_MASK	derivative.h	12902;"	d
NVIC_IP_PRI14_SHIFT	derivative.h	12903;"	d
NVIC_IP_PRI15	derivative.h	12907;"	d
NVIC_IP_PRI15_MASK	derivative.h	12905;"	d
NVIC_IP_PRI15_SHIFT	derivative.h	12906;"	d
NVIC_IP_PRI16	derivative.h	12910;"	d
NVIC_IP_PRI16_MASK	derivative.h	12908;"	d
NVIC_IP_PRI16_SHIFT	derivative.h	12909;"	d
NVIC_IP_PRI17	derivative.h	12913;"	d
NVIC_IP_PRI17_MASK	derivative.h	12911;"	d
NVIC_IP_PRI17_SHIFT	derivative.h	12912;"	d
NVIC_IP_PRI18	derivative.h	12916;"	d
NVIC_IP_PRI18_MASK	derivative.h	12914;"	d
NVIC_IP_PRI18_SHIFT	derivative.h	12915;"	d
NVIC_IP_PRI19	derivative.h	12919;"	d
NVIC_IP_PRI19_MASK	derivative.h	12917;"	d
NVIC_IP_PRI19_SHIFT	derivative.h	12918;"	d
NVIC_IP_PRI1_MASK	derivative.h	12863;"	d
NVIC_IP_PRI1_SHIFT	derivative.h	12864;"	d
NVIC_IP_PRI2	derivative.h	12868;"	d
NVIC_IP_PRI20	derivative.h	12922;"	d
NVIC_IP_PRI20_MASK	derivative.h	12920;"	d
NVIC_IP_PRI20_SHIFT	derivative.h	12921;"	d
NVIC_IP_PRI21	derivative.h	12925;"	d
NVIC_IP_PRI21_MASK	derivative.h	12923;"	d
NVIC_IP_PRI21_SHIFT	derivative.h	12924;"	d
NVIC_IP_PRI22	derivative.h	12928;"	d
NVIC_IP_PRI22_MASK	derivative.h	12926;"	d
NVIC_IP_PRI22_SHIFT	derivative.h	12927;"	d
NVIC_IP_PRI23	derivative.h	12931;"	d
NVIC_IP_PRI23_MASK	derivative.h	12929;"	d
NVIC_IP_PRI23_SHIFT	derivative.h	12930;"	d
NVIC_IP_PRI24	derivative.h	12934;"	d
NVIC_IP_PRI24_MASK	derivative.h	12932;"	d
NVIC_IP_PRI24_SHIFT	derivative.h	12933;"	d
NVIC_IP_PRI25	derivative.h	12937;"	d
NVIC_IP_PRI25_MASK	derivative.h	12935;"	d
NVIC_IP_PRI25_SHIFT	derivative.h	12936;"	d
NVIC_IP_PRI26	derivative.h	12940;"	d
NVIC_IP_PRI26_MASK	derivative.h	12938;"	d
NVIC_IP_PRI26_SHIFT	derivative.h	12939;"	d
NVIC_IP_PRI27	derivative.h	12943;"	d
NVIC_IP_PRI27_MASK	derivative.h	12941;"	d
NVIC_IP_PRI27_SHIFT	derivative.h	12942;"	d
NVIC_IP_PRI28	derivative.h	12946;"	d
NVIC_IP_PRI28_MASK	derivative.h	12944;"	d
NVIC_IP_PRI28_SHIFT	derivative.h	12945;"	d
NVIC_IP_PRI29	derivative.h	12949;"	d
NVIC_IP_PRI29_MASK	derivative.h	12947;"	d
NVIC_IP_PRI29_SHIFT	derivative.h	12948;"	d
NVIC_IP_PRI2_MASK	derivative.h	12866;"	d
NVIC_IP_PRI2_SHIFT	derivative.h	12867;"	d
NVIC_IP_PRI3	derivative.h	12871;"	d
NVIC_IP_PRI30	derivative.h	12952;"	d
NVIC_IP_PRI30_MASK	derivative.h	12950;"	d
NVIC_IP_PRI30_SHIFT	derivative.h	12951;"	d
NVIC_IP_PRI31	derivative.h	12955;"	d
NVIC_IP_PRI31_MASK	derivative.h	12953;"	d
NVIC_IP_PRI31_SHIFT	derivative.h	12954;"	d
NVIC_IP_PRI32	derivative.h	12958;"	d
NVIC_IP_PRI32_MASK	derivative.h	12956;"	d
NVIC_IP_PRI32_SHIFT	derivative.h	12957;"	d
NVIC_IP_PRI33	derivative.h	12961;"	d
NVIC_IP_PRI33_MASK	derivative.h	12959;"	d
NVIC_IP_PRI33_SHIFT	derivative.h	12960;"	d
NVIC_IP_PRI34	derivative.h	12964;"	d
NVIC_IP_PRI34_MASK	derivative.h	12962;"	d
NVIC_IP_PRI34_SHIFT	derivative.h	12963;"	d
NVIC_IP_PRI35	derivative.h	12967;"	d
NVIC_IP_PRI35_MASK	derivative.h	12965;"	d
NVIC_IP_PRI35_SHIFT	derivative.h	12966;"	d
NVIC_IP_PRI36	derivative.h	12970;"	d
NVIC_IP_PRI36_MASK	derivative.h	12968;"	d
NVIC_IP_PRI36_SHIFT	derivative.h	12969;"	d
NVIC_IP_PRI37	derivative.h	12973;"	d
NVIC_IP_PRI37_MASK	derivative.h	12971;"	d
NVIC_IP_PRI37_SHIFT	derivative.h	12972;"	d
NVIC_IP_PRI38	derivative.h	12976;"	d
NVIC_IP_PRI38_MASK	derivative.h	12974;"	d
NVIC_IP_PRI38_SHIFT	derivative.h	12975;"	d
NVIC_IP_PRI39	derivative.h	12979;"	d
NVIC_IP_PRI39_MASK	derivative.h	12977;"	d
NVIC_IP_PRI39_SHIFT	derivative.h	12978;"	d
NVIC_IP_PRI3_MASK	derivative.h	12869;"	d
NVIC_IP_PRI3_SHIFT	derivative.h	12870;"	d
NVIC_IP_PRI4	derivative.h	12874;"	d
NVIC_IP_PRI40	derivative.h	12982;"	d
NVIC_IP_PRI40_MASK	derivative.h	12980;"	d
NVIC_IP_PRI40_SHIFT	derivative.h	12981;"	d
NVIC_IP_PRI41	derivative.h	12985;"	d
NVIC_IP_PRI41_MASK	derivative.h	12983;"	d
NVIC_IP_PRI41_SHIFT	derivative.h	12984;"	d
NVIC_IP_PRI42	derivative.h	12988;"	d
NVIC_IP_PRI42_MASK	derivative.h	12986;"	d
NVIC_IP_PRI42_SHIFT	derivative.h	12987;"	d
NVIC_IP_PRI43	derivative.h	12991;"	d
NVIC_IP_PRI43_MASK	derivative.h	12989;"	d
NVIC_IP_PRI43_SHIFT	derivative.h	12990;"	d
NVIC_IP_PRI44	derivative.h	12994;"	d
NVIC_IP_PRI44_MASK	derivative.h	12992;"	d
NVIC_IP_PRI44_SHIFT	derivative.h	12993;"	d
NVIC_IP_PRI45	derivative.h	12997;"	d
NVIC_IP_PRI45_MASK	derivative.h	12995;"	d
NVIC_IP_PRI45_SHIFT	derivative.h	12996;"	d
NVIC_IP_PRI46	derivative.h	13000;"	d
NVIC_IP_PRI46_MASK	derivative.h	12998;"	d
NVIC_IP_PRI46_SHIFT	derivative.h	12999;"	d
NVIC_IP_PRI47	derivative.h	13003;"	d
NVIC_IP_PRI47_MASK	derivative.h	13001;"	d
NVIC_IP_PRI47_SHIFT	derivative.h	13002;"	d
NVIC_IP_PRI48	derivative.h	13006;"	d
NVIC_IP_PRI48_MASK	derivative.h	13004;"	d
NVIC_IP_PRI48_SHIFT	derivative.h	13005;"	d
NVIC_IP_PRI49	derivative.h	13009;"	d
NVIC_IP_PRI49_MASK	derivative.h	13007;"	d
NVIC_IP_PRI49_SHIFT	derivative.h	13008;"	d
NVIC_IP_PRI4_MASK	derivative.h	12872;"	d
NVIC_IP_PRI4_SHIFT	derivative.h	12873;"	d
NVIC_IP_PRI5	derivative.h	12877;"	d
NVIC_IP_PRI50	derivative.h	13012;"	d
NVIC_IP_PRI50_MASK	derivative.h	13010;"	d
NVIC_IP_PRI50_SHIFT	derivative.h	13011;"	d
NVIC_IP_PRI51	derivative.h	13015;"	d
NVIC_IP_PRI51_MASK	derivative.h	13013;"	d
NVIC_IP_PRI51_SHIFT	derivative.h	13014;"	d
NVIC_IP_PRI52	derivative.h	13018;"	d
NVIC_IP_PRI52_MASK	derivative.h	13016;"	d
NVIC_IP_PRI52_SHIFT	derivative.h	13017;"	d
NVIC_IP_PRI53	derivative.h	13021;"	d
NVIC_IP_PRI53_MASK	derivative.h	13019;"	d
NVIC_IP_PRI53_SHIFT	derivative.h	13020;"	d
NVIC_IP_PRI54	derivative.h	13024;"	d
NVIC_IP_PRI54_MASK	derivative.h	13022;"	d
NVIC_IP_PRI54_SHIFT	derivative.h	13023;"	d
NVIC_IP_PRI55	derivative.h	13027;"	d
NVIC_IP_PRI55_MASK	derivative.h	13025;"	d
NVIC_IP_PRI55_SHIFT	derivative.h	13026;"	d
NVIC_IP_PRI56	derivative.h	13030;"	d
NVIC_IP_PRI56_MASK	derivative.h	13028;"	d
NVIC_IP_PRI56_SHIFT	derivative.h	13029;"	d
NVIC_IP_PRI57	derivative.h	13033;"	d
NVIC_IP_PRI57_MASK	derivative.h	13031;"	d
NVIC_IP_PRI57_SHIFT	derivative.h	13032;"	d
NVIC_IP_PRI58	derivative.h	13036;"	d
NVIC_IP_PRI58_MASK	derivative.h	13034;"	d
NVIC_IP_PRI58_SHIFT	derivative.h	13035;"	d
NVIC_IP_PRI59	derivative.h	13039;"	d
NVIC_IP_PRI59_MASK	derivative.h	13037;"	d
NVIC_IP_PRI59_SHIFT	derivative.h	13038;"	d
NVIC_IP_PRI5_MASK	derivative.h	12875;"	d
NVIC_IP_PRI5_SHIFT	derivative.h	12876;"	d
NVIC_IP_PRI6	derivative.h	12880;"	d
NVIC_IP_PRI60	derivative.h	13042;"	d
NVIC_IP_PRI60_MASK	derivative.h	13040;"	d
NVIC_IP_PRI60_SHIFT	derivative.h	13041;"	d
NVIC_IP_PRI61	derivative.h	13045;"	d
NVIC_IP_PRI61_MASK	derivative.h	13043;"	d
NVIC_IP_PRI61_SHIFT	derivative.h	13044;"	d
NVIC_IP_PRI62	derivative.h	13048;"	d
NVIC_IP_PRI62_MASK	derivative.h	13046;"	d
NVIC_IP_PRI62_SHIFT	derivative.h	13047;"	d
NVIC_IP_PRI63	derivative.h	13051;"	d
NVIC_IP_PRI63_MASK	derivative.h	13049;"	d
NVIC_IP_PRI63_SHIFT	derivative.h	13050;"	d
NVIC_IP_PRI64	derivative.h	13054;"	d
NVIC_IP_PRI64_MASK	derivative.h	13052;"	d
NVIC_IP_PRI64_SHIFT	derivative.h	13053;"	d
NVIC_IP_PRI65	derivative.h	13057;"	d
NVIC_IP_PRI65_MASK	derivative.h	13055;"	d
NVIC_IP_PRI65_SHIFT	derivative.h	13056;"	d
NVIC_IP_PRI66	derivative.h	13060;"	d
NVIC_IP_PRI66_MASK	derivative.h	13058;"	d
NVIC_IP_PRI66_SHIFT	derivative.h	13059;"	d
NVIC_IP_PRI67	derivative.h	13063;"	d
NVIC_IP_PRI67_MASK	derivative.h	13061;"	d
NVIC_IP_PRI67_SHIFT	derivative.h	13062;"	d
NVIC_IP_PRI68	derivative.h	13066;"	d
NVIC_IP_PRI68_MASK	derivative.h	13064;"	d
NVIC_IP_PRI68_SHIFT	derivative.h	13065;"	d
NVIC_IP_PRI69	derivative.h	13069;"	d
NVIC_IP_PRI69_MASK	derivative.h	13067;"	d
NVIC_IP_PRI69_SHIFT	derivative.h	13068;"	d
NVIC_IP_PRI6_MASK	derivative.h	12878;"	d
NVIC_IP_PRI6_SHIFT	derivative.h	12879;"	d
NVIC_IP_PRI7	derivative.h	12883;"	d
NVIC_IP_PRI70	derivative.h	13072;"	d
NVIC_IP_PRI70_MASK	derivative.h	13070;"	d
NVIC_IP_PRI70_SHIFT	derivative.h	13071;"	d
NVIC_IP_PRI71	derivative.h	13075;"	d
NVIC_IP_PRI71_MASK	derivative.h	13073;"	d
NVIC_IP_PRI71_SHIFT	derivative.h	13074;"	d
NVIC_IP_PRI72	derivative.h	13078;"	d
NVIC_IP_PRI72_MASK	derivative.h	13076;"	d
NVIC_IP_PRI72_SHIFT	derivative.h	13077;"	d
NVIC_IP_PRI73	derivative.h	13081;"	d
NVIC_IP_PRI73_MASK	derivative.h	13079;"	d
NVIC_IP_PRI73_SHIFT	derivative.h	13080;"	d
NVIC_IP_PRI74	derivative.h	13084;"	d
NVIC_IP_PRI74_MASK	derivative.h	13082;"	d
NVIC_IP_PRI74_SHIFT	derivative.h	13083;"	d
NVIC_IP_PRI75	derivative.h	13087;"	d
NVIC_IP_PRI75_MASK	derivative.h	13085;"	d
NVIC_IP_PRI75_SHIFT	derivative.h	13086;"	d
NVIC_IP_PRI76	derivative.h	13090;"	d
NVIC_IP_PRI76_MASK	derivative.h	13088;"	d
NVIC_IP_PRI76_SHIFT	derivative.h	13089;"	d
NVIC_IP_PRI77	derivative.h	13093;"	d
NVIC_IP_PRI77_MASK	derivative.h	13091;"	d
NVIC_IP_PRI77_SHIFT	derivative.h	13092;"	d
NVIC_IP_PRI78	derivative.h	13096;"	d
NVIC_IP_PRI78_MASK	derivative.h	13094;"	d
NVIC_IP_PRI78_SHIFT	derivative.h	13095;"	d
NVIC_IP_PRI79	derivative.h	13099;"	d
NVIC_IP_PRI79_MASK	derivative.h	13097;"	d
NVIC_IP_PRI79_SHIFT	derivative.h	13098;"	d
NVIC_IP_PRI7_MASK	derivative.h	12881;"	d
NVIC_IP_PRI7_SHIFT	derivative.h	12882;"	d
NVIC_IP_PRI8	derivative.h	12886;"	d
NVIC_IP_PRI80	derivative.h	13102;"	d
NVIC_IP_PRI80_MASK	derivative.h	13100;"	d
NVIC_IP_PRI80_SHIFT	derivative.h	13101;"	d
NVIC_IP_PRI81	derivative.h	13105;"	d
NVIC_IP_PRI81_MASK	derivative.h	13103;"	d
NVIC_IP_PRI81_SHIFT	derivative.h	13104;"	d
NVIC_IP_PRI82	derivative.h	13108;"	d
NVIC_IP_PRI82_MASK	derivative.h	13106;"	d
NVIC_IP_PRI82_SHIFT	derivative.h	13107;"	d
NVIC_IP_PRI83	derivative.h	13111;"	d
NVIC_IP_PRI83_MASK	derivative.h	13109;"	d
NVIC_IP_PRI83_SHIFT	derivative.h	13110;"	d
NVIC_IP_PRI84	derivative.h	13114;"	d
NVIC_IP_PRI84_MASK	derivative.h	13112;"	d
NVIC_IP_PRI84_SHIFT	derivative.h	13113;"	d
NVIC_IP_PRI85	derivative.h	13117;"	d
NVIC_IP_PRI85_MASK	derivative.h	13115;"	d
NVIC_IP_PRI85_SHIFT	derivative.h	13116;"	d
NVIC_IP_PRI86	derivative.h	13120;"	d
NVIC_IP_PRI86_MASK	derivative.h	13118;"	d
NVIC_IP_PRI86_SHIFT	derivative.h	13119;"	d
NVIC_IP_PRI87	derivative.h	13123;"	d
NVIC_IP_PRI87_MASK	derivative.h	13121;"	d
NVIC_IP_PRI87_SHIFT	derivative.h	13122;"	d
NVIC_IP_PRI88	derivative.h	13126;"	d
NVIC_IP_PRI88_MASK	derivative.h	13124;"	d
NVIC_IP_PRI88_SHIFT	derivative.h	13125;"	d
NVIC_IP_PRI89	derivative.h	13129;"	d
NVIC_IP_PRI89_MASK	derivative.h	13127;"	d
NVIC_IP_PRI89_SHIFT	derivative.h	13128;"	d
NVIC_IP_PRI8_MASK	derivative.h	12884;"	d
NVIC_IP_PRI8_SHIFT	derivative.h	12885;"	d
NVIC_IP_PRI9	derivative.h	12889;"	d
NVIC_IP_PRI90	derivative.h	13132;"	d
NVIC_IP_PRI90_MASK	derivative.h	13130;"	d
NVIC_IP_PRI90_SHIFT	derivative.h	13131;"	d
NVIC_IP_PRI91	derivative.h	13135;"	d
NVIC_IP_PRI91_MASK	derivative.h	13133;"	d
NVIC_IP_PRI91_SHIFT	derivative.h	13134;"	d
NVIC_IP_PRI92	derivative.h	13138;"	d
NVIC_IP_PRI92_MASK	derivative.h	13136;"	d
NVIC_IP_PRI92_SHIFT	derivative.h	13137;"	d
NVIC_IP_PRI93	derivative.h	13141;"	d
NVIC_IP_PRI93_MASK	derivative.h	13139;"	d
NVIC_IP_PRI93_SHIFT	derivative.h	13140;"	d
NVIC_IP_PRI94	derivative.h	13144;"	d
NVIC_IP_PRI94_MASK	derivative.h	13142;"	d
NVIC_IP_PRI94_SHIFT	derivative.h	13143;"	d
NVIC_IP_PRI95	derivative.h	13147;"	d
NVIC_IP_PRI95_MASK	derivative.h	13145;"	d
NVIC_IP_PRI95_SHIFT	derivative.h	13146;"	d
NVIC_IP_PRI96	derivative.h	13150;"	d
NVIC_IP_PRI96_MASK	derivative.h	13148;"	d
NVIC_IP_PRI96_SHIFT	derivative.h	13149;"	d
NVIC_IP_PRI97	derivative.h	13153;"	d
NVIC_IP_PRI97_MASK	derivative.h	13151;"	d
NVIC_IP_PRI97_SHIFT	derivative.h	13152;"	d
NVIC_IP_PRI98	derivative.h	13156;"	d
NVIC_IP_PRI98_MASK	derivative.h	13154;"	d
NVIC_IP_PRI98_SHIFT	derivative.h	13155;"	d
NVIC_IP_PRI99	derivative.h	13159;"	d
NVIC_IP_PRI99_MASK	derivative.h	13157;"	d
NVIC_IP_PRI99_SHIFT	derivative.h	13158;"	d
NVIC_IP_PRI9_MASK	derivative.h	12887;"	d
NVIC_IP_PRI9_SHIFT	derivative.h	12888;"	d
NVIC_IP_REG	derivative.h	12822;"	d
NVIC_ISER	derivative.h	13335;"	d
NVIC_ISER_REG	derivative.h	12817;"	d
NVIC_ISER_SETENA	derivative.h	12842;"	d
NVIC_ISER_SETENA_MASK	derivative.h	12840;"	d
NVIC_ISER_SETENA_SHIFT	derivative.h	12841;"	d
NVIC_ISPR	derivative.h	13337;"	d
NVIC_ISPR_REG	derivative.h	12819;"	d
NVIC_ISPR_SETPEND	derivative.h	12850;"	d
NVIC_ISPR_SETPEND_MASK	derivative.h	12848;"	d
NVIC_ISPR_SETPEND_SHIFT	derivative.h	12849;"	d
NVIC_MemMap	derivative.h	/^typedef struct NVIC_MemMap {$/;"	s
NVIC_MemMapPtr	derivative.h	/^} volatile *NVIC_MemMapPtr;$/;"	t
NVIC_STIR	derivative.h	13341;"	d
NVIC_STIR_INTID	derivative.h	13181;"	d
NVIC_STIR_INTID_MASK	derivative.h	13179;"	d
NVIC_STIR_INTID_SHIFT	derivative.h	13180;"	d
NVIC_STIR_REG	derivative.h	12823;"	d
NV_BACKKEY0	derivative.h	12756;"	d
NV_BACKKEY0_KEY	derivative.h	12670;"	d
NV_BACKKEY0_KEY_MASK	derivative.h	12668;"	d
NV_BACKKEY0_KEY_SHIFT	derivative.h	12669;"	d
NV_BACKKEY0_REG	derivative.h	12627;"	d
NV_BACKKEY1	derivative.h	12755;"	d
NV_BACKKEY1_KEY	derivative.h	12666;"	d
NV_BACKKEY1_KEY_MASK	derivative.h	12664;"	d
NV_BACKKEY1_KEY_SHIFT	derivative.h	12665;"	d
NV_BACKKEY1_REG	derivative.h	12626;"	d
NV_BACKKEY2	derivative.h	12754;"	d
NV_BACKKEY2_KEY	derivative.h	12662;"	d
NV_BACKKEY2_KEY_MASK	derivative.h	12660;"	d
NV_BACKKEY2_KEY_SHIFT	derivative.h	12661;"	d
NV_BACKKEY2_REG	derivative.h	12625;"	d
NV_BACKKEY3	derivative.h	12753;"	d
NV_BACKKEY3_KEY	derivative.h	12658;"	d
NV_BACKKEY3_KEY_MASK	derivative.h	12656;"	d
NV_BACKKEY3_KEY_SHIFT	derivative.h	12657;"	d
NV_BACKKEY3_REG	derivative.h	12624;"	d
NV_BACKKEY4	derivative.h	12760;"	d
NV_BACKKEY4_KEY	derivative.h	12686;"	d
NV_BACKKEY4_KEY_MASK	derivative.h	12684;"	d
NV_BACKKEY4_KEY_SHIFT	derivative.h	12685;"	d
NV_BACKKEY4_REG	derivative.h	12631;"	d
NV_BACKKEY5	derivative.h	12759;"	d
NV_BACKKEY5_KEY	derivative.h	12682;"	d
NV_BACKKEY5_KEY_MASK	derivative.h	12680;"	d
NV_BACKKEY5_KEY_SHIFT	derivative.h	12681;"	d
NV_BACKKEY5_REG	derivative.h	12630;"	d
NV_BACKKEY6	derivative.h	12758;"	d
NV_BACKKEY6_KEY	derivative.h	12678;"	d
NV_BACKKEY6_KEY_MASK	derivative.h	12676;"	d
NV_BACKKEY6_KEY_SHIFT	derivative.h	12677;"	d
NV_BACKKEY6_REG	derivative.h	12629;"	d
NV_BACKKEY7	derivative.h	12757;"	d
NV_BACKKEY7_KEY	derivative.h	12674;"	d
NV_BACKKEY7_KEY_MASK	derivative.h	12672;"	d
NV_BACKKEY7_KEY_SHIFT	derivative.h	12673;"	d
NV_BACKKEY7_REG	derivative.h	12628;"	d
NV_BASE_PTRS	derivative.h	12739;"	d
NV_FDPROT	derivative.h	12768;"	d
NV_FDPROT_DPROT	derivative.h	12728;"	d
NV_FDPROT_DPROT_MASK	derivative.h	12726;"	d
NV_FDPROT_DPROT_SHIFT	derivative.h	12727;"	d
NV_FDPROT_REG	derivative.h	12639;"	d
NV_FEPROT	derivative.h	12767;"	d
NV_FEPROT_EPROT	derivative.h	12724;"	d
NV_FEPROT_EPROT_MASK	derivative.h	12722;"	d
NV_FEPROT_EPROT_SHIFT	derivative.h	12723;"	d
NV_FEPROT_REG	derivative.h	12638;"	d
NV_FOPT	derivative.h	12766;"	d
NV_FOPT_EZPORT_DIS_MASK	derivative.h	12719;"	d
NV_FOPT_EZPORT_DIS_SHIFT	derivative.h	12720;"	d
NV_FOPT_LPBOOT_MASK	derivative.h	12717;"	d
NV_FOPT_LPBOOT_SHIFT	derivative.h	12718;"	d
NV_FOPT_REG	derivative.h	12637;"	d
NV_FPROT0	derivative.h	12764;"	d
NV_FPROT0_PROT	derivative.h	12702;"	d
NV_FPROT0_PROT_MASK	derivative.h	12700;"	d
NV_FPROT0_PROT_SHIFT	derivative.h	12701;"	d
NV_FPROT0_REG	derivative.h	12635;"	d
NV_FPROT1	derivative.h	12763;"	d
NV_FPROT1_PROT	derivative.h	12698;"	d
NV_FPROT1_PROT_MASK	derivative.h	12696;"	d
NV_FPROT1_PROT_SHIFT	derivative.h	12697;"	d
NV_FPROT1_REG	derivative.h	12634;"	d
NV_FPROT2	derivative.h	12762;"	d
NV_FPROT2_PROT	derivative.h	12694;"	d
NV_FPROT2_PROT_MASK	derivative.h	12692;"	d
NV_FPROT2_PROT_SHIFT	derivative.h	12693;"	d
NV_FPROT2_REG	derivative.h	12633;"	d
NV_FPROT3	derivative.h	12761;"	d
NV_FPROT3_PROT	derivative.h	12690;"	d
NV_FPROT3_PROT_MASK	derivative.h	12688;"	d
NV_FPROT3_PROT_SHIFT	derivative.h	12689;"	d
NV_FPROT3_REG	derivative.h	12632;"	d
NV_FSEC	derivative.h	12765;"	d
NV_FSEC_FSLACC	derivative.h	12709;"	d
NV_FSEC_FSLACC_MASK	derivative.h	12707;"	d
NV_FSEC_FSLACC_SHIFT	derivative.h	12708;"	d
NV_FSEC_KEYEN	derivative.h	12715;"	d
NV_FSEC_KEYEN_MASK	derivative.h	12713;"	d
NV_FSEC_KEYEN_SHIFT	derivative.h	12714;"	d
NV_FSEC_MEEN	derivative.h	12712;"	d
NV_FSEC_MEEN_MASK	derivative.h	12710;"	d
NV_FSEC_MEEN_SHIFT	derivative.h	12711;"	d
NV_FSEC_REG	derivative.h	12636;"	d
NV_FSEC_SEC	derivative.h	12706;"	d
NV_FSEC_SEC_MASK	derivative.h	12704;"	d
NV_FSEC_SEC_SHIFT	derivative.h	12705;"	d
NV_MemMap	derivative.h	/^typedef struct NV_MemMap {$/;"	s
NV_MemMapPtr	derivative.h	/^} volatile *NV_MemMapPtr;$/;"	t
OBSERVE	derivative.h	/^  uint8_t OBSERVE;                                 \/**< USB OTG Observe Register, offset: 0x104 *\/$/;"	m	struct:USB_MemMap
OC	derivative.h	/^  uint8_t OC;                                      \/**< CMT Output Control Register, offset: 0x4 *\/$/;"	m	struct:CMT_MemMap
OFS	derivative.h	/^  uint32_t OFS;                                    \/**< ADC offset correction register, offset: 0x28 *\/$/;"	m	struct:ADC_MemMap
OPD	derivative.h	/^  uint32_t OPD;                                    \/**< Opcode\/Pause Duration Register, offset: 0xEC *\/$/;"	m	struct:ENET_MemMap
OR	derivative.h	/^  uint32_t OR;                                     \/**< RNGA Output Register, offset: 0xC *\/$/;"	m	struct:RNG_MemMap
OSC0_BASE_PTR	derivative.h	13415;"	d
OSC0_CR	derivative.h	13433;"	d
OSC1_BASE_PTR	derivative.h	13417;"	d
OSC1_CR	derivative.h	13435;"	d
OSC_BASE_PTRS	derivative.h	13419;"	d
OSC_CR_ERCLKEN_MASK	derivative.h	13405;"	d
OSC_CR_ERCLKEN_SHIFT	derivative.h	13406;"	d
OSC_CR_EREFSTEN_MASK	derivative.h	13403;"	d
OSC_CR_EREFSTEN_SHIFT	derivative.h	13404;"	d
OSC_CR_REG	derivative.h	13378;"	d
OSC_CR_SC16P_MASK	derivative.h	13395;"	d
OSC_CR_SC16P_SHIFT	derivative.h	13396;"	d
OSC_CR_SC2P_MASK	derivative.h	13401;"	d
OSC_CR_SC2P_SHIFT	derivative.h	13402;"	d
OSC_CR_SC4P_MASK	derivative.h	13399;"	d
OSC_CR_SC4P_SHIFT	derivative.h	13400;"	d
OSC_CR_SC8P_MASK	derivative.h	13397;"	d
OSC_CR_SC8P_SHIFT	derivative.h	13398;"	d
OSC_MemMap	derivative.h	/^typedef struct OSC_MemMap {$/;"	s
OSC_MemMapPtr	derivative.h	/^} volatile *OSC_MemMapPtr;$/;"	t
OTGCTL	derivative.h	/^  uint8_t OTGCTL;                                  \/**< OTG Control Register, offset: 0x1C *\/$/;"	m	struct:USB_MemMap
OTGICR	derivative.h	/^  uint8_t OTGICR;                                  \/**< OTG Interrupt Control Register, offset: 0x14 *\/$/;"	m	struct:USB_MemMap
OTGISTAT	derivative.h	/^  uint8_t OTGISTAT;                                \/**< OTG Interrupt Status Register, offset: 0x10 *\/$/;"	m	struct:USB_MemMap
OTGSC	derivative.h	/^  uint32_t OTGSC;                                  \/**< On-the-Go Status and Control Register, offset: 0x1A4 *\/$/;"	m	struct:USBHS_MemMap
OTGSTAT	derivative.h	/^  uint8_t OTGSTAT;                                 \/**< OTG Status Register, offset: 0x18 *\/$/;"	m	struct:USB_MemMap
OUTINIT	derivative.h	/^  uint32_t OUTINIT;                                \/**< Initial State for Channels Output, offset: 0x5C *\/$/;"	m	struct:FTM_MemMap
OUTMASK	derivative.h	/^  uint32_t OUTMASK;                                \/**< Output Mask, offset: 0x60 *\/$/;"	m	struct:FTM_MemMap
PACRA	derivative.h	/^  uint32_t PACRA;                                  \/**< Peripheral Access Control Register, offset: 0x20 *\/$/;"	m	struct:AIPS_MemMap
PACRB	derivative.h	/^  uint32_t PACRB;                                  \/**< Peripheral Access Control Register, offset: 0x24 *\/$/;"	m	struct:AIPS_MemMap
PACRC	derivative.h	/^  uint32_t PACRC;                                  \/**< Peripheral Access Control Register, offset: 0x28 *\/$/;"	m	struct:AIPS_MemMap
PACRD	derivative.h	/^  uint32_t PACRD;                                  \/**< Peripheral Access Control Register, offset: 0x2C *\/$/;"	m	struct:AIPS_MemMap
PACRE	derivative.h	/^  uint32_t PACRE;                                  \/**< Peripheral Access Control Register, offset: 0x40 *\/$/;"	m	struct:AIPS_MemMap
PACRF	derivative.h	/^  uint32_t PACRF;                                  \/**< Peripheral Access Control Register, offset: 0x44 *\/$/;"	m	struct:AIPS_MemMap
PACRG	derivative.h	/^  uint32_t PACRG;                                  \/**< Peripheral Access Control Register, offset: 0x48 *\/$/;"	m	struct:AIPS_MemMap
PACRH	derivative.h	/^  uint32_t PACRH;                                  \/**< Peripheral Access Control Register, offset: 0x4C *\/$/;"	m	struct:AIPS_MemMap
PACRI	derivative.h	/^  uint32_t PACRI;                                  \/**< Peripheral Access Control Register, offset: 0x50 *\/$/;"	m	struct:AIPS_MemMap
PACRJ	derivative.h	/^  uint32_t PACRJ;                                  \/**< Peripheral Access Control Register, offset: 0x54 *\/$/;"	m	struct:AIPS_MemMap
PACRK	derivative.h	/^  uint32_t PACRK;                                  \/**< Peripheral Access Control Register, offset: 0x58 *\/$/;"	m	struct:AIPS_MemMap
PACRL	derivative.h	/^  uint32_t PACRL;                                  \/**< Peripheral Access Control Register, offset: 0x5C *\/$/;"	m	struct:AIPS_MemMap
PACRM	derivative.h	/^  uint32_t PACRM;                                  \/**< Peripheral Access Control Register, offset: 0x60 *\/$/;"	m	struct:AIPS_MemMap
PACRN	derivative.h	/^  uint32_t PACRN;                                  \/**< Peripheral Access Control Register, offset: 0x64 *\/$/;"	m	struct:AIPS_MemMap
PACRO	derivative.h	/^  uint32_t PACRO;                                  \/**< Peripheral Access Control Register, offset: 0x68 *\/$/;"	m	struct:AIPS_MemMap
PACRP	derivative.h	/^  uint32_t PACRP;                                  \/**< Peripheral Access Control Register, offset: 0x6C *\/$/;"	m	struct:AIPS_MemMap
PAD_CTRL	derivative.h	/^  uint32_t PAD_CTRL;                               \/**< I\/O Pad Control Register, offset: 0x1AC *\/$/;"	m	struct:DDR_MemMap
PALR	derivative.h	/^  uint32_t PALR;                                   \/**< Physical Address Lower Register, offset: 0xE4 *\/$/;"	m	struct:ENET_MemMap
PAUR	derivative.h	/^  uint32_t PAUR;                                   \/**< Physical Address Upper Register, offset: 0xE8 *\/$/;"	m	struct:ENET_MemMap
PCCCR	derivative.h	/^  uint32_t PCCCR;                                  \/**< Cache control register, offset: 0x0 *\/$/;"	m	struct:LMEM_MemMap
PCCCVR	derivative.h	/^  uint32_t PCCCVR;                                 \/**< Cache read\/write value register, offset: 0xC *\/$/;"	m	struct:LMEM_MemMap
PCCLCR	derivative.h	/^  uint32_t PCCLCR;                                 \/**< Cache line control register, offset: 0x4 *\/$/;"	m	struct:LMEM_MemMap
PCCRMR	derivative.h	/^  uint32_t PCCRMR;                                 \/**< Cache regions mode register, offset: 0x20 *\/$/;"	m	struct:LMEM_MemMap
PCCSAR	derivative.h	/^  uint32_t PCCSAR;                                 \/**< Cache search address register, offset: 0x8 *\/$/;"	m	struct:LMEM_MemMap
PCOR	derivative.h	/^  uint32_t PCOR;                                   \/**< Port Clear Output Register, offset: 0x8 *\/$/;"	m	struct:GPIO_MemMap
PCR	derivative.h	/^  uint32_t PCR;                                    \/**< Priority Control Register, offset: 0x4 *\/$/;"	m	struct:ETF_MemMap
PCR	derivative.h	/^  uint32_t PCR[32];                                \/**< Pin Control Register n, array offset: 0x0, array step: 0x4 *\/$/;"	m	struct:PORT_MemMap
PCSR	derivative.h	/^  uint32_t PCSR;                                   \/**< Program Counter Sample Register, offset: 0x1C *\/$/;"	m	struct:DWT_MemMap
PCTH	derivative.h	/^  uint8_t PCTH;                                    \/**< UART CEA709.1-B Packet Cycle Time Counter High, offset: 0x22 *\/$/;"	m	struct:UART_MemMap
PCTL	derivative.h	/^  uint8_t PCTL;                                    \/**< UART CEA709.1-B Packet Cycle Time Counter Low, offset: 0x23 *\/$/;"	m	struct:UART_MemMap
PDB0_BASE_PTR	derivative.h	13605;"	d
PDB0_C1	derivative.h	13652;"	d
PDB0_CH0C1	derivative.h	13625;"	d
PDB0_CH0DLY0	derivative.h	13627;"	d
PDB0_CH0DLY1	derivative.h	13628;"	d
PDB0_CH0S	derivative.h	13626;"	d
PDB0_CH1C1	derivative.h	13629;"	d
PDB0_CH1DLY0	derivative.h	13631;"	d
PDB0_CH1DLY1	derivative.h	13632;"	d
PDB0_CH1S	derivative.h	13630;"	d
PDB0_CH2C1	derivative.h	13633;"	d
PDB0_CH2DLY0	derivative.h	13635;"	d
PDB0_CH2DLY1	derivative.h	13636;"	d
PDB0_CH2S	derivative.h	13634;"	d
PDB0_CH3C1	derivative.h	13637;"	d
PDB0_CH3DLY0	derivative.h	13639;"	d
PDB0_CH3DLY1	derivative.h	13640;"	d
PDB0_CH3S	derivative.h	13638;"	d
PDB0_CNT	derivative.h	13623;"	d
PDB0_DACINT0	derivative.h	13642;"	d
PDB0_DACINT1	derivative.h	13644;"	d
PDB0_DACINTC0	derivative.h	13641;"	d
PDB0_DACINTC1	derivative.h	13643;"	d
PDB0_DLY	derivative.h	13654;"	d
PDB0_IDLY	derivative.h	13624;"	d
PDB0_INT	derivative.h	13656;"	d
PDB0_INTC	derivative.h	13655;"	d
PDB0_MOD	derivative.h	13622;"	d
PDB0_PO0DLY	derivative.h	13646;"	d
PDB0_PO0EN	derivative.h	19823;"	d
PDB0_PO1DLY	derivative.h	13647;"	d
PDB0_PO2DLY	derivative.h	13648;"	d
PDB0_PO3DLY	derivative.h	13649;"	d
PDB0_PODLY	derivative.h	13657;"	d
PDB0_POEN	derivative.h	13645;"	d
PDB0_S	derivative.h	13653;"	d
PDB0_SC	derivative.h	13621;"	d
PDB_BASE_PTRS	derivative.h	13607;"	d
PDB_C1_BB	derivative.h	13565;"	d
PDB_C1_BB_MASK	derivative.h	13563;"	d
PDB_C1_BB_SHIFT	derivative.h	13564;"	d
PDB_C1_EN	derivative.h	13559;"	d
PDB_C1_EN_MASK	derivative.h	13557;"	d
PDB_C1_EN_SHIFT	derivative.h	13558;"	d
PDB_C1_REG	derivative.h	13493;"	d
PDB_C1_TOS	derivative.h	13562;"	d
PDB_C1_TOS_MASK	derivative.h	13560;"	d
PDB_C1_TOS_SHIFT	derivative.h	13561;"	d
PDB_CNT_CNT	derivative.h	13551;"	d
PDB_CNT_CNT_MASK	derivative.h	13549;"	d
PDB_CNT_CNT_SHIFT	derivative.h	13550;"	d
PDB_CNT_REG	derivative.h	13491;"	d
PDB_DLY_DLY	derivative.h	13576;"	d
PDB_DLY_DLY_MASK	derivative.h	13574;"	d
PDB_DLY_DLY_SHIFT	derivative.h	13575;"	d
PDB_DLY_REG	derivative.h	13495;"	d
PDB_IDLY_IDLY	derivative.h	13555;"	d
PDB_IDLY_IDLY_MASK	derivative.h	13553;"	d
PDB_IDLY_IDLY_SHIFT	derivative.h	13554;"	d
PDB_IDLY_REG	derivative.h	13492;"	d
PDB_INTC_EXT_MASK	derivative.h	13580;"	d
PDB_INTC_EXT_SHIFT	derivative.h	13581;"	d
PDB_INTC_REG	derivative.h	13496;"	d
PDB_INTC_TOE_MASK	derivative.h	13578;"	d
PDB_INTC_TOE_SHIFT	derivative.h	13579;"	d
PDB_INT_INT	derivative.h	13585;"	d
PDB_INT_INT_MASK	derivative.h	13583;"	d
PDB_INT_INT_SHIFT	derivative.h	13584;"	d
PDB_INT_REG	derivative.h	13497;"	d
PDB_MOD_MOD	derivative.h	13547;"	d
PDB_MOD_MOD_MASK	derivative.h	13545;"	d
PDB_MOD_MOD_SHIFT	derivative.h	13546;"	d
PDB_MOD_REG	derivative.h	13490;"	d
PDB_MemMap	derivative.h	/^typedef struct PDB_MemMap {$/;"	s
PDB_MemMapPtr	derivative.h	/^} volatile *PDB_MemMapPtr;$/;"	t
PDB_PODLY_DLY1	derivative.h	13596;"	d
PDB_PODLY_DLY1_MASK	derivative.h	13594;"	d
PDB_PODLY_DLY1_SHIFT	derivative.h	13595;"	d
PDB_PODLY_DLY2	derivative.h	13593;"	d
PDB_PODLY_DLY2_MASK	derivative.h	13591;"	d
PDB_PODLY_DLY2_SHIFT	derivative.h	13592;"	d
PDB_PODLY_REG	derivative.h	13499;"	d
PDB_POEN_POEN	derivative.h	13589;"	d
PDB_POEN_POEN_MASK	derivative.h	13587;"	d
PDB_POEN_POEN_SHIFT	derivative.h	13588;"	d
PDB_POEN_REG	derivative.h	13498;"	d
PDB_SC_CONT_MASK	derivative.h	13518;"	d
PDB_SC_CONT_SHIFT	derivative.h	13519;"	d
PDB_SC_DMAEN_MASK	derivative.h	13535;"	d
PDB_SC_DMAEN_SHIFT	derivative.h	13536;"	d
PDB_SC_LDMOD	derivative.h	13543;"	d
PDB_SC_LDMOD_MASK	derivative.h	13541;"	d
PDB_SC_LDMOD_SHIFT	derivative.h	13542;"	d
PDB_SC_LDOK_MASK	derivative.h	13516;"	d
PDB_SC_LDOK_SHIFT	derivative.h	13517;"	d
PDB_SC_MULT	derivative.h	13522;"	d
PDB_SC_MULT_MASK	derivative.h	13520;"	d
PDB_SC_MULT_SHIFT	derivative.h	13521;"	d
PDB_SC_PDBEIE_MASK	derivative.h	13539;"	d
PDB_SC_PDBEIE_SHIFT	derivative.h	13540;"	d
PDB_SC_PDBEN_MASK	derivative.h	13527;"	d
PDB_SC_PDBEN_SHIFT	derivative.h	13528;"	d
PDB_SC_PDBIE_MASK	derivative.h	13523;"	d
PDB_SC_PDBIE_SHIFT	derivative.h	13524;"	d
PDB_SC_PDBIF_MASK	derivative.h	13525;"	d
PDB_SC_PDBIF_SHIFT	derivative.h	13526;"	d
PDB_SC_PRESCALER	derivative.h	13534;"	d
PDB_SC_PRESCALER_MASK	derivative.h	13532;"	d
PDB_SC_PRESCALER_SHIFT	derivative.h	13533;"	d
PDB_SC_REG	derivative.h	13489;"	d
PDB_SC_SWTRIG_MASK	derivative.h	13537;"	d
PDB_SC_SWTRIG_SHIFT	derivative.h	13538;"	d
PDB_SC_TRGSEL	derivative.h	13531;"	d
PDB_SC_TRGSEL_MASK	derivative.h	13529;"	d
PDB_SC_TRGSEL_SHIFT	derivative.h	13530;"	d
PDB_S_CF	derivative.h	13572;"	d
PDB_S_CF_MASK	derivative.h	13570;"	d
PDB_S_CF_SHIFT	derivative.h	13571;"	d
PDB_S_ERR	derivative.h	13569;"	d
PDB_S_ERR_MASK	derivative.h	13567;"	d
PDB_S_ERR_SHIFT	derivative.h	13568;"	d
PDB_S_REG	derivative.h	13494;"	d
PDDR	derivative.h	/^  uint32_t PDDR;                                   \/**< Port Data Direction Register, offset: 0x14 *\/$/;"	m	struct:GPIO_MemMap
PDIR	derivative.h	/^  uint32_t PDIR;                                   \/**< Port Data Input Register, offset: 0x10 *\/$/;"	m	struct:GPIO_MemMap
PDOR	derivative.h	/^  uint32_t PDOR;                                   \/**< Port Data Output Register, offset: 0x0 *\/$/;"	m	struct:GPIO_MemMap
PDSR	derivative.h	/^  uint32_t PDSR;                                   \/**< Device Power-Down Status Register, offset: 0x314 *\/$/;"	m	struct:ETM_MemMap
PE1	derivative.h	/^  uint8_t PE1;                                     \/**< LLWU Pin Enable 1 Register, offset: 0x0 *\/$/;"	m	struct:LLWU_MemMap
PE2	derivative.h	/^  uint8_t PE2;                                     \/**< LLWU Pin Enable 2 Register, offset: 0x1 *\/$/;"	m	struct:LLWU_MemMap
PE3	derivative.h	/^  uint8_t PE3;                                     \/**< LLWU Pin Enable 3 Register, offset: 0x2 *\/$/;"	m	struct:LLWU_MemMap
PE4	derivative.h	/^  uint8_t PE4;                                     \/**< LLWU Pin Enable 4 Register, offset: 0x3 *\/$/;"	m	struct:LLWU_MemMap
PEN	derivative.h	/^  uint32_t PEN;                                    \/**< Pin Enable Register, offset: 0x8 *\/$/;"	m	struct:TSI_MemMap
PERID	derivative.h	/^  uint8_t PERID;                                   \/**< Peripheral ID Register, offset: 0x0 *\/$/;"	m	struct:USB_MemMap
PERIODICLISTBASE	derivative.h	/^    uint32_t PERIODICLISTBASE;                       \/**< Periodic Frame List Base Address Register, offset: 0x154 *\/$/;"	m	union:USBHS_MemMap::__anon33
PFAPR	derivative.h	/^  uint32_t PFAPR;                                  \/**< Flash Access Protection Register, offset: 0x0 *\/$/;"	m	struct:FMC_MemMap
PFB01CR	derivative.h	/^  uint32_t PFB01CR;                                \/**< Flash Bank 0-1 Control Register, offset: 0x4 *\/$/;"	m	struct:FMC_MemMap
PFB23CR	derivative.h	/^  uint32_t PFB23CR;                                \/**< Flash Bank 2-3 Control Register, offset: 0x8 *\/$/;"	m	struct:FMC_MemMap
PFIFO	derivative.h	/^  uint8_t PFIFO;                                   \/**< UART FIFO Parameters, offset: 0x10 *\/$/;"	m	struct:UART_MemMap
PG	derivative.h	/^  uint32_t PG;                                     \/**< ADC plus-side gain register, offset: 0x2C *\/$/;"	m	struct:ADC_MemMap
PGA	derivative.h	/^  uint32_t PGA;                                    \/**< ADC PGA register, offset: 0x50 *\/$/;"	m	struct:ADC_MemMap
PID	derivative.h	/^  uint32_t PID;                                    \/**< Process ID register, offset: 0x30 *\/$/;"	m	struct:MCM_MemMap
PID0	derivative.h	/^  uint32_t PID0;                                   \/**< Peripheral Identification Register 0., offset: 0xFE0 *\/$/;"	m	struct:DWT_MemMap
PID0	derivative.h	/^  uint32_t PID0;                                   \/**< Peripheral Identification Register 0., offset: 0xFE0 *\/$/;"	m	struct:FPB_MemMap
PID0	derivative.h	/^  uint32_t PID0;                                   \/**< Peripheral Identification Register 0., offset: 0xFE0 *\/$/;"	m	struct:ITM_MemMap
PID0	derivative.h	/^  uint32_t PID0;                                   \/**< Peripheral Identification Register 0., offset: 0xFE0 *\/$/;"	m	struct:TPIU_MemMap
PID1	derivative.h	/^  uint32_t PID1;                                   \/**< Peripheral Identification Register 1., offset: 0xFE4 *\/$/;"	m	struct:DWT_MemMap
PID1	derivative.h	/^  uint32_t PID1;                                   \/**< Peripheral Identification Register 1., offset: 0xFE4 *\/$/;"	m	struct:FPB_MemMap
PID1	derivative.h	/^  uint32_t PID1;                                   \/**< Peripheral Identification Register 1., offset: 0xFE4 *\/$/;"	m	struct:ITM_MemMap
PID1	derivative.h	/^  uint32_t PID1;                                   \/**< Peripheral Identification Register 1., offset: 0xFE4 *\/$/;"	m	struct:TPIU_MemMap
PID2	derivative.h	/^  uint32_t PID2;                                   \/**< Peripheral Identification Register 2., offset: 0xFE8 *\/$/;"	m	struct:DWT_MemMap
PID2	derivative.h	/^  uint32_t PID2;                                   \/**< Peripheral Identification Register 2., offset: 0xFE8 *\/$/;"	m	struct:FPB_MemMap
PID2	derivative.h	/^  uint32_t PID2;                                   \/**< Peripheral Identification Register 2., offset: 0xFE8 *\/$/;"	m	struct:ITM_MemMap
PID2	derivative.h	/^  uint32_t PID2;                                   \/**< Peripheral Identification Register 2., offset: 0xFE8 *\/$/;"	m	struct:TPIU_MemMap
PID3	derivative.h	/^  uint32_t PID3;                                   \/**< Peripheral Identification Register 3., offset: 0xFEC *\/$/;"	m	struct:DWT_MemMap
PID3	derivative.h	/^  uint32_t PID3;                                   \/**< Peripheral Identification Register 3., offset: 0xFEC *\/$/;"	m	struct:FPB_MemMap
PID3	derivative.h	/^  uint32_t PID3;                                   \/**< Peripheral Identification Register 3., offset: 0xFEC *\/$/;"	m	struct:ITM_MemMap
PID3	derivative.h	/^  uint32_t PID3;                                   \/**< Peripheral Identification Register 3., offset: 0xFEC *\/$/;"	m	struct:TPIU_MemMap
PID4	derivative.h	/^  uint32_t PID4;                                   \/**< Peripheral Identification Register 4., offset: 0xFD0 *\/$/;"	m	struct:DWT_MemMap
PID4	derivative.h	/^  uint32_t PID4;                                   \/**< Peripheral Identification Register 4., offset: 0xFD0 *\/$/;"	m	struct:FPB_MemMap
PID4	derivative.h	/^  uint32_t PID4;                                   \/**< Peripheral Identification Register 4., offset: 0xFD0 *\/$/;"	m	struct:ITM_MemMap
PID4	derivative.h	/^  uint32_t PID4;                                   \/**< Peripheral Identification Register 4., offset: 0xFD0 *\/$/;"	m	struct:TPIU_MemMap
PID5	derivative.h	/^  uint32_t PID5;                                   \/**< Peripheral Identification Register 5., offset: 0xFD4 *\/$/;"	m	struct:DWT_MemMap
PID5	derivative.h	/^  uint32_t PID5;                                   \/**< Peripheral Identification Register 5., offset: 0xFD4 *\/$/;"	m	struct:FPB_MemMap
PID5	derivative.h	/^  uint32_t PID5;                                   \/**< Peripheral Identification Register 5., offset: 0xFD4 *\/$/;"	m	struct:ITM_MemMap
PID5	derivative.h	/^  uint32_t PID5;                                   \/**< Peripheral Identification Register 5., offset: 0xFD4 *\/$/;"	m	struct:TPIU_MemMap
PID6	derivative.h	/^  uint32_t PID6;                                   \/**< Peripheral Identification Register 6., offset: 0xFD8 *\/$/;"	m	struct:DWT_MemMap
PID6	derivative.h	/^  uint32_t PID6;                                   \/**< Peripheral Identification Register 6., offset: 0xFD8 *\/$/;"	m	struct:FPB_MemMap
PID6	derivative.h	/^  uint32_t PID6;                                   \/**< Peripheral Identification Register 6., offset: 0xFD8 *\/$/;"	m	struct:ITM_MemMap
PID6	derivative.h	/^  uint32_t PID6;                                   \/**< Peripheral Identification Register 6., offset: 0xFD8 *\/$/;"	m	struct:TPIU_MemMap
PID7	derivative.h	/^  uint32_t PID7;                                   \/**< Peripheral Identification Register 7., offset: 0xFDC *\/$/;"	m	struct:DWT_MemMap
PID7	derivative.h	/^  uint32_t PID7;                                   \/**< Peripheral Identification Register 7., offset: 0xFDC *\/$/;"	m	struct:FPB_MemMap
PID7	derivative.h	/^  uint32_t PID7;                                   \/**< Peripheral Identification Register 7., offset: 0xFDC *\/$/;"	m	struct:ITM_MemMap
PID7	derivative.h	/^  uint32_t PID7;                                   \/**< Peripheral Identification Register 7., offset: 0xFDC *\/$/;"	m	struct:TPIU_MemMap
PIDR0	derivative.h	/^  uint32_t PIDR0;                                  \/**< Peripheral Identification Register 0, offset: 0xFE0 *\/$/;"	m	struct:ETB_MemMap
PIDR0	derivative.h	/^  uint32_t PIDR0;                                  \/**< Peripheral Identification Register 0, offset: 0xFE0 *\/$/;"	m	struct:ETF_MemMap
PIDR0	derivative.h	/^  uint32_t PIDR0;                                  \/**< Peripheral Identification Register 0, offset: 0xFE0 *\/$/;"	m	struct:ETM_MemMap
PIDR1	derivative.h	/^  uint32_t PIDR1;                                  \/**< Peripheral Identification Register 1, offset: 0xFE4 *\/$/;"	m	struct:ETB_MemMap
PIDR1	derivative.h	/^  uint32_t PIDR1;                                  \/**< Peripheral Identification Register 1, offset: 0xFE4 *\/$/;"	m	struct:ETF_MemMap
PIDR1	derivative.h	/^  uint32_t PIDR1;                                  \/**< Peripheral Identification Register 1, offset: 0xFE4 *\/$/;"	m	struct:ETM_MemMap
PIDR2	derivative.h	/^  uint32_t PIDR2;                                  \/**< Peripheral Identification Register 2, offset: 0xFE8 *\/$/;"	m	struct:ETB_MemMap
PIDR2	derivative.h	/^  uint32_t PIDR2;                                  \/**< Peripheral Identification Register 2, offset: 0xFE8 *\/$/;"	m	struct:ETF_MemMap
PIDR2	derivative.h	/^  uint32_t PIDR2;                                  \/**< Peripheral Identification Register 2, offset: 0xFE8 *\/$/;"	m	struct:ETM_MemMap
PIDR3	derivative.h	/^  uint32_t PIDR3;                                  \/**< Peripheral Identification Register 3, offset: 0xFEC *\/$/;"	m	struct:ETB_MemMap
PIDR3	derivative.h	/^  uint32_t PIDR3;                                  \/**< Peripheral Identification Register 3, offset: 0xFEC *\/$/;"	m	struct:ETF_MemMap
PIDR3	derivative.h	/^  uint32_t PIDR3;                                  \/**< Peripheral Identification Register 3, offset: 0xFEC *\/$/;"	m	struct:ETM_MemMap
PIDR4	derivative.h	/^  uint32_t PIDR4;                                  \/**< Peripheral Identification Register 4, offset: 0xFD0 *\/$/;"	m	struct:ETB_MemMap
PIDR4	derivative.h	/^  uint32_t PIDR4;                                  \/**< Peripheral Identification Register 4, offset: 0xFD0 *\/$/;"	m	struct:ETF_MemMap
PIDR4	derivative.h	/^  uint32_t PIDR4;                                  \/**< Peripheral Identification Register 4, offset: 0xFD0 *\/$/;"	m	struct:ETM_MemMap
PIDR5	derivative.h	/^  uint32_t PIDR5;                                  \/**< Peripheral Identification Register 5, offset: 0xFD4 *\/$/;"	m	struct:ETB_MemMap
PIDR5	derivative.h	/^  uint32_t PIDR5;                                  \/**< Peripheral Identification Register 5, offset: 0xFD4 *\/$/;"	m	struct:ETF_MemMap
PIDR5	derivative.h	/^  uint32_t PIDR5;                                  \/**< Peripheral Identification Register 5, offset: 0xFD4 *\/$/;"	m	struct:ETM_MemMap
PIDR6	derivative.h	/^  uint32_t PIDR6;                                  \/**< Peripheral Identification Register 6, offset: 0xFD8 *\/$/;"	m	struct:ETB_MemMap
PIDR6	derivative.h	/^  uint32_t PIDR6;                                  \/**< Peripheral Identification Register 6, offset: 0xFD8 *\/$/;"	m	struct:ETF_MemMap
PIDR6	derivative.h	/^  uint32_t PIDR6;                                  \/**< Peripheral Identification Register 6, offset: 0xFD8 *\/$/;"	m	struct:ETM_MemMap
PIDR7	derivative.h	/^  uint32_t PIDR7;                                  \/**< Peripheral Identification Register 7, offset: 0xFDC *\/$/;"	m	struct:ETB_MemMap
PIDR7	derivative.h	/^  uint32_t PIDR7;                                  \/**< Peripheral Identification Register 7, offset: 0xFDC *\/$/;"	m	struct:ETF_MemMap
PIDR7	derivative.h	/^  uint32_t PIDR7;                                  \/**< Peripheral Identification Register 7, offset: 0xFDC *\/$/;"	m	struct:ETM_MemMap
PIT_BASE_PTR	derivative.h	13750;"	d
PIT_BASE_PTRS	derivative.h	13752;"	d
PIT_CVAL	derivative.h	13786;"	d
PIT_CVAL0	derivative.h	13768;"	d
PIT_CVAL1	derivative.h	13772;"	d
PIT_CVAL2	derivative.h	13776;"	d
PIT_CVAL3	derivative.h	13780;"	d
PIT_CVAL_REG	derivative.h	13703;"	d
PIT_CVAL_TVL	derivative.h	13733;"	d
PIT_CVAL_TVL_MASK	derivative.h	13731;"	d
PIT_CVAL_TVL_SHIFT	derivative.h	13732;"	d
PIT_LDVAL	derivative.h	13785;"	d
PIT_LDVAL0	derivative.h	13767;"	d
PIT_LDVAL1	derivative.h	13771;"	d
PIT_LDVAL2	derivative.h	13775;"	d
PIT_LDVAL3	derivative.h	13779;"	d
PIT_LDVAL_REG	derivative.h	13702;"	d
PIT_LDVAL_TSV	derivative.h	13729;"	d
PIT_LDVAL_TSV_MASK	derivative.h	13727;"	d
PIT_LDVAL_TSV_SHIFT	derivative.h	13728;"	d
PIT_MCR	derivative.h	13766;"	d
PIT_MCR_FRZ_MASK	derivative.h	13722;"	d
PIT_MCR_FRZ_SHIFT	derivative.h	13723;"	d
PIT_MCR_MDIS_MASK	derivative.h	13724;"	d
PIT_MCR_MDIS_SHIFT	derivative.h	13725;"	d
PIT_MCR_REG	derivative.h	13701;"	d
PIT_MemMap	derivative.h	/^typedef struct PIT_MemMap {$/;"	s
PIT_MemMapPtr	derivative.h	/^} volatile *PIT_MemMapPtr;$/;"	t
PIT_TCTRL	derivative.h	13787;"	d
PIT_TCTRL0	derivative.h	13769;"	d
PIT_TCTRL1	derivative.h	13773;"	d
PIT_TCTRL2	derivative.h	13777;"	d
PIT_TCTRL3	derivative.h	13781;"	d
PIT_TCTRL_REG	derivative.h	13704;"	d
PIT_TCTRL_TEN_MASK	derivative.h	13735;"	d
PIT_TCTRL_TEN_SHIFT	derivative.h	13736;"	d
PIT_TCTRL_TIE_MASK	derivative.h	13737;"	d
PIT_TCTRL_TIE_SHIFT	derivative.h	13738;"	d
PIT_TFLG	derivative.h	13788;"	d
PIT_TFLG0	derivative.h	13770;"	d
PIT_TFLG1	derivative.h	13774;"	d
PIT_TFLG2	derivative.h	13778;"	d
PIT_TFLG3	derivative.h	13782;"	d
PIT_TFLG_REG	derivative.h	13705;"	d
PIT_TFLG_TIF_MASK	derivative.h	13740;"	d
PIT_TFLG_TIF_SHIFT	derivative.h	13741;"	d
PLAMC	derivative.h	/^  uint16_t PLAMC;                                  \/**< Crossbar Switch (AXBS) Master Configuration, offset: 0xA *\/$/;"	m	struct:MCM_MemMap
PLASC	derivative.h	/^  uint16_t PLASC;                                  \/**< Crossbar Switch (AXBS) Slave Configuration, offset: 0x8 *\/$/;"	m	struct:MCM_MemMap
PMCTRL	derivative.h	/^  uint8_t PMCTRL;                                  \/**< Power Mode Control Register, offset: 0x1 *\/$/;"	m	struct:SMC_MemMap
PMC_BASE_PTR	derivative.h	13882;"	d
PMC_BASE_PTRS	derivative.h	13884;"	d
PMC_LVDSC1	derivative.h	13898;"	d
PMC_LVDSC1_LVDACK_MASK	derivative.h	13853;"	d
PMC_LVDSC1_LVDACK_SHIFT	derivative.h	13854;"	d
PMC_LVDSC1_LVDF_MASK	derivative.h	13855;"	d
PMC_LVDSC1_LVDF_SHIFT	derivative.h	13856;"	d
PMC_LVDSC1_LVDIE_MASK	derivative.h	13851;"	d
PMC_LVDSC1_LVDIE_SHIFT	derivative.h	13852;"	d
PMC_LVDSC1_LVDRE_MASK	derivative.h	13849;"	d
PMC_LVDSC1_LVDRE_SHIFT	derivative.h	13850;"	d
PMC_LVDSC1_LVDV	derivative.h	13848;"	d
PMC_LVDSC1_LVDV_MASK	derivative.h	13846;"	d
PMC_LVDSC1_LVDV_SHIFT	derivative.h	13847;"	d
PMC_LVDSC1_REG	derivative.h	13827;"	d
PMC_LVDSC2	derivative.h	13899;"	d
PMC_LVDSC2_LVWACK_MASK	derivative.h	13863;"	d
PMC_LVDSC2_LVWACK_SHIFT	derivative.h	13864;"	d
PMC_LVDSC2_LVWF_MASK	derivative.h	13865;"	d
PMC_LVDSC2_LVWF_SHIFT	derivative.h	13866;"	d
PMC_LVDSC2_LVWIE_MASK	derivative.h	13861;"	d
PMC_LVDSC2_LVWIE_SHIFT	derivative.h	13862;"	d
PMC_LVDSC2_LVWV	derivative.h	13860;"	d
PMC_LVDSC2_LVWV_MASK	derivative.h	13858;"	d
PMC_LVDSC2_LVWV_SHIFT	derivative.h	13859;"	d
PMC_LVDSC2_REG	derivative.h	13828;"	d
PMC_MemMap	derivative.h	/^typedef struct PMC_MemMap {$/;"	s
PMC_MemMapPtr	derivative.h	/^} volatile *PMC_MemMapPtr;$/;"	t
PMC_REGSC	derivative.h	13900;"	d
PMC_REGSC_ACKISO_MASK	derivative.h	13872;"	d
PMC_REGSC_ACKISO_SHIFT	derivative.h	13873;"	d
PMC_REGSC_BGBE_MASK	derivative.h	13868;"	d
PMC_REGSC_BGBE_SHIFT	derivative.h	13869;"	d
PMC_REGSC_BGEN_MASK	derivative.h	19824;"	d
PMC_REGSC_BGEN_SHIFT	derivative.h	19825;"	d
PMC_REGSC_REG	derivative.h	13829;"	d
PMC_REGSC_REGONS_MASK	derivative.h	13870;"	d
PMC_REGSC_REGONS_SHIFT	derivative.h	13871;"	d
PMPROT	derivative.h	/^  uint8_t PMPROT;                                  \/**< Power Mode Protection Register, offset: 0x0 *\/$/;"	m	struct:SMC_MemMap
PMSTAT	derivative.h	/^  uint8_t PMSTAT;                                  \/**< Power Mode Status Register, offset: 0x3 *\/$/;"	m	struct:SMC_MemMap
PODLY	derivative.h	/^  uint32_t PODLY[4];                               \/**< Pulse-Out n Delay Register, array offset: 0x194, array step: 0x4 *\/$/;"	m	struct:PDB_MemMap
POEN	derivative.h	/^  uint32_t POEN;                                   \/**< Pulse-Out n Enable Register, offset: 0x190 *\/$/;"	m	struct:PDB_MemMap
POL	derivative.h	/^  uint32_t POL;                                    \/**< Channels Polarity, offset: 0x70 *\/$/;"	m	struct:FTM_MemMap
POPR	derivative.h	/^  uint32_t POPR;                                   \/**< DSPI POP RX FIFO Register, offset: 0x38 *\/$/;"	m	struct:SPI_MemMap
PORTA_BASE_PTR	derivative.h	14027;"	d
PORTA_DFCR	derivative.h	14089;"	d
PORTA_DFER	derivative.h	14088;"	d
PORTA_DFWR	derivative.h	14090;"	d
PORTA_GPCHR	derivative.h	14086;"	d
PORTA_GPCLR	derivative.h	14085;"	d
PORTA_ISFR	derivative.h	14087;"	d
PORTA_PCR	derivative.h	14288;"	d
PORTA_PCR0	derivative.h	14053;"	d
PORTA_PCR1	derivative.h	14054;"	d
PORTA_PCR10	derivative.h	14063;"	d
PORTA_PCR11	derivative.h	14064;"	d
PORTA_PCR12	derivative.h	14065;"	d
PORTA_PCR13	derivative.h	14066;"	d
PORTA_PCR14	derivative.h	14067;"	d
PORTA_PCR15	derivative.h	14068;"	d
PORTA_PCR16	derivative.h	14069;"	d
PORTA_PCR17	derivative.h	14070;"	d
PORTA_PCR18	derivative.h	14071;"	d
PORTA_PCR19	derivative.h	14072;"	d
PORTA_PCR2	derivative.h	14055;"	d
PORTA_PCR20	derivative.h	14073;"	d
PORTA_PCR21	derivative.h	14074;"	d
PORTA_PCR22	derivative.h	14075;"	d
PORTA_PCR23	derivative.h	14076;"	d
PORTA_PCR24	derivative.h	14077;"	d
PORTA_PCR25	derivative.h	14078;"	d
PORTA_PCR26	derivative.h	14079;"	d
PORTA_PCR27	derivative.h	14080;"	d
PORTA_PCR28	derivative.h	14081;"	d
PORTA_PCR29	derivative.h	14082;"	d
PORTA_PCR3	derivative.h	14056;"	d
PORTA_PCR30	derivative.h	14083;"	d
PORTA_PCR31	derivative.h	14084;"	d
PORTA_PCR4	derivative.h	14057;"	d
PORTA_PCR5	derivative.h	14058;"	d
PORTA_PCR6	derivative.h	14059;"	d
PORTA_PCR7	derivative.h	14060;"	d
PORTA_PCR8	derivative.h	14061;"	d
PORTA_PCR9	derivative.h	14062;"	d
PORTB_BASE_PTR	derivative.h	14029;"	d
PORTB_DFCR	derivative.h	14128;"	d
PORTB_DFER	derivative.h	14127;"	d
PORTB_DFWR	derivative.h	14129;"	d
PORTB_GPCHR	derivative.h	14125;"	d
PORTB_GPCLR	derivative.h	14124;"	d
PORTB_ISFR	derivative.h	14126;"	d
PORTB_PCR	derivative.h	14289;"	d
PORTB_PCR0	derivative.h	14092;"	d
PORTB_PCR1	derivative.h	14093;"	d
PORTB_PCR10	derivative.h	14102;"	d
PORTB_PCR11	derivative.h	14103;"	d
PORTB_PCR12	derivative.h	14104;"	d
PORTB_PCR13	derivative.h	14105;"	d
PORTB_PCR14	derivative.h	14106;"	d
PORTB_PCR15	derivative.h	14107;"	d
PORTB_PCR16	derivative.h	14108;"	d
PORTB_PCR17	derivative.h	14109;"	d
PORTB_PCR18	derivative.h	14110;"	d
PORTB_PCR19	derivative.h	14111;"	d
PORTB_PCR2	derivative.h	14094;"	d
PORTB_PCR20	derivative.h	14112;"	d
PORTB_PCR21	derivative.h	14113;"	d
PORTB_PCR22	derivative.h	14114;"	d
PORTB_PCR23	derivative.h	14115;"	d
PORTB_PCR24	derivative.h	14116;"	d
PORTB_PCR25	derivative.h	14117;"	d
PORTB_PCR26	derivative.h	14118;"	d
PORTB_PCR27	derivative.h	14119;"	d
PORTB_PCR28	derivative.h	14120;"	d
PORTB_PCR29	derivative.h	14121;"	d
PORTB_PCR3	derivative.h	14095;"	d
PORTB_PCR30	derivative.h	14122;"	d
PORTB_PCR31	derivative.h	14123;"	d
PORTB_PCR4	derivative.h	14096;"	d
PORTB_PCR5	derivative.h	14097;"	d
PORTB_PCR6	derivative.h	14098;"	d
PORTB_PCR7	derivative.h	14099;"	d
PORTB_PCR8	derivative.h	14100;"	d
PORTB_PCR9	derivative.h	14101;"	d
PORTC_BASE_PTR	derivative.h	14031;"	d
PORTC_DFCR	derivative.h	14167;"	d
PORTC_DFER	derivative.h	14166;"	d
PORTC_DFWR	derivative.h	14168;"	d
PORTC_GPCHR	derivative.h	14164;"	d
PORTC_GPCLR	derivative.h	14163;"	d
PORTC_ISFR	derivative.h	14165;"	d
PORTC_PCR	derivative.h	14290;"	d
PORTC_PCR0	derivative.h	14131;"	d
PORTC_PCR1	derivative.h	14132;"	d
PORTC_PCR10	derivative.h	14141;"	d
PORTC_PCR11	derivative.h	14142;"	d
PORTC_PCR12	derivative.h	14143;"	d
PORTC_PCR13	derivative.h	14144;"	d
PORTC_PCR14	derivative.h	14145;"	d
PORTC_PCR15	derivative.h	14146;"	d
PORTC_PCR16	derivative.h	14147;"	d
PORTC_PCR17	derivative.h	14148;"	d
PORTC_PCR18	derivative.h	14149;"	d
PORTC_PCR19	derivative.h	14150;"	d
PORTC_PCR2	derivative.h	14133;"	d
PORTC_PCR20	derivative.h	14151;"	d
PORTC_PCR21	derivative.h	14152;"	d
PORTC_PCR22	derivative.h	14153;"	d
PORTC_PCR23	derivative.h	14154;"	d
PORTC_PCR24	derivative.h	14155;"	d
PORTC_PCR25	derivative.h	14156;"	d
PORTC_PCR26	derivative.h	14157;"	d
PORTC_PCR27	derivative.h	14158;"	d
PORTC_PCR28	derivative.h	14159;"	d
PORTC_PCR29	derivative.h	14160;"	d
PORTC_PCR3	derivative.h	14134;"	d
PORTC_PCR30	derivative.h	14161;"	d
PORTC_PCR31	derivative.h	14162;"	d
PORTC_PCR4	derivative.h	14135;"	d
PORTC_PCR5	derivative.h	14136;"	d
PORTC_PCR6	derivative.h	14137;"	d
PORTC_PCR7	derivative.h	14138;"	d
PORTC_PCR8	derivative.h	14139;"	d
PORTC_PCR9	derivative.h	14140;"	d
PORTD_BASE_PTR	derivative.h	14033;"	d
PORTD_DFCR	derivative.h	14206;"	d
PORTD_DFER	derivative.h	14205;"	d
PORTD_DFWR	derivative.h	14207;"	d
PORTD_GPCHR	derivative.h	14203;"	d
PORTD_GPCLR	derivative.h	14202;"	d
PORTD_ISFR	derivative.h	14204;"	d
PORTD_PCR	derivative.h	14291;"	d
PORTD_PCR0	derivative.h	14170;"	d
PORTD_PCR1	derivative.h	14171;"	d
PORTD_PCR10	derivative.h	14180;"	d
PORTD_PCR11	derivative.h	14181;"	d
PORTD_PCR12	derivative.h	14182;"	d
PORTD_PCR13	derivative.h	14183;"	d
PORTD_PCR14	derivative.h	14184;"	d
PORTD_PCR15	derivative.h	14185;"	d
PORTD_PCR16	derivative.h	14186;"	d
PORTD_PCR17	derivative.h	14187;"	d
PORTD_PCR18	derivative.h	14188;"	d
PORTD_PCR19	derivative.h	14189;"	d
PORTD_PCR2	derivative.h	14172;"	d
PORTD_PCR20	derivative.h	14190;"	d
PORTD_PCR21	derivative.h	14191;"	d
PORTD_PCR22	derivative.h	14192;"	d
PORTD_PCR23	derivative.h	14193;"	d
PORTD_PCR24	derivative.h	14194;"	d
PORTD_PCR25	derivative.h	14195;"	d
PORTD_PCR26	derivative.h	14196;"	d
PORTD_PCR27	derivative.h	14197;"	d
PORTD_PCR28	derivative.h	14198;"	d
PORTD_PCR29	derivative.h	14199;"	d
PORTD_PCR3	derivative.h	14173;"	d
PORTD_PCR30	derivative.h	14200;"	d
PORTD_PCR31	derivative.h	14201;"	d
PORTD_PCR4	derivative.h	14174;"	d
PORTD_PCR5	derivative.h	14175;"	d
PORTD_PCR6	derivative.h	14176;"	d
PORTD_PCR7	derivative.h	14177;"	d
PORTD_PCR8	derivative.h	14178;"	d
PORTD_PCR9	derivative.h	14179;"	d
PORTE_BASE_PTR	derivative.h	14035;"	d
PORTE_DFCR	derivative.h	14245;"	d
PORTE_DFER	derivative.h	14244;"	d
PORTE_DFWR	derivative.h	14246;"	d
PORTE_GPCHR	derivative.h	14242;"	d
PORTE_GPCLR	derivative.h	14241;"	d
PORTE_ISFR	derivative.h	14243;"	d
PORTE_PCR	derivative.h	14292;"	d
PORTE_PCR0	derivative.h	14209;"	d
PORTE_PCR1	derivative.h	14210;"	d
PORTE_PCR10	derivative.h	14219;"	d
PORTE_PCR11	derivative.h	14220;"	d
PORTE_PCR12	derivative.h	14221;"	d
PORTE_PCR13	derivative.h	14222;"	d
PORTE_PCR14	derivative.h	14223;"	d
PORTE_PCR15	derivative.h	14224;"	d
PORTE_PCR16	derivative.h	14225;"	d
PORTE_PCR17	derivative.h	14226;"	d
PORTE_PCR18	derivative.h	14227;"	d
PORTE_PCR19	derivative.h	14228;"	d
PORTE_PCR2	derivative.h	14211;"	d
PORTE_PCR20	derivative.h	14229;"	d
PORTE_PCR21	derivative.h	14230;"	d
PORTE_PCR22	derivative.h	14231;"	d
PORTE_PCR23	derivative.h	14232;"	d
PORTE_PCR24	derivative.h	14233;"	d
PORTE_PCR25	derivative.h	14234;"	d
PORTE_PCR26	derivative.h	14235;"	d
PORTE_PCR27	derivative.h	14236;"	d
PORTE_PCR28	derivative.h	14237;"	d
PORTE_PCR29	derivative.h	14238;"	d
PORTE_PCR3	derivative.h	14212;"	d
PORTE_PCR30	derivative.h	14239;"	d
PORTE_PCR31	derivative.h	14240;"	d
PORTE_PCR4	derivative.h	14213;"	d
PORTE_PCR5	derivative.h	14214;"	d
PORTE_PCR6	derivative.h	14215;"	d
PORTE_PCR7	derivative.h	14216;"	d
PORTE_PCR8	derivative.h	14217;"	d
PORTE_PCR9	derivative.h	14218;"	d
PORTF_BASE_PTR	derivative.h	14037;"	d
PORTF_DFCR	derivative.h	14284;"	d
PORTF_DFER	derivative.h	14283;"	d
PORTF_DFWR	derivative.h	14285;"	d
PORTF_GPCHR	derivative.h	14281;"	d
PORTF_GPCLR	derivative.h	14280;"	d
PORTF_ISFR	derivative.h	14282;"	d
PORTF_PCR	derivative.h	14293;"	d
PORTF_PCR0	derivative.h	14248;"	d
PORTF_PCR1	derivative.h	14249;"	d
PORTF_PCR10	derivative.h	14258;"	d
PORTF_PCR11	derivative.h	14259;"	d
PORTF_PCR12	derivative.h	14260;"	d
PORTF_PCR13	derivative.h	14261;"	d
PORTF_PCR14	derivative.h	14262;"	d
PORTF_PCR15	derivative.h	14263;"	d
PORTF_PCR16	derivative.h	14264;"	d
PORTF_PCR17	derivative.h	14265;"	d
PORTF_PCR18	derivative.h	14266;"	d
PORTF_PCR19	derivative.h	14267;"	d
PORTF_PCR2	derivative.h	14250;"	d
PORTF_PCR20	derivative.h	14268;"	d
PORTF_PCR21	derivative.h	14269;"	d
PORTF_PCR22	derivative.h	14270;"	d
PORTF_PCR23	derivative.h	14271;"	d
PORTF_PCR24	derivative.h	14272;"	d
PORTF_PCR25	derivative.h	14273;"	d
PORTF_PCR26	derivative.h	14274;"	d
PORTF_PCR27	derivative.h	14275;"	d
PORTF_PCR28	derivative.h	14276;"	d
PORTF_PCR29	derivative.h	14277;"	d
PORTF_PCR3	derivative.h	14251;"	d
PORTF_PCR30	derivative.h	14278;"	d
PORTF_PCR31	derivative.h	14279;"	d
PORTF_PCR4	derivative.h	14252;"	d
PORTF_PCR5	derivative.h	14253;"	d
PORTF_PCR6	derivative.h	14254;"	d
PORTF_PCR7	derivative.h	14255;"	d
PORTF_PCR8	derivative.h	14256;"	d
PORTF_PCR9	derivative.h	14257;"	d
PORTSC1	derivative.h	/^  uint32_t PORTSC1;                                \/**< Port Status and Control Registers, offset: 0x184 *\/$/;"	m	struct:USBHS_MemMap
PORT_BASE_PTRS	derivative.h	14039;"	d
PORT_DFCR_CS_MASK	derivative.h	14013;"	d
PORT_DFCR_CS_SHIFT	derivative.h	14014;"	d
PORT_DFCR_REG	derivative.h	13950;"	d
PORT_DFER_DFE	derivative.h	14011;"	d
PORT_DFER_DFE_MASK	derivative.h	14009;"	d
PORT_DFER_DFE_SHIFT	derivative.h	14010;"	d
PORT_DFER_REG	derivative.h	13949;"	d
PORT_DFWR_FILT	derivative.h	14018;"	d
PORT_DFWR_FILT_MASK	derivative.h	14016;"	d
PORT_DFWR_FILT_SHIFT	derivative.h	14017;"	d
PORT_DFWR_REG	derivative.h	13951;"	d
PORT_GPCHR_GPWD	derivative.h	14000;"	d
PORT_GPCHR_GPWD_MASK	derivative.h	13998;"	d
PORT_GPCHR_GPWD_SHIFT	derivative.h	13999;"	d
PORT_GPCHR_GPWE	derivative.h	14003;"	d
PORT_GPCHR_GPWE_MASK	derivative.h	14001;"	d
PORT_GPCHR_GPWE_SHIFT	derivative.h	14002;"	d
PORT_GPCHR_REG	derivative.h	13947;"	d
PORT_GPCLR_GPWD	derivative.h	13993;"	d
PORT_GPCLR_GPWD_MASK	derivative.h	13991;"	d
PORT_GPCLR_GPWD_SHIFT	derivative.h	13992;"	d
PORT_GPCLR_GPWE	derivative.h	13996;"	d
PORT_GPCLR_GPWE_MASK	derivative.h	13994;"	d
PORT_GPCLR_GPWE_SHIFT	derivative.h	13995;"	d
PORT_GPCLR_REG	derivative.h	13946;"	d
PORT_ISFR_ISF	derivative.h	14007;"	d
PORT_ISFR_ISF_MASK	derivative.h	14005;"	d
PORT_ISFR_ISF_SHIFT	derivative.h	14006;"	d
PORT_ISFR_REG	derivative.h	13948;"	d
PORT_MemMap	derivative.h	/^typedef struct PORT_MemMap {$/;"	s
PORT_MemMapPtr	derivative.h	/^} volatile *PORT_MemMapPtr;$/;"	t
PORT_PCR_DSE_MASK	derivative.h	13978;"	d
PORT_PCR_DSE_SHIFT	derivative.h	13979;"	d
PORT_PCR_IRQC	derivative.h	13987;"	d
PORT_PCR_IRQC_MASK	derivative.h	13985;"	d
PORT_PCR_IRQC_SHIFT	derivative.h	13986;"	d
PORT_PCR_ISF_MASK	derivative.h	13988;"	d
PORT_PCR_ISF_SHIFT	derivative.h	13989;"	d
PORT_PCR_LK_MASK	derivative.h	13983;"	d
PORT_PCR_LK_SHIFT	derivative.h	13984;"	d
PORT_PCR_MUX	derivative.h	13982;"	d
PORT_PCR_MUX_ANALOG	capacitivepadsdriver.c	19;"	d	file:
PORT_PCR_MUX_ANALOG	led.h	11;"	d
PORT_PCR_MUX_ANALOG	leddriver.h	21;"	d
PORT_PCR_MUX_ANALOG	pushbuttondriver.h	19;"	d
PORT_PCR_MUX_GPIO	capacitivepadsdriver.c	20;"	d	file:
PORT_PCR_MUX_GPIO	led.h	14;"	d
PORT_PCR_MUX_GPIO	leddriver.h	24;"	d
PORT_PCR_MUX_GPIO	pushbuttondriver.h	22;"	d
PORT_PCR_MUX_MASK	derivative.h	13980;"	d
PORT_PCR_MUX_SHIFT	derivative.h	13981;"	d
PORT_PCR_ODE_MASK	derivative.h	13976;"	d
PORT_PCR_ODE_SHIFT	derivative.h	13977;"	d
PORT_PCR_PE_MASK	derivative.h	13970;"	d
PORT_PCR_PE_SHIFT	derivative.h	13971;"	d
PORT_PCR_PFE_MASK	derivative.h	13974;"	d
PORT_PCR_PFE_SHIFT	derivative.h	13975;"	d
PORT_PCR_PS_MASK	derivative.h	13968;"	d
PORT_PCR_PS_SHIFT	derivative.h	13969;"	d
PORT_PCR_REG	derivative.h	13945;"	d
PORT_PCR_SRE_MASK	derivative.h	13972;"	d
PORT_PCR_SRE_SHIFT	derivative.h	13973;"	d
POTENTIOMETER	io.h	/^    POTENTIOMETER,$/;"	e	enum:__anon37
POTENTIOMETER1	io.h	/^typedef enum { POTENTIOMETER1} potentiometer_minor_device;$/;"	e	enum:__anon41
PPS	derivative.h	/^  uint8_t PPS;                                     \/**< CMT Primary Prescaler Register, offset: 0xA *\/$/;"	m	struct:CMT_MemMap
PRE	derivative.h	/^  uint8_t PRE;                                     \/**< UART CEA709.1-B Preamble, offset: 0x27 *\/$/;"	m	struct:UART_MemMap
PREDEFINED_DEVICE_MAP	io.h	5;"	d
PRESC	derivative.h	/^  uint16_t PRESC;                                  \/**< Watchdog Prescaler Register, offset: 0x16 *\/$/;"	m	struct:WDOG_MemMap
PROCTL	derivative.h	/^  uint32_t PROCTL;                                 \/**< Protocol Control Register, offset: 0x28 *\/$/;"	m	struct:SDHC_MemMap
PROFONT_CHARS_IN_FONT	profont.h	15;"	d
PROFONT_FONT_HEIGHT	profont.h	16;"	d
PROFONT_FONT_WIDTH	profont.h	17;"	d
PRS	derivative.h	/^    uint32_t PRS;                                    \/**< Priority Registers Slave, array offset: 0x0, array step: 0x100 *\/$/;"	m	struct:AXBS_MemMap::__anon3
PRSSTAT	derivative.h	/^  uint32_t PRSSTAT;                                \/**< Present State Register, offset: 0x24 *\/$/;"	m	struct:SDHC_MemMap
PSCCR	derivative.h	/^  uint32_t PSCCR;                                  \/**< Cache control register, offset: 0x800 *\/$/;"	m	struct:LMEM_MemMap
PSCCVR	derivative.h	/^  uint32_t PSCCVR;                                 \/**< Cache read\/write value register, offset: 0x80C *\/$/;"	m	struct:LMEM_MemMap
PSCLCR	derivative.h	/^  uint32_t PSCLCR;                                 \/**< Cache line control register, offset: 0x804 *\/$/;"	m	struct:LMEM_MemMap
PSCRMR	derivative.h	/^  uint32_t PSCRMR;                                 \/**< Cache regions mode register, offset: 0x820 *\/$/;"	m	struct:LMEM_MemMap
PSCSAR	derivative.h	/^  uint32_t PSCSAR;                                 \/**< Cache search address register, offset: 0x808 *\/$/;"	m	struct:LMEM_MemMap
PSOR	derivative.h	/^  uint32_t PSOR;                                   \/**< Port Set Output Register, offset: 0x4 *\/$/;"	m	struct:GPIO_MemMap
PSR	derivative.h	/^  uint32_t PSR;                                    \/**< Low Power Timer Prescale Register, offset: 0x4 *\/$/;"	m	struct:LPTMR_MemMap
PTA_BASE_PTR	derivative.h	9466;"	d
PTB_BASE_PTR	derivative.h	9468;"	d
PTC_BASE_PTR	derivative.h	9470;"	d
PTD_BASE_PTR	derivative.h	9472;"	d
PTE_BASE_PTR	derivative.h	9474;"	d
PTF_BASE_PTR	derivative.h	9476;"	d
PTOR	derivative.h	/^  uint32_t PTOR;                                   \/**< Port Toggle Output Register, offset: 0xC *\/$/;"	m	struct:GPIO_MemMap
PUSHBUTTON	io.h	/^    PUSHBUTTON,$/;"	e	enum:__anon37
PUSHBUTTON_SW1	io.h	/^typedef enum { PUSHBUTTON_SW1, PUSHBUTTON_SW2 } pushbutton_minor_device;$/;"	e	enum:__anon40
PUSHBUTTON_SW1_PORTD_BIT	pushbuttondriver.h	15;"	d
PUSHBUTTON_SW2	io.h	/^typedef enum { PUSHBUTTON_SW1, PUSHBUTTON_SW2 } pushbutton_minor_device;$/;"	e	enum:__anon40
PUSHBUTTON_SW2_PORTE_BIT	pushbuttondriver.h	16;"	d
PUSHR	derivative.h	/^    uint32_t PUSHR;                                  \/**< DSPI PUSH TX FIFO Register In Master Mode, offset: 0x34 *\/$/;"	m	union:SPI_MemMap::__anon30
PUSHR_SLAVE	derivative.h	/^    uint32_t PUSHR_SLAVE;                            \/**< DSPI PUSH TX FIFO Register In Slave Mode, offset: 0x34 *\/$/;"	m	union:SPI_MemMap::__anon30
PWMLOAD	derivative.h	/^  uint32_t PWMLOAD;                                \/**< FTM PWM Load, offset: 0x98 *\/$/;"	m	struct:FTM_MemMap
QDCTRL	derivative.h	/^  uint32_t QDCTRL;                                 \/**< Quadrature Decoder Control and Status, offset: 0x80 *\/$/;"	m	struct:FTM_MemMap
R	derivative.h	/^  uint32_t R[2];                                   \/**< ADC data result register, array offset: 0x10, array step: 0x4 *\/$/;"	m	struct:ADC_MemMap
RA	derivative.h	/^  uint8_t RA;                                      \/**< I2C Range Address register, offset: 0x7 *\/$/;"	m	struct:I2C_MemMap
RACC	derivative.h	/^  uint32_t RACC;                                   \/**< Receive Accelerator Function Configuration, offset: 0x1C4 *\/$/;"	m	struct:ENET_MemMap
RADR_CA	derivative.h	/^  uint32_t RADR_CA[9];                             \/**< General Purpose Register 0 - Reverse and Add to Register command..General Purpose Register 8 - Reverse and Add to Register command, array offset: 0x908, array step: 0x4 *\/$/;"	m	struct:CAU_MemMap
RADR_CAA	derivative.h	/^  uint32_t RADR_CAA;                               \/**< Accumulator register - Reverse and Add to Register command, offset: 0x904 *\/$/;"	m	struct:CAU_MemMap
RADR_CASR	derivative.h	/^  uint32_t RADR_CASR;                              \/**< Status register  - Reverse and Add to Register command, offset: 0x900 *\/$/;"	m	struct:CAU_MemMap
RAEM	derivative.h	/^  uint32_t RAEM;                                   \/**< Receive FIFO Almost Empty Threshold, offset: 0x198 *\/$/;"	m	struct:ENET_MemMap
RAFL	derivative.h	/^  uint32_t RAFL;                                   \/**< Receive FIFO Almost Full Threshold, offset: 0x19C *\/$/;"	m	struct:ENET_MemMap
RAI	derivative.h	/^  uint32_t RAI;                                    \/**< Row address increment, offset: 0x3F14 *\/$/;"	m	struct:NFC_MemMap
RAR	derivative.h	/^  uint32_t RAR;                                    \/**< RTC Read Access Register, offset: 0x804 *\/$/;"	m	struct:RTC_MemMap
RAR	derivative.h	/^  uint32_t RAR;                                    \/**< Row address, offset: 0x3F0C *\/$/;"	m	struct:NFC_MemMap
RCFIFO	derivative.h	/^  uint8_t RCFIFO;                                  \/**< UART FIFO Receive Count, offset: 0x16 *\/$/;"	m	struct:UART_MemMap
RCM_BASE_PTR	derivative.h	14405;"	d
RCM_BASE_PTRS	derivative.h	14407;"	d
RCM_MR	derivative.h	14425;"	d
RCM_MR_EZP_MS_MASK	derivative.h	14395;"	d
RCM_MR_EZP_MS_SHIFT	derivative.h	14396;"	d
RCM_MR_REG	derivative.h	14340;"	d
RCM_MemMap	derivative.h	/^typedef struct RCM_MemMap {$/;"	s
RCM_MemMapPtr	derivative.h	/^} volatile *RCM_MemMapPtr;$/;"	t
RCM_RPFC	derivative.h	14423;"	d
RCM_RPFC_REG	derivative.h	14338;"	d
RCM_RPFC_RSTFLTSRW	derivative.h	14387;"	d
RCM_RPFC_RSTFLTSRW_MASK	derivative.h	14385;"	d
RCM_RPFC_RSTFLTSRW_SHIFT	derivative.h	14386;"	d
RCM_RPFC_RSTFLTSS_MASK	derivative.h	14388;"	d
RCM_RPFC_RSTFLTSS_SHIFT	derivative.h	14389;"	d
RCM_RPFW	derivative.h	14424;"	d
RCM_RPFW_REG	derivative.h	14339;"	d
RCM_RPFW_RSTFLTSEL	derivative.h	14393;"	d
RCM_RPFW_RSTFLTSEL_MASK	derivative.h	14391;"	d
RCM_RPFW_RSTFLTSEL_SHIFT	derivative.h	14392;"	d
RCM_SRS0	derivative.h	14421;"	d
RCM_SRS0_LOC_MASK	derivative.h	14361;"	d
RCM_SRS0_LOC_SHIFT	derivative.h	14362;"	d
RCM_SRS0_LVD_MASK	derivative.h	14359;"	d
RCM_SRS0_LVD_SHIFT	derivative.h	14360;"	d
RCM_SRS0_PIN_MASK	derivative.h	14365;"	d
RCM_SRS0_PIN_SHIFT	derivative.h	14366;"	d
RCM_SRS0_POR_MASK	derivative.h	14367;"	d
RCM_SRS0_POR_SHIFT	derivative.h	14368;"	d
RCM_SRS0_REG	derivative.h	14336;"	d
RCM_SRS0_WAKEUP_MASK	derivative.h	14357;"	d
RCM_SRS0_WAKEUP_SHIFT	derivative.h	14358;"	d
RCM_SRS0_WDOG_MASK	derivative.h	14363;"	d
RCM_SRS0_WDOG_SHIFT	derivative.h	14364;"	d
RCM_SRS1	derivative.h	14422;"	d
RCM_SRS1_EZPT_MASK	derivative.h	14378;"	d
RCM_SRS1_EZPT_SHIFT	derivative.h	14379;"	d
RCM_SRS1_JTAG_MASK	derivative.h	14370;"	d
RCM_SRS1_JTAG_SHIFT	derivative.h	14371;"	d
RCM_SRS1_LOCKUP_MASK	derivative.h	14372;"	d
RCM_SRS1_LOCKUP_SHIFT	derivative.h	14373;"	d
RCM_SRS1_MDM_AP_MASK	derivative.h	14376;"	d
RCM_SRS1_MDM_AP_SHIFT	derivative.h	14377;"	d
RCM_SRS1_REG	derivative.h	14337;"	d
RCM_SRS1_SACKERR_MASK	derivative.h	14380;"	d
RCM_SRS1_SACKERR_SHIFT	derivative.h	14381;"	d
RCM_SRS1_SW_MASK	derivative.h	14374;"	d
RCM_SRS1_SW_SHIFT	derivative.h	14375;"	d
RCM_SRS1_TAMPER_MASK	derivative.h	14382;"	d
RCM_SRS1_TAMPER_SHIFT	derivative.h	14383;"	d
RCR	derivative.h	/^  uint32_t RCR;                                    \/**< RCR Control Register, offset: 0x180 *\/$/;"	m	struct:DDR_MemMap
RCR	derivative.h	/^  uint32_t RCR;                                    \/**< Receive Control Register, offset: 0x84 *\/$/;"	m	struct:ENET_MemMap
RCR1	derivative.h	/^  uint32_t RCR1;                                   \/**< SAI Receive Configuration 1 Register, offset: 0x84 *\/$/;"	m	struct:I2S_MemMap
RCR2	derivative.h	/^  uint32_t RCR2;                                   \/**< SAI Receive Configuration 2 Register, offset: 0x88 *\/$/;"	m	struct:I2S_MemMap
RCR3	derivative.h	/^  uint32_t RCR3;                                   \/**< SAI Receive Configuration 3 Register, offset: 0x8C *\/$/;"	m	struct:I2S_MemMap
RCR4	derivative.h	/^  uint32_t RCR4;                                   \/**< SAI Receive Configuration 4 Register, offset: 0x90 *\/$/;"	m	struct:I2S_MemMap
RCR5	derivative.h	/^  uint32_t RCR5;                                   \/**< SAI Receive Configuration 5 Register, offset: 0x94 *\/$/;"	m	struct:I2S_MemMap
RCSR	derivative.h	/^  uint32_t RCSR;                                   \/**< SAI Receive Control Register, offset: 0x80 *\/$/;"	m	struct:I2S_MemMap
RDAR	derivative.h	/^  uint32_t RDAR;                                   \/**< Receive Descriptor Active Register, offset: 0x10 *\/$/;"	m	struct:ENET_MemMap
RDP	derivative.h	/^  uint32_t RDP;                                    \/**< RAM Depth Register, offset: 0x4 *\/$/;"	m	struct:ETB_MemMap
RDR	derivative.h	/^  uint32_t RDR[2];                                 \/**< SAI Receive Data Register, array offset: 0xA0, array step: 0x4 *\/$/;"	m	struct:I2S_MemMap
RDSR	derivative.h	/^  uint32_t RDSR;                                   \/**< Receive Descriptor Ring Start Register, offset: 0x180 *\/$/;"	m	struct:ENET_MemMap
REFRESH	derivative.h	/^  uint16_t REFRESH;                                \/**< Watchdog Refresh Register, offset: 0xC *\/$/;"	m	struct:WDOG_MemMap
REG	derivative.h	/^  uint32_t REG[8];                                 \/**< Register file register, array offset: 0x0, array step: 0x4 *\/$/;"	m	struct:RFSYS_MemMap
REG	derivative.h	/^  uint32_t REG[8];                                 \/**< VBAT register file register, array offset: 0x0, array step: 0x4 *\/$/;"	m	struct:RFVBAT_MemMap
REGSC	derivative.h	/^  uint8_t REGSC;                                   \/**< Regulator Status and Control Register, offset: 0x2 *\/$/;"	m	struct:PMC_MemMap
REMAP	derivative.h	/^  uint32_t REMAP;                                  \/**< FlashPatch Remap Register, offset: 0x4 *\/$/;"	m	struct:FPB_MemMap
RESERVED_0	derivative.h	/^      uint8_t RESERVED_0[3];$/;"	m	struct:CRC_MemMap::__anon11::__anon12
RESERVED_0	derivative.h	/^    uint8_t RESERVED_0[12];$/;"	m	struct:AXBS_MemMap::__anon3
RESERVED_0	derivative.h	/^    uint8_t RESERVED_0[24];$/;"	m	struct:PDB_MemMap::__anon26
RESERVED_0	derivative.h	/^    uint8_t RESERVED_0[3];$/;"	m	struct:USB_MemMap::__anon32
RESERVED_0	derivative.h	/^    uint8_t RESERVED_0[4];$/;"	m	struct:DWT_MemMap::__anon19
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[104];$/;"	m	struct:USBHS_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[112];$/;"	m	struct:NVIC_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[128];$/;"	m	struct:DDR_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[12];$/;"	m	struct:MPU_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[160];$/;"	m	struct:PDB_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[16128];$/;"	m	struct:NFC_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[16];$/;"	m	struct:LMEM_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[1];$/;"	m	struct:MCG_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[1];$/;"	m	struct:UART_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[2000];$/;"	m	struct:RTC_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[2048];$/;"	m	struct:CAU_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[240];$/;"	m	struct:TSI_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[244];$/;"	m	struct:FMC_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[24];$/;"	m	struct:FB_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[24];$/;"	m	struct:PORT_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[252];$/;"	m	struct:AXBS_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[252];$/;"	m	struct:PIT_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[28];$/;"	m	struct:AIPS_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[2];$/;"	m	struct:FTFE_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[2];$/;"	m	struct:RCM_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[3456];$/;"	m	struct:ITM_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[3812];$/;"	m	struct:ETF_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[3952];$/;"	m	struct:DWT_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[3];$/;"	m	struct:USB_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4008];$/;"	m	struct:FPB_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4092];$/;"	m	struct:SIM_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4];$/;"	m	struct:CAN_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4];$/;"	m	struct:DMA_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4];$/;"	m	struct:ENET_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4];$/;"	m	struct:ETB_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4];$/;"	m	struct:ETM_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4];$/;"	m	struct:LCDC_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4];$/;"	m	struct:SPI_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[4];$/;"	m	struct:USBDCD_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[8];$/;"	m	struct:I2S_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[8];$/;"	m	struct:MCM_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[8];$/;"	m	struct:SCB_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[8];$/;"	m	struct:SDHC_MemMap
RESERVED_0	derivative.h	/^  uint8_t RESERVED_0[8];$/;"	m	struct:TPIU_MemMap
RESERVED_1	derivative.h	/^    uint8_t RESERVED_1[236];$/;"	m	struct:AXBS_MemMap::__anon3
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[100];$/;"	m	struct:SDHC_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[108];$/;"	m	struct:USBHS_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[112];$/;"	m	struct:NVIC_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[12];$/;"	m	struct:LCDC_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[16];$/;"	m	struct:AIPS_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[192];$/;"	m	struct:FMC_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[1];$/;"	m	struct:MCG_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[1];$/;"	m	struct:RCM_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[1];$/;"	m	struct:UART_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[2012];$/;"	m	struct:LMEM_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[20];$/;"	m	struct:CAU_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[220];$/;"	m	struct:TPIU_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[24];$/;"	m	struct:I2S_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[24];$/;"	m	struct:SPI_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[252];$/;"	m	struct:AXBS_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[28];$/;"	m	struct:PORT_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[3316];$/;"	m	struct:SCB_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[3];$/;"	m	struct:USB_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[40];$/;"	m	struct:DDR_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[48];$/;"	m	struct:PDB_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[4];$/;"	m	struct:DMA_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[4];$/;"	m	struct:ENET_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[4];$/;"	m	struct:ETB_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[4];$/;"	m	struct:ETF_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[4];$/;"	m	struct:MCM_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[4];$/;"	m	struct:SIM_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[60];$/;"	m	struct:ITM_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[8];$/;"	m	struct:CAN_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[8];$/;"	m	struct:ETM_MemMap
RESERVED_1	derivative.h	/^  uint8_t RESERVED_1[968];$/;"	m	struct:MPU_MemMap
RESERVED_10	derivative.h	/^  uint8_t RESERVED_10[3];$/;"	m	struct:USB_MemMap
RESERVED_10	derivative.h	/^  uint8_t RESERVED_10[4];$/;"	m	struct:ETM_MemMap
RESERVED_10	derivative.h	/^  uint8_t RESERVED_10[56];$/;"	m	struct:ENET_MemMap
RESERVED_11	derivative.h	/^  uint8_t RESERVED_11[3];$/;"	m	struct:USB_MemMap
RESERVED_11	derivative.h	/^  uint8_t RESERVED_11[4];$/;"	m	struct:ENET_MemMap
RESERVED_11	derivative.h	/^  uint8_t RESERVED_11[4];$/;"	m	struct:ETM_MemMap
RESERVED_12	derivative.h	/^  uint8_t RESERVED_12[12];$/;"	m	struct:ENET_MemMap
RESERVED_12	derivative.h	/^  uint8_t RESERVED_12[3];$/;"	m	struct:USB_MemMap
RESERVED_12	derivative.h	/^  uint8_t RESERVED_12[4];$/;"	m	struct:ETM_MemMap
RESERVED_13	derivative.h	/^  uint8_t RESERVED_13[3];$/;"	m	struct:USB_MemMap
RESERVED_13	derivative.h	/^  uint8_t RESERVED_13[4];$/;"	m	struct:ETM_MemMap
RESERVED_13	derivative.h	/^  uint8_t RESERVED_13[56];$/;"	m	struct:ENET_MemMap
RESERVED_14	derivative.h	/^  uint8_t RESERVED_14[12];$/;"	m	struct:ENET_MemMap
RESERVED_14	derivative.h	/^  uint8_t RESERVED_14[156];$/;"	m	struct:ETM_MemMap
RESERVED_14	derivative.h	/^  uint8_t RESERVED_14[3];$/;"	m	struct:USB_MemMap
RESERVED_15	derivative.h	/^  uint8_t RESERVED_15[284];$/;"	m	struct:ENET_MemMap
RESERVED_15	derivative.h	/^  uint8_t RESERVED_15[3];$/;"	m	struct:USB_MemMap
RESERVED_15	derivative.h	/^  uint8_t RESERVED_15[8];$/;"	m	struct:ETM_MemMap
RESERVED_16	derivative.h	/^  uint8_t RESERVED_16[16];$/;"	m	struct:ETM_MemMap
RESERVED_16	derivative.h	/^  uint8_t RESERVED_16[3];$/;"	m	struct:USB_MemMap
RESERVED_16	derivative.h	/^  uint8_t RESERVED_16[488];$/;"	m	struct:ENET_MemMap
RESERVED_17	derivative.h	/^  uint8_t RESERVED_17[3];$/;"	m	struct:USB_MemMap
RESERVED_18	derivative.h	/^  uint8_t RESERVED_18[3];$/;"	m	struct:USB_MemMap
RESERVED_19	derivative.h	/^  uint8_t RESERVED_19[3];$/;"	m	struct:USB_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[112];$/;"	m	struct:NVIC_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[12];$/;"	m	struct:ENET_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[156];$/;"	m	struct:ETF_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[16];$/;"	m	struct:LMEM_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[1];$/;"	m	struct:MCG_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[1];$/;"	m	struct:UART_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[20];$/;"	m	struct:CAU_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[20];$/;"	m	struct:LCDC_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[22];$/;"	m	struct:USBHS_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[24];$/;"	m	struct:I2S_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[252];$/;"	m	struct:AXBS_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[276];$/;"	m	struct:ETM_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[3];$/;"	m	struct:USB_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[48];$/;"	m	struct:CAN_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[48];$/;"	m	struct:SPI_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[4];$/;"	m	struct:DMA_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[524];$/;"	m	struct:TPIU_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[52];$/;"	m	struct:SDHC_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[60];$/;"	m	struct:ITM_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[728];$/;"	m	struct:ETB_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[72];$/;"	m	struct:SCB_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[768];$/;"	m	struct:MPU_MemMap
RESERVED_2	derivative.h	/^  uint8_t RESERVED_2[8];$/;"	m	struct:SIM_MemMap
RESERVED_20	derivative.h	/^  uint8_t RESERVED_20[3];$/;"	m	struct:USB_MemMap
RESERVED_21	derivative.h	/^  uint8_t RESERVED_21[11];$/;"	m	struct:USB_MemMap
RESERVED_22	derivative.h	/^  uint8_t RESERVED_22[3];$/;"	m	struct:USB_MemMap
RESERVED_23	derivative.h	/^  uint8_t RESERVED_23[3];$/;"	m	struct:USB_MemMap
RESERVED_24	derivative.h	/^  uint8_t RESERVED_24[3];$/;"	m	struct:USB_MemMap
RESERVED_25	derivative.h	/^  uint8_t RESERVED_25[7];$/;"	m	struct:USB_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[112];$/;"	m	struct:NVIC_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[156];$/;"	m	struct:ETM_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[1792];$/;"	m	struct:CAN_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[20];$/;"	m	struct:CAU_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[24];$/;"	m	struct:ENET_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[24];$/;"	m	struct:USBHS_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[252];$/;"	m	struct:AXBS_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[28];$/;"	m	struct:I2S_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[300];$/;"	m	struct:ITM_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[3032];$/;"	m	struct:ETB_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[3036];$/;"	m	struct:TPIU_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[3];$/;"	m	struct:USB_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[4];$/;"	m	struct:DMA_MemMap
RESERVED_3	derivative.h	/^  uint8_t RESERVED_3[8];$/;"	m	struct:ETF_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[12];$/;"	m	struct:ETF_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[240];$/;"	m	struct:NVIC_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[24];$/;"	m	struct:ITM_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[252];$/;"	m	struct:AXBS_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[28];$/;"	m	struct:ENET_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[3];$/;"	m	struct:USB_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[4];$/;"	m	struct:DMA_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[4];$/;"	m	struct:ETB_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[4];$/;"	m	struct:ETM_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[4];$/;"	m	struct:TPIU_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[4];$/;"	m	struct:USBHS_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[84];$/;"	m	struct:CAU_MemMap
RESERVED_4	derivative.h	/^  uint8_t RESERVED_4[8];$/;"	m	struct:I2S_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[156];$/;"	m	struct:ETB_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[156];$/;"	m	struct:TPIU_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[200];$/;"	m	struct:DMA_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[20];$/;"	m	struct:CAU_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[24];$/;"	m	struct:I2S_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[252];$/;"	m	struct:AXBS_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[2710];$/;"	m	struct:NVIC_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[28];$/;"	m	struct:ENET_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[3];$/;"	m	struct:USB_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[4];$/;"	m	struct:ETM_MemMap
RESERVED_5	derivative.h	/^  uint8_t RESERVED_5[8];$/;"	m	struct:USBHS_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[24];$/;"	m	struct:I2S_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[252];$/;"	m	struct:AXBS_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[276];$/;"	m	struct:CAU_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[32];$/;"	m	struct:TPIU_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[3808];$/;"	m	struct:DMA_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[3];$/;"	m	struct:USB_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[4];$/;"	m	struct:ETM_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[4];$/;"	m	struct:USBHS_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[60];$/;"	m	struct:ENET_MemMap
RESERVED_6	derivative.h	/^  uint8_t RESERVED_6[8];$/;"	m	struct:ETB_MemMap
RESERVED_7	derivative.h	/^  uint8_t RESERVED_7[12];$/;"	m	struct:ETB_MemMap
RESERVED_7	derivative.h	/^  uint8_t RESERVED_7[20];$/;"	m	struct:CAU_MemMap
RESERVED_7	derivative.h	/^  uint8_t RESERVED_7[28];$/;"	m	struct:ENET_MemMap
RESERVED_7	derivative.h	/^  uint8_t RESERVED_7[28];$/;"	m	struct:I2S_MemMap
RESERVED_7	derivative.h	/^  uint8_t RESERVED_7[28];$/;"	m	struct:USBHS_MemMap
RESERVED_7	derivative.h	/^  uint8_t RESERVED_7[4];$/;"	m	struct:ETM_MemMap
RESERVED_7	derivative.h	/^  uint8_t RESERVED_7[4];$/;"	m	struct:TPIU_MemMap
RESERVED_7	derivative.h	/^  uint8_t RESERVED_7[99];$/;"	m	struct:USB_MemMap
RESERVED_8	derivative.h	/^  uint8_t RESERVED_8[264];$/;"	m	struct:ETM_MemMap
RESERVED_8	derivative.h	/^  uint8_t RESERVED_8[3];$/;"	m	struct:USB_MemMap
RESERVED_8	derivative.h	/^  uint8_t RESERVED_8[40];$/;"	m	struct:ENET_MemMap
RESERVED_8	derivative.h	/^  uint8_t RESERVED_8[48];$/;"	m	struct:USBHS_MemMap
RESERVED_9	derivative.h	/^  uint8_t RESERVED_9[28];$/;"	m	struct:ENET_MemMap
RESERVED_9	derivative.h	/^  uint8_t RESERVED_9[3016];$/;"	m	struct:ETM_MemMap
RESERVED_9	derivative.h	/^  uint8_t RESERVED_9[3];$/;"	m	struct:USB_MemMap
REV	derivative.h	/^  uint8_t REV;                                     \/**< Peripheral Revision Register, offset: 0x8 *\/$/;"	m	struct:USB_MemMap
REVE	lcdcdriver.h	17;"	d
RFR	derivative.h	/^  uint32_t RFR[2];                                 \/**< SAI Receive FIFO Register, array offset: 0xC0, array step: 0x4 *\/$/;"	m	struct:I2S_MemMap
RFSYS_BASE_PTR	derivative.h	14499;"	d
RFSYS_BASE_PTRS	derivative.h	14501;"	d
RFSYS_MemMap	derivative.h	/^typedef struct RFSYS_MemMap {$/;"	s
RFSYS_MemMapPtr	derivative.h	/^} volatile *RFSYS_MemMapPtr;$/;"	t
RFSYS_REG	derivative.h	14525;"	d
RFSYS_REG0	derivative.h	14515;"	d
RFSYS_REG1	derivative.h	14516;"	d
RFSYS_REG2	derivative.h	14517;"	d
RFSYS_REG3	derivative.h	14518;"	d
RFSYS_REG4	derivative.h	14519;"	d
RFSYS_REG5	derivative.h	14520;"	d
RFSYS_REG6	derivative.h	14521;"	d
RFSYS_REG7	derivative.h	14522;"	d
RFSYS_REG_HH	derivative.h	14490;"	d
RFSYS_REG_HH_MASK	derivative.h	14488;"	d
RFSYS_REG_HH_SHIFT	derivative.h	14489;"	d
RFSYS_REG_HL	derivative.h	14487;"	d
RFSYS_REG_HL_MASK	derivative.h	14485;"	d
RFSYS_REG_HL_SHIFT	derivative.h	14486;"	d
RFSYS_REG_LH	derivative.h	14484;"	d
RFSYS_REG_LH_MASK	derivative.h	14482;"	d
RFSYS_REG_LH_SHIFT	derivative.h	14483;"	d
RFSYS_REG_LL	derivative.h	14481;"	d
RFSYS_REG_LL_MASK	derivative.h	14479;"	d
RFSYS_REG_LL_SHIFT	derivative.h	14480;"	d
RFSYS_REG_REG	derivative.h	14462;"	d
RFVBAT_BASE_PTR	derivative.h	14599;"	d
RFVBAT_BASE_PTRS	derivative.h	14601;"	d
RFVBAT_MemMap	derivative.h	/^typedef struct RFVBAT_MemMap {$/;"	s
RFVBAT_MemMapPtr	derivative.h	/^} volatile *RFVBAT_MemMapPtr;$/;"	t
RFVBAT_REG	derivative.h	14625;"	d
RFVBAT_REG0	derivative.h	14615;"	d
RFVBAT_REG1	derivative.h	14616;"	d
RFVBAT_REG2	derivative.h	14617;"	d
RFVBAT_REG3	derivative.h	14618;"	d
RFVBAT_REG4	derivative.h	14619;"	d
RFVBAT_REG5	derivative.h	14620;"	d
RFVBAT_REG6	derivative.h	14621;"	d
RFVBAT_REG7	derivative.h	14622;"	d
RFVBAT_REG_HH	derivative.h	14590;"	d
RFVBAT_REG_HH_MASK	derivative.h	14588;"	d
RFVBAT_REG_HH_SHIFT	derivative.h	14589;"	d
RFVBAT_REG_HL	derivative.h	14587;"	d
RFVBAT_REG_HL_MASK	derivative.h	14585;"	d
RFVBAT_REG_HL_SHIFT	derivative.h	14586;"	d
RFVBAT_REG_LH	derivative.h	14584;"	d
RFVBAT_REG_LH_MASK	derivative.h	14582;"	d
RFVBAT_REG_LH_SHIFT	derivative.h	14583;"	d
RFVBAT_REG_LL	derivative.h	14581;"	d
RFVBAT_REG_LL_MASK	derivative.h	14579;"	d
RFVBAT_REG_LL_SHIFT	derivative.h	14580;"	d
RFVBAT_REG_REG	derivative.h	14562;"	d
RGDAAC	derivative.h	/^  uint32_t RGDAAC[16];                             \/**< Region Descriptor Alternate Access Control n, array offset: 0x800, array step: 0x4 *\/$/;"	m	struct:MPU_MemMap
RIDT	derivative.h	/^  uint8_t RIDT;                                    \/**< UART CEA709.1-B Receive Indeterminate Time, offset: 0x30 *\/$/;"	m	struct:UART_MemMap
RMON_R_BC_PKT	derivative.h	/^  uint32_t RMON_R_BC_PKT;                          \/**< RMON Rx Broadcast Packets (RMON_R_BC_PKT), offset: 0x288 *\/$/;"	m	struct:ENET_MemMap
RMON_R_CRC_ALIGN	derivative.h	/^  uint32_t RMON_R_CRC_ALIGN;                       \/**< RMON Rx Packets w CRC\/Align error (RMON_R_CRC_ALIGN), offset: 0x290 *\/$/;"	m	struct:ENET_MemMap
RMON_R_DROP	derivative.h	/^  uint32_t RMON_R_DROP;                            \/**< Count of frames not counted correctly (IEEE_R_DROP). NOTE: Counter increments if a frame with valid\/missing SFD character is detected and has been dropped. None of the other counters increments if this counter increments., offset: 0x2C8 *\/$/;"	m	struct:ENET_MemMap
RMON_R_FRAG	derivative.h	/^  uint32_t RMON_R_FRAG;                            \/**< RMON Rx Packets < 64 bytes, bad CRC (RMON_R_FRAG), offset: 0x29C *\/$/;"	m	struct:ENET_MemMap
RMON_R_FRAME_OK	derivative.h	/^  uint32_t RMON_R_FRAME_OK;                        \/**< Frames Received OK (IEEE_R_FRAME_OK), offset: 0x2CC *\/$/;"	m	struct:ENET_MemMap
RMON_R_JAB	derivative.h	/^  uint32_t RMON_R_JAB;                             \/**< RMON Rx Packets > MAX_FL bytes, bad CRC (RMON_R_JAB), offset: 0x2A0 *\/$/;"	m	struct:ENET_MemMap
RMON_R_MC_PKT	derivative.h	/^  uint32_t RMON_R_MC_PKT;                          \/**< RMON Rx Multicast Packets (RMON_R_MC_PKT), offset: 0x28C *\/$/;"	m	struct:ENET_MemMap
RMON_R_OCTETS	derivative.h	/^  uint32_t RMON_R_OCTETS;                          \/**< RMON Rx Octets (RMON_R_OCTETS), offset: 0x2C4 *\/$/;"	m	struct:ENET_MemMap
RMON_R_OVERSIZE	derivative.h	/^  uint32_t RMON_R_OVERSIZE;                        \/**< RMON Rx Packets > MAX_FL bytes, good CRC (RMON_R_OVERSIZE), offset: 0x298 *\/$/;"	m	struct:ENET_MemMap
RMON_R_P1024TO2047	derivative.h	/^  uint32_t RMON_R_P1024TO2047;                     \/**< RMON Rx 1024 to 2047 byte packets (RMON_R_P1024TO2047), offset: 0x2BC *\/$/;"	m	struct:ENET_MemMap
RMON_R_P128TO255	derivative.h	/^  uint32_t RMON_R_P128TO255;                       \/**< RMON Rx 128 to 255 byte packets (RMON_R_P128TO255), offset: 0x2B0 *\/$/;"	m	struct:ENET_MemMap
RMON_R_P256TO511	derivative.h	/^  uint32_t RMON_R_P256TO511;                       \/**< RMON Rx 256 to 511 byte packets (RMON_R_P256TO511), offset: 0x2B4 *\/$/;"	m	struct:ENET_MemMap
RMON_R_P512TO1023	derivative.h	/^  uint32_t RMON_R_P512TO1023;                      \/**< RMON Rx 512 to 1023 byte packets (RMON_R_P512TO1023), offset: 0x2B8 *\/$/;"	m	struct:ENET_MemMap
RMON_R_P64	derivative.h	/^  uint32_t RMON_R_P64;                             \/**< RMON Rx 64 byte packets (RMON_R_P64), offset: 0x2A8 *\/$/;"	m	struct:ENET_MemMap
RMON_R_P65TO127	derivative.h	/^  uint32_t RMON_R_P65TO127;                        \/**< RMON Rx 65 to 127 byte packets (RMON_R_P65TO127), offset: 0x2AC *\/$/;"	m	struct:ENET_MemMap
RMON_R_PACKETS	derivative.h	/^  uint32_t RMON_R_PACKETS;                         \/**< RMON Rx packet count (RMON_R_PACKETS), offset: 0x284 *\/$/;"	m	struct:ENET_MemMap
RMON_R_P_GTE2048	derivative.h	/^  uint32_t RMON_R_P_GTE2048;                       \/**< RMON Rx packets w > 2048 bytes (RMON_R_P_GTE2048), offset: 0x2C0 *\/$/;"	m	struct:ENET_MemMap
RMON_R_RESVD_0	derivative.h	/^  uint32_t RMON_R_RESVD_0;                         \/**< Reserved (RMON_R_RESVD_0), offset: 0x2A4 *\/$/;"	m	struct:ENET_MemMap
RMON_R_UNDERSIZE	derivative.h	/^  uint32_t RMON_R_UNDERSIZE;                       \/**< RMON Rx Packets < 64 bytes, good CRC (RMON_R_UNDERSIZE), offset: 0x294 *\/$/;"	m	struct:ENET_MemMap
RMON_T_BC_PKT	derivative.h	/^  uint32_t RMON_T_BC_PKT;                          \/**< RMON Tx Broadcast Packets (RMON_T_BC_PKT), offset: 0x208 *\/$/;"	m	struct:ENET_MemMap
RMON_T_COL	derivative.h	/^  uint32_t RMON_T_COL;                             \/**< RMON Tx collision count (RMON_T_COL), offset: 0x224 *\/$/;"	m	struct:ENET_MemMap
RMON_T_CRC_ALIGN	derivative.h	/^  uint32_t RMON_T_CRC_ALIGN;                       \/**< RMON Tx Packets w CRC\/Align error (RMON_T_CRC_ALIGN), offset: 0x210 *\/$/;"	m	struct:ENET_MemMap
RMON_T_DROP	derivative.h	/^  uint32_t RMON_T_DROP;                            \/**< Count of frames not counted correctly (RMON_T_DROP). NOTE: Counter not implemented (read 0 always) as not applicable., offset: 0x200 *\/$/;"	m	struct:ENET_MemMap
RMON_T_FRAG	derivative.h	/^  uint32_t RMON_T_FRAG;                            \/**< RMON Tx Packets < 64 bytes, bad CRC (RMON_T_FRAG), offset: 0x21C *\/$/;"	m	struct:ENET_MemMap
RMON_T_JAB	derivative.h	/^  uint32_t RMON_T_JAB;                             \/**< RMON Tx Packets > MAX_FL bytes, bad CRC (RMON_T_JAB), offset: 0x220 *\/$/;"	m	struct:ENET_MemMap
RMON_T_MC_PKT	derivative.h	/^  uint32_t RMON_T_MC_PKT;                          \/**< RMON Tx Multicast Packets (RMON_T_MC_PKT), offset: 0x20C *\/$/;"	m	struct:ENET_MemMap
RMON_T_OCTETS	derivative.h	/^  uint32_t RMON_T_OCTETS;                          \/**< RMON Tx Octets (RMON_T_OCTETS), offset: 0x244 *\/$/;"	m	struct:ENET_MemMap
RMON_T_OVERSIZE	derivative.h	/^  uint32_t RMON_T_OVERSIZE;                        \/**< RMON Tx Packets > MAX_FL bytes, good CRC (RMON_T_OVERSIZE), offset: 0x218 *\/$/;"	m	struct:ENET_MemMap
RMON_T_P1024TO2047	derivative.h	/^  uint32_t RMON_T_P1024TO2047;                     \/**< RMON Tx 1024 to 2047 byte packets (RMON_T_P1024TO2047), offset: 0x23C *\/$/;"	m	struct:ENET_MemMap
RMON_T_P128TO255	derivative.h	/^  uint32_t RMON_T_P128TO255;                       \/**< RMON Tx 128 to 255 byte packets (RMON_T_P128TO255), offset: 0x230 *\/$/;"	m	struct:ENET_MemMap
RMON_T_P256TO511	derivative.h	/^  uint32_t RMON_T_P256TO511;                       \/**< RMON Tx 256 to 511 byte packets (RMON_T_P256TO511), offset: 0x234 *\/$/;"	m	struct:ENET_MemMap
RMON_T_P512TO1023	derivative.h	/^  uint32_t RMON_T_P512TO1023;                      \/**< RMON Tx 512 to 1023 byte packets (RMON_T_P512TO1023), offset: 0x238 *\/$/;"	m	struct:ENET_MemMap
RMON_T_P64	derivative.h	/^  uint32_t RMON_T_P64;                             \/**< RMON Tx 64 byte packets (RMON_T_P64), offset: 0x228 *\/$/;"	m	struct:ENET_MemMap
RMON_T_P65TO127	derivative.h	/^  uint32_t RMON_T_P65TO127;                        \/**< RMON Tx 65 to 127 byte packets (RMON_T_P65TO127), offset: 0x22C *\/$/;"	m	struct:ENET_MemMap
RMON_T_PACKETS	derivative.h	/^  uint32_t RMON_T_PACKETS;                         \/**< RMON Tx packet count (RMON_T_PACKETS), offset: 0x204 *\/$/;"	m	struct:ENET_MemMap
RMON_T_P_GTE2048	derivative.h	/^  uint32_t RMON_T_P_GTE2048;                       \/**< RMON Tx packets w > 2048 bytes (RMON_T_P_GTE2048), offset: 0x240 *\/$/;"	m	struct:ENET_MemMap
RMON_T_UNDERSIZE	derivative.h	/^  uint32_t RMON_T_UNDERSIZE;                       \/**< RMON Tx Packets < 64 bytes, good CRC (RMON_T_UNDERSIZE), offset: 0x214 *\/$/;"	m	struct:ENET_MemMap
RMR	derivative.h	/^  uint32_t RMR;                                    \/**< SAI Receive Mask Register, offset: 0xE0 *\/$/;"	m	struct:I2S_MemMap
RNG_BASE_PTR	derivative.h	14728;"	d
RNG_BASE_PTRS	derivative.h	14730;"	d
RNG_CR	derivative.h	14744;"	d
RNG_CR_CLRI_MASK	derivative.h	14691;"	d
RNG_CR_CLRI_SHIFT	derivative.h	14692;"	d
RNG_CR_GO_MASK	derivative.h	14685;"	d
RNG_CR_GO_SHIFT	derivative.h	14686;"	d
RNG_CR_HA_MASK	derivative.h	14687;"	d
RNG_CR_HA_SHIFT	derivative.h	14688;"	d
RNG_CR_INTM_MASK	derivative.h	14689;"	d
RNG_CR_INTM_SHIFT	derivative.h	14690;"	d
RNG_CR_REG	derivative.h	14665;"	d
RNG_CR_SLP_MASK	derivative.h	14693;"	d
RNG_CR_SLP_SHIFT	derivative.h	14694;"	d
RNG_ER	derivative.h	14746;"	d
RNG_ER_EXT_ENT	derivative.h	14715;"	d
RNG_ER_EXT_ENT_MASK	derivative.h	14713;"	d
RNG_ER_EXT_ENT_SHIFT	derivative.h	14714;"	d
RNG_ER_REG	derivative.h	14667;"	d
RNG_MemMap	derivative.h	/^typedef struct RNG_MemMap {$/;"	s
RNG_MemMapPtr	derivative.h	/^} volatile *RNG_MemMapPtr;$/;"	t
RNG_OR	derivative.h	14747;"	d
RNG_OR_RANDOUT	derivative.h	14719;"	d
RNG_OR_RANDOUT_MASK	derivative.h	14717;"	d
RNG_OR_RANDOUT_SHIFT	derivative.h	14718;"	d
RNG_OR_REG	derivative.h	14668;"	d
RNG_SR	derivative.h	14745;"	d
RNG_SR_ERRI_MASK	derivative.h	14702;"	d
RNG_SR_ERRI_SHIFT	derivative.h	14703;"	d
RNG_SR_LRS_MASK	derivative.h	14698;"	d
RNG_SR_LRS_SHIFT	derivative.h	14699;"	d
RNG_SR_OREG_LVL	derivative.h	14708;"	d
RNG_SR_OREG_LVL_MASK	derivative.h	14706;"	d
RNG_SR_OREG_LVL_SHIFT	derivative.h	14707;"	d
RNG_SR_OREG_SIZE	derivative.h	14711;"	d
RNG_SR_OREG_SIZE_MASK	derivative.h	14709;"	d
RNG_SR_OREG_SIZE_SHIFT	derivative.h	14710;"	d
RNG_SR_ORU_MASK	derivative.h	14700;"	d
RNG_SR_ORU_SHIFT	derivative.h	14701;"	d
RNG_SR_REG	derivative.h	14666;"	d
RNG_SR_SECV_MASK	derivative.h	14696;"	d
RNG_SR_SECV_SHIFT	derivative.h	14697;"	d
RNG_SR_SLP_MASK	derivative.h	14704;"	d
RNG_SR_SLP_SHIFT	derivative.h	14705;"	d
ROTL_CA	derivative.h	/^  uint32_t ROTL_CA[9];                             \/**< General Purpose Register 0 - Rotate Left command..General Purpose Register 8 - Rotate Left command, array offset: 0x9C8, array step: 0x4 *\/$/;"	m	struct:CAU_MemMap
ROTL_CAA	derivative.h	/^  uint32_t ROTL_CAA;                               \/**< Accumulator register - Rotate Left command, offset: 0x9C4 *\/$/;"	m	struct:CAU_MemMap
ROTL_CASR	derivative.h	/^  uint32_t ROTL_CASR;                              \/**< Status register  - Rotate Left command, offset: 0x9C0 *\/$/;"	m	struct:CAU_MemMap
RPFC	derivative.h	/^  uint8_t RPFC;                                    \/**< Reset Pin Filter Control Register, offset: 0x4 *\/$/;"	m	struct:RCM_MemMap
RPFW	derivative.h	/^  uint8_t RPFW;                                    \/**< Reset Pin Filter Width Register, offset: 0x5 *\/$/;"	m	struct:RCM_MemMap
RPL	derivative.h	/^  uint8_t RPL;                                     \/**< UART CEA709.1-B Received Packet Length, offset: 0x2D *\/$/;"	m	struct:UART_MemMap
RPREL	derivative.h	/^  uint8_t RPREL;                                   \/**< UART CEA709.1-B Received Preamble Length, offset: 0x2E *\/$/;"	m	struct:UART_MemMap
RPT	derivative.h	/^  uint32_t RPT;                                    \/**< Flash command repeat, offset: 0x3F10 *\/$/;"	m	struct:NFC_MemMap
RRD	derivative.h	/^  uint32_t RRD;                                    \/**< RAM Read Data Register, offset: 0x10 *\/$/;"	m	struct:ETB_MemMap
RRP	derivative.h	/^  uint32_t RRP;                                    \/**< RAM Read Pointer Register, offset: 0x14 *\/$/;"	m	struct:ETB_MemMap
RSEM	derivative.h	/^  uint32_t RSEM;                                   \/**< Receive FIFO Section Empty Threshold, offset: 0x194 *\/$/;"	m	struct:ENET_MemMap
RSER	derivative.h	/^  uint32_t RSER;                                   \/**< DSPI DMA\/Interrupt Request Select and Enable Register, offset: 0x30 *\/$/;"	m	struct:SPI_MemMap
RSFL	derivative.h	/^  uint32_t RSFL;                                   \/**< Receive FIFO Section Full Threshold, offset: 0x190 *\/$/;"	m	struct:ENET_MemMap
RST	derivative.h	/^  uint8_t RST;                                     \/**< LLWU Reset Enable Register, offset: 0xA *\/$/;"	m	struct:LLWU_MemMap
RSTCNT	derivative.h	/^  uint16_t RSTCNT;                                 \/**< Watchdog Reset Count Register, offset: 0x14 *\/$/;"	m	struct:WDOG_MemMap
RTC_BASE_PTR	derivative.h	14985;"	d
RTC_BASE_PTRS	derivative.h	14987;"	d
RTC_CR	derivative.h	15005;"	d
RTC_CR_CLKO_MASK	derivative.h	14863;"	d
RTC_CR_CLKO_SHIFT	derivative.h	14864;"	d
RTC_CR_OSCE_MASK	derivative.h	14861;"	d
RTC_CR_OSCE_SHIFT	derivative.h	14862;"	d
RTC_CR_REG	derivative.h	14802;"	d
RTC_CR_SC16P_MASK	derivative.h	14865;"	d
RTC_CR_SC16P_SHIFT	derivative.h	14866;"	d
RTC_CR_SC2P_MASK	derivative.h	14871;"	d
RTC_CR_SC2P_SHIFT	derivative.h	14872;"	d
RTC_CR_SC4P_MASK	derivative.h	14869;"	d
RTC_CR_SC4P_SHIFT	derivative.h	14870;"	d
RTC_CR_SC8P_MASK	derivative.h	14867;"	d
RTC_CR_SC8P_SHIFT	derivative.h	14868;"	d
RTC_CR_SUP_MASK	derivative.h	14857;"	d
RTC_CR_SUP_SHIFT	derivative.h	14858;"	d
RTC_CR_SWR_MASK	derivative.h	14853;"	d
RTC_CR_SWR_SHIFT	derivative.h	14854;"	d
RTC_CR_UM_MASK	derivative.h	14859;"	d
RTC_CR_UM_SHIFT	derivative.h	14860;"	d
RTC_CR_WPE_MASK	derivative.h	14855;"	d
RTC_CR_WPE_SHIFT	derivative.h	14856;"	d
RTC_IER	derivative.h	15008;"	d
RTC_IER_MOIE_MASK	derivative.h	14908;"	d
RTC_IER_MOIE_SHIFT	derivative.h	14909;"	d
RTC_IER_REG	derivative.h	14805;"	d
RTC_IER_TAIE_MASK	derivative.h	14906;"	d
RTC_IER_TAIE_SHIFT	derivative.h	14907;"	d
RTC_IER_TIIE_MASK	derivative.h	14902;"	d
RTC_IER_TIIE_SHIFT	derivative.h	14903;"	d
RTC_IER_TOIE_MASK	derivative.h	14904;"	d
RTC_IER_TOIE_SHIFT	derivative.h	14905;"	d
RTC_IER_TSIE_MASK	derivative.h	14910;"	d
RTC_IER_TSIE_SHIFT	derivative.h	14911;"	d
RTC_LR	derivative.h	15007;"	d
RTC_LR_CRL_MASK	derivative.h	14887;"	d
RTC_LR_CRL_SHIFT	derivative.h	14888;"	d
RTC_LR_LRL_MASK	derivative.h	14891;"	d
RTC_LR_LRL_SHIFT	derivative.h	14892;"	d
RTC_LR_MCHL_MASK	derivative.h	14899;"	d
RTC_LR_MCHL_SHIFT	derivative.h	14900;"	d
RTC_LR_MCLL_MASK	derivative.h	14897;"	d
RTC_LR_MCLL_SHIFT	derivative.h	14898;"	d
RTC_LR_MEL_MASK	derivative.h	14895;"	d
RTC_LR_MEL_SHIFT	derivative.h	14896;"	d
RTC_LR_REG	derivative.h	14804;"	d
RTC_LR_SRL_MASK	derivative.h	14889;"	d
RTC_LR_SRL_SHIFT	derivative.h	14890;"	d
RTC_LR_TCL_MASK	derivative.h	14885;"	d
RTC_LR_TCL_SHIFT	derivative.h	14886;"	d
RTC_LR_TTSL_MASK	derivative.h	14893;"	d
RTC_LR_TTSL_SHIFT	derivative.h	14894;"	d
RTC_MCHR	derivative.h	15012;"	d
RTC_MCHR_MCH	derivative.h	14926;"	d
RTC_MCHR_MCH_MASK	derivative.h	14924;"	d
RTC_MCHR_MCH_SHIFT	derivative.h	14925;"	d
RTC_MCHR_REG	derivative.h	14809;"	d
RTC_MCLR	derivative.h	15011;"	d
RTC_MCLR_MCL	derivative.h	14922;"	d
RTC_MCLR_MCL_MASK	derivative.h	14920;"	d
RTC_MCLR_MCL_SHIFT	derivative.h	14921;"	d
RTC_MCLR_REG	derivative.h	14808;"	d
RTC_MER	derivative.h	15010;"	d
RTC_MER_MCE_MASK	derivative.h	14917;"	d
RTC_MER_MCE_SHIFT	derivative.h	14918;"	d
RTC_MER_REG	derivative.h	14807;"	d
RTC_MemMap	derivative.h	/^typedef struct RTC_MemMap {$/;"	s
RTC_MemMapPtr	derivative.h	/^} volatile *RTC_MemMapPtr;$/;"	t
RTC_RAR	derivative.h	15014;"	d
RTC_RAR_CRR_MASK	derivative.h	14961;"	d
RTC_RAR_CRR_SHIFT	derivative.h	14962;"	d
RTC_RAR_IERR_MASK	derivative.h	14967;"	d
RTC_RAR_IERR_SHIFT	derivative.h	14968;"	d
RTC_RAR_LRR_MASK	derivative.h	14965;"	d
RTC_RAR_LRR_SHIFT	derivative.h	14966;"	d
RTC_RAR_MCHR_MASK	derivative.h	14975;"	d
RTC_RAR_MCHR_SHIFT	derivative.h	14976;"	d
RTC_RAR_MCLR_MASK	derivative.h	14973;"	d
RTC_RAR_MCLR_SHIFT	derivative.h	14974;"	d
RTC_RAR_MERR_MASK	derivative.h	14971;"	d
RTC_RAR_MERR_SHIFT	derivative.h	14972;"	d
RTC_RAR_REG	derivative.h	14811;"	d
RTC_RAR_SRR_MASK	derivative.h	14963;"	d
RTC_RAR_SRR_SHIFT	derivative.h	14964;"	d
RTC_RAR_TARR_MASK	derivative.h	14957;"	d
RTC_RAR_TARR_SHIFT	derivative.h	14958;"	d
RTC_RAR_TCRR_MASK	derivative.h	14959;"	d
RTC_RAR_TCRR_SHIFT	derivative.h	14960;"	d
RTC_RAR_TPRR_MASK	derivative.h	14955;"	d
RTC_RAR_TPRR_SHIFT	derivative.h	14956;"	d
RTC_RAR_TSRR_MASK	derivative.h	14953;"	d
RTC_RAR_TSRR_SHIFT	derivative.h	14954;"	d
RTC_RAR_TTSR_MASK	derivative.h	14969;"	d
RTC_RAR_TTSR_SHIFT	derivative.h	14970;"	d
RTC_SR	derivative.h	15006;"	d
RTC_SR_MOF_MASK	derivative.h	14880;"	d
RTC_SR_MOF_SHIFT	derivative.h	14881;"	d
RTC_SR_REG	derivative.h	14803;"	d
RTC_SR_TAF_MASK	derivative.h	14878;"	d
RTC_SR_TAF_SHIFT	derivative.h	14879;"	d
RTC_SR_TCE_MASK	derivative.h	14882;"	d
RTC_SR_TCE_SHIFT	derivative.h	14883;"	d
RTC_SR_TIF_MASK	derivative.h	14874;"	d
RTC_SR_TIF_SHIFT	derivative.h	14875;"	d
RTC_SR_TOF_MASK	derivative.h	14876;"	d
RTC_SR_TOF_SHIFT	derivative.h	14877;"	d
RTC_TAR	derivative.h	15003;"	d
RTC_TAR_REG	derivative.h	14800;"	d
RTC_TAR_TAR	derivative.h	14838;"	d
RTC_TAR_TAR_MASK	derivative.h	14836;"	d
RTC_TAR_TAR_SHIFT	derivative.h	14837;"	d
RTC_TCR	derivative.h	15004;"	d
RTC_TCR_CIC	derivative.h	14851;"	d
RTC_TCR_CIC_MASK	derivative.h	14849;"	d
RTC_TCR_CIC_SHIFT	derivative.h	14850;"	d
RTC_TCR_CIR	derivative.h	14845;"	d
RTC_TCR_CIR_MASK	derivative.h	14843;"	d
RTC_TCR_CIR_SHIFT	derivative.h	14844;"	d
RTC_TCR_REG	derivative.h	14801;"	d
RTC_TCR_TCR	derivative.h	14842;"	d
RTC_TCR_TCR_MASK	derivative.h	14840;"	d
RTC_TCR_TCR_SHIFT	derivative.h	14841;"	d
RTC_TCR_TCV	derivative.h	14848;"	d
RTC_TCR_TCV_MASK	derivative.h	14846;"	d
RTC_TCR_TCV_SHIFT	derivative.h	14847;"	d
RTC_TPR	derivative.h	15002;"	d
RTC_TPR_REG	derivative.h	14799;"	d
RTC_TPR_TPR	derivative.h	14834;"	d
RTC_TPR_TPR_MASK	derivative.h	14832;"	d
RTC_TPR_TPR_SHIFT	derivative.h	14833;"	d
RTC_TSR	derivative.h	15001;"	d
RTC_TSR_REG	derivative.h	14798;"	d
RTC_TSR_TSR	derivative.h	14830;"	d
RTC_TSR_TSR_MASK	derivative.h	14828;"	d
RTC_TSR_TSR_SHIFT	derivative.h	14829;"	d
RTC_TTSR	derivative.h	15009;"	d
RTC_TTSR_REG	derivative.h	14806;"	d
RTC_TTSR_TTS	derivative.h	14915;"	d
RTC_TTSR_TTS_MASK	derivative.h	14913;"	d
RTC_TTSR_TTS_SHIFT	derivative.h	14914;"	d
RTC_WAR	derivative.h	15013;"	d
RTC_WAR_CRW_MASK	derivative.h	14936;"	d
RTC_WAR_CRW_SHIFT	derivative.h	14937;"	d
RTC_WAR_IERW_MASK	derivative.h	14942;"	d
RTC_WAR_IERW_SHIFT	derivative.h	14943;"	d
RTC_WAR_LRW_MASK	derivative.h	14940;"	d
RTC_WAR_LRW_SHIFT	derivative.h	14941;"	d
RTC_WAR_MCHW_MASK	derivative.h	14950;"	d
RTC_WAR_MCHW_SHIFT	derivative.h	14951;"	d
RTC_WAR_MCLW_MASK	derivative.h	14948;"	d
RTC_WAR_MCLW_SHIFT	derivative.h	14949;"	d
RTC_WAR_MERW_MASK	derivative.h	14946;"	d
RTC_WAR_MERW_SHIFT	derivative.h	14947;"	d
RTC_WAR_REG	derivative.h	14810;"	d
RTC_WAR_SRW_MASK	derivative.h	14938;"	d
RTC_WAR_SRW_SHIFT	derivative.h	14939;"	d
RTC_WAR_TARW_MASK	derivative.h	14932;"	d
RTC_WAR_TARW_SHIFT	derivative.h	14933;"	d
RTC_WAR_TCRW_MASK	derivative.h	14934;"	d
RTC_WAR_TCRW_SHIFT	derivative.h	14935;"	d
RTC_WAR_TPRW_MASK	derivative.h	14930;"	d
RTC_WAR_TPRW_SHIFT	derivative.h	14931;"	d
RTC_WAR_TSRW_MASK	derivative.h	14928;"	d
RTC_WAR_TSRW_SHIFT	derivative.h	14929;"	d
RTC_WAR_TTSW_MASK	derivative.h	14944;"	d
RTC_WAR_TTSW_SHIFT	derivative.h	14945;"	d
RVR	derivative.h	/^  uint32_t RVR;                                    \/**< SysTick Reload Value Register, offset: 0x4 *\/$/;"	m	struct:SysTick_MemMap
RWD	derivative.h	/^  uint32_t RWD;                                    \/**< RAM Write Data Register, offset: 0x24 *\/$/;"	m	struct:ETB_MemMap
RWFIFO	derivative.h	/^  uint8_t RWFIFO;                                  \/**< UART FIFO Receive Watermark, offset: 0x15 *\/$/;"	m	struct:UART_MemMap
RWP	derivative.h	/^  uint32_t RWP;                                    \/**< RAM Write Pointer Register, offset: 0x18 *\/$/;"	m	struct:ETB_MemMap
RX14MASK	derivative.h	/^  uint32_t RX14MASK;                               \/**< Rx 14 Mask Register, offset: 0x14 *\/$/;"	m	struct:CAN_MemMap
RX15MASK	derivative.h	/^  uint32_t RX15MASK;                               \/**< Rx 15 Mask Register, offset: 0x18 *\/$/;"	m	struct:CAN_MemMap
RXFGMASK	derivative.h	/^  uint32_t RXFGMASK;                               \/**< Rx FIFO Global Mask Register, offset: 0x48 *\/$/;"	m	struct:CAN_MemMap
RXFIR	derivative.h	/^  uint32_t RXFIR;                                  \/**< Rx FIFO Information Register, offset: 0x4C *\/$/;"	m	struct:CAN_MemMap
RXFR0	derivative.h	/^  uint32_t RXFR0;                                  \/**< DSPI Receive FIFO Registers, offset: 0x7C *\/$/;"	m	struct:SPI_MemMap
RXFR1	derivative.h	/^  uint32_t RXFR1;                                  \/**< DSPI Receive FIFO Registers, offset: 0x80 *\/$/;"	m	struct:SPI_MemMap
RXFR2	derivative.h	/^  uint32_t RXFR2;                                  \/**< DSPI Receive FIFO Registers, offset: 0x84 *\/$/;"	m	struct:SPI_MemMap
RXFR3	derivative.h	/^  uint32_t RXFR3;                                  \/**< DSPI Receive FIFO Registers, offset: 0x88 *\/$/;"	m	struct:SPI_MemMap
RXIMR	derivative.h	/^  uint32_t RXIMR[16];                              \/**< Rx Individual Mask Registers, array offset: 0x880, array step: 0x4 *\/$/;"	m	struct:CAN_MemMap
RXMGMASK	derivative.h	/^  uint32_t RXMGMASK;                               \/**< Rx Mailboxes Global Mask Register, offset: 0x10 *\/$/;"	m	struct:CAN_MemMap
S	derivative.h	/^    uint32_t S;                                      \/**< Channel n Status Register, array offset: 0x14, array step: 0x28 *\/$/;"	m	struct:PDB_MemMap::__anon26
S	derivative.h	/^  uint8_t S;                                       \/**< I2C Status Register, offset: 0x3 *\/$/;"	m	struct:I2C_MemMap
S	derivative.h	/^  uint8_t S;                                       \/**< MCG Status Register, offset: 0x6 *\/$/;"	m	struct:MCG_MemMap
S1	derivative.h	/^  uint8_t S1;                                      \/**< UART Status Register 1, offset: 0x4 *\/$/;"	m	struct:UART_MemMap
S2	derivative.h	/^  uint8_t S2;                                      \/**< MCG Status 2 Register, offset: 0x12 *\/$/;"	m	struct:MCG_MemMap
S2	derivative.h	/^  uint8_t S2;                                      \/**< UART Status Register 2, offset: 0x5 *\/$/;"	m	struct:UART_MemMap
S3	derivative.h	/^  uint8_t S3;                                      \/**< UART CEA709.1-B Status Register, offset: 0x2B *\/$/;"	m	struct:UART_MemMap
S4	derivative.h	/^  uint8_t S4;                                      \/**< UART CEA709.1-B Status Register, offset: 0x2C *\/$/;"	m	struct:UART_MemMap
SADDR	derivative.h	/^    uint32_t SADDR;                                  \/**< TCD Source Address, array offset: 0x1000, array step: 0x20 *\/$/;"	m	struct:DMA_MemMap::__anon15
SC	derivative.h	/^  uint32_t SC;                                     \/**< Status and Control Register, offset: 0x0 *\/$/;"	m	struct:PDB_MemMap
SC	derivative.h	/^  uint32_t SC;                                     \/**< Status and Control, offset: 0x0 *\/$/;"	m	struct:FTM_MemMap
SC	derivative.h	/^  uint8_t SC;                                      \/**< MCG Status and Control Register, offset: 0x8 *\/$/;"	m	struct:MCG_MemMap
SC	derivative.h	/^  uint8_t SC;                                      \/**< VREF Status and Control Register, offset: 0x1 *\/$/;"	m	struct:VREF_MemMap
SC1	derivative.h	/^  uint32_t SC1[2];                                 \/**< ADC status and control registers 1, array offset: 0x0, array step: 0x4 *\/$/;"	m	struct:ADC_MemMap
SC2	derivative.h	/^  uint32_t SC2;                                    \/**< Status and control register 2, offset: 0x20 *\/$/;"	m	struct:ADC_MemMap
SC3	derivative.h	/^  uint32_t SC3;                                    \/**< Status and control register 3, offset: 0x24 *\/$/;"	m	struct:ADC_MemMap
SCANC	derivative.h	/^  uint32_t SCANC;                                  \/**< SCAN Control Register, offset: 0x4 *\/$/;"	m	struct:TSI_MemMap
SCB_ACTLR	derivative.h	15336;"	d
SCB_ACTLR_DISDEFWBUF_MASK	derivative.h	15107;"	d
SCB_ACTLR_DISDEFWBUF_SHIFT	derivative.h	15108;"	d
SCB_ACTLR_DISFOLD_MASK	derivative.h	15109;"	d
SCB_ACTLR_DISFOLD_SHIFT	derivative.h	15110;"	d
SCB_ACTLR_DISMCYCINT_MASK	derivative.h	15105;"	d
SCB_ACTLR_DISMCYCINT_SHIFT	derivative.h	15106;"	d
SCB_ACTLR_REG	derivative.h	15071;"	d
SCB_AFSR	derivative.h	15352;"	d
SCB_AFSR_AUXFAULT	derivative.h	15304;"	d
SCB_AFSR_AUXFAULT_MASK	derivative.h	15302;"	d
SCB_AFSR_AUXFAULT_SHIFT	derivative.h	15303;"	d
SCB_AFSR_REG	derivative.h	15087;"	d
SCB_AIRCR	derivative.h	15340;"	d
SCB_AIRCR_ENDIANNESS_MASK	derivative.h	15161;"	d
SCB_AIRCR_ENDIANNESS_SHIFT	derivative.h	15162;"	d
SCB_AIRCR_PRIGROUP	derivative.h	15160;"	d
SCB_AIRCR_PRIGROUP_MASK	derivative.h	15158;"	d
SCB_AIRCR_PRIGROUP_SHIFT	derivative.h	15159;"	d
SCB_AIRCR_REG	derivative.h	15075;"	d
SCB_AIRCR_SYSRESETREQ_MASK	derivative.h	15156;"	d
SCB_AIRCR_SYSRESETREQ_SHIFT	derivative.h	15157;"	d
SCB_AIRCR_VECTCLRACTIVE_MASK	derivative.h	15154;"	d
SCB_AIRCR_VECTCLRACTIVE_SHIFT	derivative.h	15155;"	d
SCB_AIRCR_VECTKEY	derivative.h	15165;"	d
SCB_AIRCR_VECTKEY_MASK	derivative.h	15163;"	d
SCB_AIRCR_VECTKEY_SHIFT	derivative.h	15164;"	d
SCB_AIRCR_VECTRESET_MASK	derivative.h	15152;"	d
SCB_AIRCR_VECTRESET_SHIFT	derivative.h	15153;"	d
SCB_BASE_PTRS	derivative.h	15322;"	d
SCB_BFAR	derivative.h	15351;"	d
SCB_BFAR_ADDRESS	derivative.h	15300;"	d
SCB_BFAR_ADDRESS_MASK	derivative.h	15298;"	d
SCB_BFAR_ADDRESS_SHIFT	derivative.h	15299;"	d
SCB_BFAR_REG	derivative.h	15086;"	d
SCB_CCR	derivative.h	15342;"	d
SCB_CCR_BFHFNMIGN_MASK	derivative.h	15182;"	d
SCB_CCR_BFHFNMIGN_SHIFT	derivative.h	15183;"	d
SCB_CCR_DIV_0_TRP_MASK	derivative.h	15180;"	d
SCB_CCR_DIV_0_TRP_SHIFT	derivative.h	15181;"	d
SCB_CCR_NONBASETHRDENA_MASK	derivative.h	15174;"	d
SCB_CCR_NONBASETHRDENA_SHIFT	derivative.h	15175;"	d
SCB_CCR_REG	derivative.h	15077;"	d
SCB_CCR_STKALIGN_MASK	derivative.h	15184;"	d
SCB_CCR_STKALIGN_SHIFT	derivative.h	15185;"	d
SCB_CCR_UNALIGN_TRP_MASK	derivative.h	15178;"	d
SCB_CCR_UNALIGN_TRP_SHIFT	derivative.h	15179;"	d
SCB_CCR_USERSETMPEND_MASK	derivative.h	15176;"	d
SCB_CCR_USERSETMPEND_SHIFT	derivative.h	15177;"	d
SCB_CFSR	derivative.h	15347;"	d
SCB_CFSR_BFARVALID_MASK	derivative.h	15261;"	d
SCB_CFSR_BFARVALID_SHIFT	derivative.h	15262;"	d
SCB_CFSR_DACCVIOL_MASK	derivative.h	15239;"	d
SCB_CFSR_DACCVIOL_SHIFT	derivative.h	15240;"	d
SCB_CFSR_DIVBYZERO_MASK	derivative.h	15273;"	d
SCB_CFSR_DIVBYZERO_SHIFT	derivative.h	15274;"	d
SCB_CFSR_IACCVIOL_MASK	derivative.h	15237;"	d
SCB_CFSR_IACCVIOL_SHIFT	derivative.h	15238;"	d
SCB_CFSR_IBUSERR_MASK	derivative.h	15249;"	d
SCB_CFSR_IBUSERR_SHIFT	derivative.h	15250;"	d
SCB_CFSR_IMPRECISERR_MASK	derivative.h	15253;"	d
SCB_CFSR_IMPRECISERR_SHIFT	derivative.h	15254;"	d
SCB_CFSR_INVPC_MASK	derivative.h	15267;"	d
SCB_CFSR_INVPC_SHIFT	derivative.h	15268;"	d
SCB_CFSR_INVSTATE_MASK	derivative.h	15265;"	d
SCB_CFSR_INVSTATE_SHIFT	derivative.h	15266;"	d
SCB_CFSR_LSPERR_MASK	derivative.h	15259;"	d
SCB_CFSR_LSPERR_SHIFT	derivative.h	15260;"	d
SCB_CFSR_MLSPERR_MASK	derivative.h	15245;"	d
SCB_CFSR_MLSPERR_SHIFT	derivative.h	15246;"	d
SCB_CFSR_MMARVALID_MASK	derivative.h	15247;"	d
SCB_CFSR_MMARVALID_SHIFT	derivative.h	15248;"	d
SCB_CFSR_MSTKERR_MASK	derivative.h	15243;"	d
SCB_CFSR_MSTKERR_SHIFT	derivative.h	15244;"	d
SCB_CFSR_MUNSTKERR_MASK	derivative.h	15241;"	d
SCB_CFSR_MUNSTKERR_SHIFT	derivative.h	15242;"	d
SCB_CFSR_NOCP_MASK	derivative.h	15269;"	d
SCB_CFSR_NOCP_SHIFT	derivative.h	15270;"	d
SCB_CFSR_PRECISERR_MASK	derivative.h	15251;"	d
SCB_CFSR_PRECISERR_SHIFT	derivative.h	15252;"	d
SCB_CFSR_REG	derivative.h	15082;"	d
SCB_CFSR_STKERR_MASK	derivative.h	15257;"	d
SCB_CFSR_STKERR_SHIFT	derivative.h	15258;"	d
SCB_CFSR_UNALIGNED_MASK	derivative.h	15271;"	d
SCB_CFSR_UNALIGNED_SHIFT	derivative.h	15272;"	d
SCB_CFSR_UNDEFINSTR_MASK	derivative.h	15263;"	d
SCB_CFSR_UNDEFINSTR_SHIFT	derivative.h	15264;"	d
SCB_CFSR_UNSTKERR_MASK	derivative.h	15255;"	d
SCB_CFSR_UNSTKERR_SHIFT	derivative.h	15256;"	d
SCB_CPACR	derivative.h	15353;"	d
SCB_CPACR_CP10	derivative.h	15308;"	d
SCB_CPACR_CP10_MASK	derivative.h	15306;"	d
SCB_CPACR_CP10_SHIFT	derivative.h	15307;"	d
SCB_CPACR_CP11	derivative.h	15311;"	d
SCB_CPACR_CP11_MASK	derivative.h	15309;"	d
SCB_CPACR_CP11_SHIFT	derivative.h	15310;"	d
SCB_CPACR_REG	derivative.h	15088;"	d
SCB_CPUID	derivative.h	15337;"	d
SCB_CPUID_IMPLEMENTER	derivative.h	15123;"	d
SCB_CPUID_IMPLEMENTER_MASK	derivative.h	15121;"	d
SCB_CPUID_IMPLEMENTER_SHIFT	derivative.h	15122;"	d
SCB_CPUID_PARTNO	derivative.h	15117;"	d
SCB_CPUID_PARTNO_MASK	derivative.h	15115;"	d
SCB_CPUID_PARTNO_SHIFT	derivative.h	15116;"	d
SCB_CPUID_REG	derivative.h	15072;"	d
SCB_CPUID_REVISION	derivative.h	15114;"	d
SCB_CPUID_REVISION_MASK	derivative.h	15112;"	d
SCB_CPUID_REVISION_SHIFT	derivative.h	15113;"	d
SCB_CPUID_VARIANT	derivative.h	15120;"	d
SCB_CPUID_VARIANT_MASK	derivative.h	15118;"	d
SCB_CPUID_VARIANT_SHIFT	derivative.h	15119;"	d
SCB_DFSR	derivative.h	15349;"	d
SCB_DFSR_BKPT_MASK	derivative.h	15285;"	d
SCB_DFSR_BKPT_SHIFT	derivative.h	15286;"	d
SCB_DFSR_DWTTRAP_MASK	derivative.h	15287;"	d
SCB_DFSR_DWTTRAP_SHIFT	derivative.h	15288;"	d
SCB_DFSR_EXTERNAL_MASK	derivative.h	15291;"	d
SCB_DFSR_EXTERNAL_SHIFT	derivative.h	15292;"	d
SCB_DFSR_HALTED_MASK	derivative.h	15283;"	d
SCB_DFSR_HALTED_SHIFT	derivative.h	15284;"	d
SCB_DFSR_REG	derivative.h	15084;"	d
SCB_DFSR_VCATCH_MASK	derivative.h	15289;"	d
SCB_DFSR_VCATCH_SHIFT	derivative.h	15290;"	d
SCB_HFSR	derivative.h	15348;"	d
SCB_HFSR_DEBUGEVT_MASK	derivative.h	15280;"	d
SCB_HFSR_DEBUGEVT_SHIFT	derivative.h	15281;"	d
SCB_HFSR_FORCED_MASK	derivative.h	15278;"	d
SCB_HFSR_FORCED_SHIFT	derivative.h	15279;"	d
SCB_HFSR_REG	derivative.h	15083;"	d
SCB_HFSR_VECTTBL_MASK	derivative.h	15276;"	d
SCB_HFSR_VECTTBL_SHIFT	derivative.h	15277;"	d
SCB_ICSR	derivative.h	15338;"	d
SCB_ICSR_ISRPENDING_MASK	derivative.h	15133;"	d
SCB_ICSR_ISRPENDING_SHIFT	derivative.h	15134;"	d
SCB_ICSR_ISRPREEMPT_MASK	derivative.h	15135;"	d
SCB_ICSR_ISRPREEMPT_SHIFT	derivative.h	15136;"	d
SCB_ICSR_NMIPENDSET_MASK	derivative.h	15145;"	d
SCB_ICSR_NMIPENDSET_SHIFT	derivative.h	15146;"	d
SCB_ICSR_PENDSTCLR_MASK	derivative.h	15137;"	d
SCB_ICSR_PENDSTCLR_SHIFT	derivative.h	15138;"	d
SCB_ICSR_PENDSTSET_MASK	derivative.h	15139;"	d
SCB_ICSR_PENDSTSET_SHIFT	derivative.h	15140;"	d
SCB_ICSR_PENDSVCLR_MASK	derivative.h	15141;"	d
SCB_ICSR_PENDSVCLR_SHIFT	derivative.h	15142;"	d
SCB_ICSR_PENDSVSET_MASK	derivative.h	15143;"	d
SCB_ICSR_PENDSVSET_SHIFT	derivative.h	15144;"	d
SCB_ICSR_REG	derivative.h	15073;"	d
SCB_ICSR_RETTOBASE_MASK	derivative.h	15128;"	d
SCB_ICSR_RETTOBASE_SHIFT	derivative.h	15129;"	d
SCB_ICSR_VECTACTIVE	derivative.h	15127;"	d
SCB_ICSR_VECTACTIVE_MASK	derivative.h	15125;"	d
SCB_ICSR_VECTACTIVE_SHIFT	derivative.h	15126;"	d
SCB_ICSR_VECTPENDING	derivative.h	15132;"	d
SCB_ICSR_VECTPENDING_MASK	derivative.h	15130;"	d
SCB_ICSR_VECTPENDING_SHIFT	derivative.h	15131;"	d
SCB_MMFAR	derivative.h	15350;"	d
SCB_MMFAR_ADDRESS	derivative.h	15296;"	d
SCB_MMFAR_ADDRESS_MASK	derivative.h	15294;"	d
SCB_MMFAR_ADDRESS_SHIFT	derivative.h	15295;"	d
SCB_MMFAR_REG	derivative.h	15085;"	d
SCB_MemMap	derivative.h	/^typedef struct SCB_MemMap {$/;"	s
SCB_MemMapPtr	derivative.h	/^} volatile *SCB_MemMapPtr;$/;"	t
SCB_SCR	derivative.h	15341;"	d
SCB_SCR_REG	derivative.h	15076;"	d
SCB_SCR_SEVONPEND_MASK	derivative.h	15171;"	d
SCB_SCR_SEVONPEND_SHIFT	derivative.h	15172;"	d
SCB_SCR_SLEEPDEEP_MASK	derivative.h	15169;"	d
SCB_SCR_SLEEPDEEP_SHIFT	derivative.h	15170;"	d
SCB_SCR_SLEEPONEXIT_MASK	derivative.h	15167;"	d
SCB_SCR_SLEEPONEXIT_SHIFT	derivative.h	15168;"	d
SCB_SHCSR	derivative.h	15346;"	d
SCB_SHCSR_BUSFAULTACT_MASK	derivative.h	15210;"	d
SCB_SHCSR_BUSFAULTACT_SHIFT	derivative.h	15211;"	d
SCB_SHCSR_BUSFAULTENA_MASK	derivative.h	15232;"	d
SCB_SHCSR_BUSFAULTENA_SHIFT	derivative.h	15233;"	d
SCB_SHCSR_BUSFAULTPENDED_MASK	derivative.h	15226;"	d
SCB_SHCSR_BUSFAULTPENDED_SHIFT	derivative.h	15227;"	d
SCB_SHCSR_MEMFAULTACT_MASK	derivative.h	15208;"	d
SCB_SHCSR_MEMFAULTACT_SHIFT	derivative.h	15209;"	d
SCB_SHCSR_MEMFAULTENA_MASK	derivative.h	15230;"	d
SCB_SHCSR_MEMFAULTENA_SHIFT	derivative.h	15231;"	d
SCB_SHCSR_MEMFAULTPENDED_MASK	derivative.h	15224;"	d
SCB_SHCSR_MEMFAULTPENDED_SHIFT	derivative.h	15225;"	d
SCB_SHCSR_MONITORACT_MASK	derivative.h	15216;"	d
SCB_SHCSR_MONITORACT_SHIFT	derivative.h	15217;"	d
SCB_SHCSR_PENDSVACT_MASK	derivative.h	15218;"	d
SCB_SHCSR_PENDSVACT_SHIFT	derivative.h	15219;"	d
SCB_SHCSR_REG	derivative.h	15081;"	d
SCB_SHCSR_SVCALLACT_MASK	derivative.h	15214;"	d
SCB_SHCSR_SVCALLACT_SHIFT	derivative.h	15215;"	d
SCB_SHCSR_SVCALLPENDED_MASK	derivative.h	15228;"	d
SCB_SHCSR_SVCALLPENDED_SHIFT	derivative.h	15229;"	d
SCB_SHCSR_SYSTICKACT_MASK	derivative.h	15220;"	d
SCB_SHCSR_SYSTICKACT_SHIFT	derivative.h	15221;"	d
SCB_SHCSR_USGFAULTACT_MASK	derivative.h	15212;"	d
SCB_SHCSR_USGFAULTACT_SHIFT	derivative.h	15213;"	d
SCB_SHCSR_USGFAULTENA_MASK	derivative.h	15234;"	d
SCB_SHCSR_USGFAULTENA_SHIFT	derivative.h	15235;"	d
SCB_SHCSR_USGFAULTPENDED_MASK	derivative.h	15222;"	d
SCB_SHCSR_USGFAULTPENDED_SHIFT	derivative.h	15223;"	d
SCB_SHPR1	derivative.h	15343;"	d
SCB_SHPR1_PRI_4	derivative.h	15189;"	d
SCB_SHPR1_PRI_4_MASK	derivative.h	15187;"	d
SCB_SHPR1_PRI_4_SHIFT	derivative.h	15188;"	d
SCB_SHPR1_PRI_5	derivative.h	15192;"	d
SCB_SHPR1_PRI_5_MASK	derivative.h	15190;"	d
SCB_SHPR1_PRI_5_SHIFT	derivative.h	15191;"	d
SCB_SHPR1_PRI_6	derivative.h	15195;"	d
SCB_SHPR1_PRI_6_MASK	derivative.h	15193;"	d
SCB_SHPR1_PRI_6_SHIFT	derivative.h	15194;"	d
SCB_SHPR1_REG	derivative.h	15078;"	d
SCB_SHPR2	derivative.h	15344;"	d
SCB_SHPR2_PRI_11	derivative.h	15199;"	d
SCB_SHPR2_PRI_11_MASK	derivative.h	15197;"	d
SCB_SHPR2_PRI_11_SHIFT	derivative.h	15198;"	d
SCB_SHPR2_REG	derivative.h	15079;"	d
SCB_SHPR3	derivative.h	15345;"	d
SCB_SHPR3_PRI_14	derivative.h	15203;"	d
SCB_SHPR3_PRI_14_MASK	derivative.h	15201;"	d
SCB_SHPR3_PRI_14_SHIFT	derivative.h	15202;"	d
SCB_SHPR3_PRI_15	derivative.h	15206;"	d
SCB_SHPR3_PRI_15_MASK	derivative.h	15204;"	d
SCB_SHPR3_PRI_15_SHIFT	derivative.h	15205;"	d
SCB_SHPR3_REG	derivative.h	15080;"	d
SCB_VTOR	derivative.h	15339;"	d
SCB_VTOR_REG	derivative.h	15074;"	d
SCB_VTOR_TBLOFF	derivative.h	15150;"	d
SCB_VTOR_TBLOFF_MASK	derivative.h	15148;"	d
SCB_VTOR_TBLOFF_SHIFT	derivative.h	15149;"	d
SCGC1	derivative.h	/^  uint32_t SCGC1;                                  \/**< System Clock Gating Control Register 1, offset: 0x1028 *\/$/;"	m	struct:SIM_MemMap
SCGC2	derivative.h	/^  uint32_t SCGC2;                                  \/**< System Clock Gating Control Register 2, offset: 0x102C *\/$/;"	m	struct:SIM_MemMap
SCGC3	derivative.h	/^  uint32_t SCGC3;                                  \/**< System Clock Gating Control Register 3, offset: 0x1030 *\/$/;"	m	struct:SIM_MemMap
SCGC4	derivative.h	/^  uint32_t SCGC4;                                  \/**< System Clock Gating Control Register 4, offset: 0x1034 *\/$/;"	m	struct:SIM_MemMap
SCGC5	derivative.h	/^  uint32_t SCGC5;                                  \/**< System Clock Gating Control Register 5, offset: 0x1038 *\/$/;"	m	struct:SIM_MemMap
SCGC6	derivative.h	/^  uint32_t SCGC6;                                  \/**< System Clock Gating Control Register 6, offset: 0x103C *\/$/;"	m	struct:SIM_MemMap
SCGC7	derivative.h	/^  uint32_t SCGC7;                                  \/**< System Clock Gating Control Register 7, offset: 0x1040 *\/$/;"	m	struct:SIM_MemMap
SCR	derivative.h	/^  uint32_t SCR;                                    \/**< System Configuration Register, offset: 0x14 *\/$/;"	m	struct:ETM_MemMap
SCR	derivative.h	/^  uint32_t SCR;                                    \/**< System Control Register, offset: 0xD10 *\/$/;"	m	struct:SCB_MemMap
SCR	derivative.h	/^  uint8_t SCR;                                     \/**< CMP Status and Control Register, offset: 0x3 *\/$/;"	m	struct:CMP_MemMap
SDHC_AC12ERR	derivative.h	15863;"	d
SDHC_AC12ERR_AC12CE_MASK	derivative.h	15715;"	d
SDHC_AC12ERR_AC12CE_SHIFT	derivative.h	15716;"	d
SDHC_AC12ERR_AC12EBE_MASK	derivative.h	15713;"	d
SDHC_AC12ERR_AC12EBE_SHIFT	derivative.h	15714;"	d
SDHC_AC12ERR_AC12IE_MASK	derivative.h	15717;"	d
SDHC_AC12ERR_AC12IE_SHIFT	derivative.h	15718;"	d
SDHC_AC12ERR_AC12NE_MASK	derivative.h	15709;"	d
SDHC_AC12ERR_AC12NE_SHIFT	derivative.h	15710;"	d
SDHC_AC12ERR_AC12TOE_MASK	derivative.h	15711;"	d
SDHC_AC12ERR_AC12TOE_SHIFT	derivative.h	15712;"	d
SDHC_AC12ERR_CNIBAC12E_MASK	derivative.h	15719;"	d
SDHC_AC12ERR_CNIBAC12E_SHIFT	derivative.h	15720;"	d
SDHC_AC12ERR_REG	derivative.h	15425;"	d
SDHC_ADMAES	derivative.h	15867;"	d
SDHC_ADMAES_ADMADCE_MASK	derivative.h	15788;"	d
SDHC_ADMAES_ADMADCE_SHIFT	derivative.h	15789;"	d
SDHC_ADMAES_ADMAES	derivative.h	15785;"	d
SDHC_ADMAES_ADMAES_MASK	derivative.h	15783;"	d
SDHC_ADMAES_ADMAES_SHIFT	derivative.h	15784;"	d
SDHC_ADMAES_ADMALME_MASK	derivative.h	15786;"	d
SDHC_ADMAES_ADMALME_SHIFT	derivative.h	15787;"	d
SDHC_ADMAES_REG	derivative.h	15429;"	d
SDHC_ADSADDR	derivative.h	15868;"	d
SDHC_ADSADDR_ADSADDR	derivative.h	15793;"	d
SDHC_ADSADDR_ADSADDR_MASK	derivative.h	15791;"	d
SDHC_ADSADDR_ADSADDR_SHIFT	derivative.h	15792;"	d
SDHC_ADSADDR_REG	derivative.h	15430;"	d
SDHC_BASE_PTR	derivative.h	15832;"	d
SDHC_BASE_PTRS	derivative.h	15834;"	d
SDHC_BLKATTR	derivative.h	15849;"	d
SDHC_BLKATTR_BLKCNT	derivative.h	15459;"	d
SDHC_BLKATTR_BLKCNT_MASK	derivative.h	15457;"	d
SDHC_BLKATTR_BLKCNT_SHIFT	derivative.h	15458;"	d
SDHC_BLKATTR_BLKSIZE	derivative.h	15456;"	d
SDHC_BLKATTR_BLKSIZE_MASK	derivative.h	15454;"	d
SDHC_BLKATTR_BLKSIZE_SHIFT	derivative.h	15455;"	d
SDHC_BLKATTR_REG	derivative.h	15414;"	d
SDHC_CMDARG	derivative.h	15850;"	d
SDHC_CMDARG_CMDARG	derivative.h	15463;"	d
SDHC_CMDARG_CMDARG_MASK	derivative.h	15461;"	d
SDHC_CMDARG_CMDARG_SHIFT	derivative.h	15462;"	d
SDHC_CMDARG_REG	derivative.h	15415;"	d
SDHC_CMDRSP	derivative.h	15874;"	d
SDHC_CMDRSP0	derivative.h	15852;"	d
SDHC_CMDRSP1	derivative.h	15853;"	d
SDHC_CMDRSP2	derivative.h	15854;"	d
SDHC_CMDRSP3	derivative.h	15855;"	d
SDHC_CMDRSP_CMDRSP0	derivative.h	15493;"	d
SDHC_CMDRSP_CMDRSP0_MASK	derivative.h	15491;"	d
SDHC_CMDRSP_CMDRSP0_SHIFT	derivative.h	15492;"	d
SDHC_CMDRSP_CMDRSP1	derivative.h	15496;"	d
SDHC_CMDRSP_CMDRSP1_MASK	derivative.h	15494;"	d
SDHC_CMDRSP_CMDRSP1_SHIFT	derivative.h	15495;"	d
SDHC_CMDRSP_CMDRSP2	derivative.h	15499;"	d
SDHC_CMDRSP_CMDRSP2_MASK	derivative.h	15497;"	d
SDHC_CMDRSP_CMDRSP2_SHIFT	derivative.h	15498;"	d
SDHC_CMDRSP_CMDRSP3	derivative.h	15502;"	d
SDHC_CMDRSP_CMDRSP3_MASK	derivative.h	15500;"	d
SDHC_CMDRSP_CMDRSP3_SHIFT	derivative.h	15501;"	d
SDHC_CMDRSP_REG	derivative.h	15417;"	d
SDHC_DATPORT	derivative.h	15856;"	d
SDHC_DATPORT_DATCONT	derivative.h	15506;"	d
SDHC_DATPORT_DATCONT_MASK	derivative.h	15504;"	d
SDHC_DATPORT_DATCONT_SHIFT	derivative.h	15505;"	d
SDHC_DATPORT_REG	derivative.h	15418;"	d
SDHC_DSADDR	derivative.h	15848;"	d
SDHC_DSADDR_DSADDR	derivative.h	15452;"	d
SDHC_DSADDR_DSADDR_MASK	derivative.h	15450;"	d
SDHC_DSADDR_DSADDR_SHIFT	derivative.h	15451;"	d
SDHC_DSADDR_REG	derivative.h	15413;"	d
SDHC_FEVT	derivative.h	15866;"	d
SDHC_FEVT_AC12CE_MASK	derivative.h	15754;"	d
SDHC_FEVT_AC12CE_SHIFT	derivative.h	15755;"	d
SDHC_FEVT_AC12EBE_MASK	derivative.h	15756;"	d
SDHC_FEVT_AC12EBE_SHIFT	derivative.h	15757;"	d
SDHC_FEVT_AC12E_MASK	derivative.h	15776;"	d
SDHC_FEVT_AC12E_SHIFT	derivative.h	15777;"	d
SDHC_FEVT_AC12IE_MASK	derivative.h	15758;"	d
SDHC_FEVT_AC12IE_SHIFT	derivative.h	15759;"	d
SDHC_FEVT_AC12NE_MASK	derivative.h	15750;"	d
SDHC_FEVT_AC12NE_SHIFT	derivative.h	15751;"	d
SDHC_FEVT_AC12TOE_MASK	derivative.h	15752;"	d
SDHC_FEVT_AC12TOE_SHIFT	derivative.h	15753;"	d
SDHC_FEVT_CCE_MASK	derivative.h	15764;"	d
SDHC_FEVT_CCE_SHIFT	derivative.h	15765;"	d
SDHC_FEVT_CEBE_MASK	derivative.h	15766;"	d
SDHC_FEVT_CEBE_SHIFT	derivative.h	15767;"	d
SDHC_FEVT_CIE_MASK	derivative.h	15768;"	d
SDHC_FEVT_CIE_SHIFT	derivative.h	15769;"	d
SDHC_FEVT_CINT_MASK	derivative.h	15780;"	d
SDHC_FEVT_CINT_SHIFT	derivative.h	15781;"	d
SDHC_FEVT_CNIBAC12E_MASK	derivative.h	15760;"	d
SDHC_FEVT_CNIBAC12E_SHIFT	derivative.h	15761;"	d
SDHC_FEVT_CTOE_MASK	derivative.h	15762;"	d
SDHC_FEVT_CTOE_SHIFT	derivative.h	15763;"	d
SDHC_FEVT_DCE_MASK	derivative.h	15772;"	d
SDHC_FEVT_DCE_SHIFT	derivative.h	15773;"	d
SDHC_FEVT_DEBE_MASK	derivative.h	15774;"	d
SDHC_FEVT_DEBE_SHIFT	derivative.h	15775;"	d
SDHC_FEVT_DMAE_MASK	derivative.h	15778;"	d
SDHC_FEVT_DMAE_SHIFT	derivative.h	15779;"	d
SDHC_FEVT_DTOE_MASK	derivative.h	15770;"	d
SDHC_FEVT_DTOE_SHIFT	derivative.h	15771;"	d
SDHC_FEVT_REG	derivative.h	15428;"	d
SDHC_HOSTVER	derivative.h	15871;"	d
SDHC_HOSTVER_REG	derivative.h	15433;"	d
SDHC_HOSTVER_SVN	derivative.h	15820;"	d
SDHC_HOSTVER_SVN_MASK	derivative.h	15818;"	d
SDHC_HOSTVER_SVN_SHIFT	derivative.h	15819;"	d
SDHC_HOSTVER_VVN	derivative.h	15823;"	d
SDHC_HOSTVER_VVN_MASK	derivative.h	15821;"	d
SDHC_HOSTVER_VVN_SHIFT	derivative.h	15822;"	d
SDHC_HTCAPBLT	derivative.h	15864;"	d
SDHC_HTCAPBLT_ADMAS_MASK	derivative.h	15725;"	d
SDHC_HTCAPBLT_ADMAS_SHIFT	derivative.h	15726;"	d
SDHC_HTCAPBLT_DMAS_MASK	derivative.h	15729;"	d
SDHC_HTCAPBLT_DMAS_SHIFT	derivative.h	15730;"	d
SDHC_HTCAPBLT_HSS_MASK	derivative.h	15727;"	d
SDHC_HTCAPBLT_HSS_SHIFT	derivative.h	15728;"	d
SDHC_HTCAPBLT_MBL	derivative.h	15724;"	d
SDHC_HTCAPBLT_MBL_MASK	derivative.h	15722;"	d
SDHC_HTCAPBLT_MBL_SHIFT	derivative.h	15723;"	d
SDHC_HTCAPBLT_REG	derivative.h	15426;"	d
SDHC_HTCAPBLT_SRS_MASK	derivative.h	15731;"	d
SDHC_HTCAPBLT_SRS_SHIFT	derivative.h	15732;"	d
SDHC_HTCAPBLT_VS18_MASK	derivative.h	15737;"	d
SDHC_HTCAPBLT_VS18_SHIFT	derivative.h	15738;"	d
SDHC_HTCAPBLT_VS30_MASK	derivative.h	15735;"	d
SDHC_HTCAPBLT_VS30_SHIFT	derivative.h	15736;"	d
SDHC_HTCAPBLT_VS33_MASK	derivative.h	15733;"	d
SDHC_HTCAPBLT_VS33_SHIFT	derivative.h	15734;"	d
SDHC_IRQSIGEN	derivative.h	15862;"	d
SDHC_IRQSIGEN_AC12EIEN_MASK	derivative.h	15704;"	d
SDHC_IRQSIGEN_AC12EIEN_SHIFT	derivative.h	15705;"	d
SDHC_IRQSIGEN_BGEIEN_MASK	derivative.h	15676;"	d
SDHC_IRQSIGEN_BGEIEN_SHIFT	derivative.h	15677;"	d
SDHC_IRQSIGEN_BRRIEN_MASK	derivative.h	15682;"	d
SDHC_IRQSIGEN_BRRIEN_SHIFT	derivative.h	15683;"	d
SDHC_IRQSIGEN_BWRIEN_MASK	derivative.h	15680;"	d
SDHC_IRQSIGEN_BWRIEN_SHIFT	derivative.h	15681;"	d
SDHC_IRQSIGEN_CCEIEN_MASK	derivative.h	15692;"	d
SDHC_IRQSIGEN_CCEIEN_SHIFT	derivative.h	15693;"	d
SDHC_IRQSIGEN_CCIEN_MASK	derivative.h	15672;"	d
SDHC_IRQSIGEN_CCIEN_SHIFT	derivative.h	15673;"	d
SDHC_IRQSIGEN_CEBEIEN_MASK	derivative.h	15694;"	d
SDHC_IRQSIGEN_CEBEIEN_SHIFT	derivative.h	15695;"	d
SDHC_IRQSIGEN_CIEIEN_MASK	derivative.h	15696;"	d
SDHC_IRQSIGEN_CIEIEN_SHIFT	derivative.h	15697;"	d
SDHC_IRQSIGEN_CINSIEN_MASK	derivative.h	15684;"	d
SDHC_IRQSIGEN_CINSIEN_SHIFT	derivative.h	15685;"	d
SDHC_IRQSIGEN_CINTIEN_MASK	derivative.h	15688;"	d
SDHC_IRQSIGEN_CINTIEN_SHIFT	derivative.h	15689;"	d
SDHC_IRQSIGEN_CRMIEN_MASK	derivative.h	15686;"	d
SDHC_IRQSIGEN_CRMIEN_SHIFT	derivative.h	15687;"	d
SDHC_IRQSIGEN_CTOEIEN_MASK	derivative.h	15690;"	d
SDHC_IRQSIGEN_CTOEIEN_SHIFT	derivative.h	15691;"	d
SDHC_IRQSIGEN_DCEIEN_MASK	derivative.h	15700;"	d
SDHC_IRQSIGEN_DCEIEN_SHIFT	derivative.h	15701;"	d
SDHC_IRQSIGEN_DEBEIEN_MASK	derivative.h	15702;"	d
SDHC_IRQSIGEN_DEBEIEN_SHIFT	derivative.h	15703;"	d
SDHC_IRQSIGEN_DINTIEN_MASK	derivative.h	15678;"	d
SDHC_IRQSIGEN_DINTIEN_SHIFT	derivative.h	15679;"	d
SDHC_IRQSIGEN_DMAEIEN_MASK	derivative.h	15706;"	d
SDHC_IRQSIGEN_DMAEIEN_SHIFT	derivative.h	15707;"	d
SDHC_IRQSIGEN_DTOEIEN_MASK	derivative.h	15698;"	d
SDHC_IRQSIGEN_DTOEIEN_SHIFT	derivative.h	15699;"	d
SDHC_IRQSIGEN_REG	derivative.h	15424;"	d
SDHC_IRQSIGEN_TCIEN_MASK	derivative.h	15674;"	d
SDHC_IRQSIGEN_TCIEN_SHIFT	derivative.h	15675;"	d
SDHC_IRQSTAT	derivative.h	15860;"	d
SDHC_IRQSTATEN	derivative.h	15861;"	d
SDHC_IRQSTATEN_AC12ESEN_MASK	derivative.h	15667;"	d
SDHC_IRQSTATEN_AC12ESEN_SHIFT	derivative.h	15668;"	d
SDHC_IRQSTATEN_BGESEN_MASK	derivative.h	15639;"	d
SDHC_IRQSTATEN_BGESEN_SHIFT	derivative.h	15640;"	d
SDHC_IRQSTATEN_BRRSEN_MASK	derivative.h	15645;"	d
SDHC_IRQSTATEN_BRRSEN_SHIFT	derivative.h	15646;"	d
SDHC_IRQSTATEN_BWRSEN_MASK	derivative.h	15643;"	d
SDHC_IRQSTATEN_BWRSEN_SHIFT	derivative.h	15644;"	d
SDHC_IRQSTATEN_CCESEN_MASK	derivative.h	15655;"	d
SDHC_IRQSTATEN_CCESEN_SHIFT	derivative.h	15656;"	d
SDHC_IRQSTATEN_CCSEN_MASK	derivative.h	15635;"	d
SDHC_IRQSTATEN_CCSEN_SHIFT	derivative.h	15636;"	d
SDHC_IRQSTATEN_CEBESEN_MASK	derivative.h	15657;"	d
SDHC_IRQSTATEN_CEBESEN_SHIFT	derivative.h	15658;"	d
SDHC_IRQSTATEN_CIESEN_MASK	derivative.h	15659;"	d
SDHC_IRQSTATEN_CIESEN_SHIFT	derivative.h	15660;"	d
SDHC_IRQSTATEN_CINSEN_MASK	derivative.h	15647;"	d
SDHC_IRQSTATEN_CINSEN_SHIFT	derivative.h	15648;"	d
SDHC_IRQSTATEN_CINTSEN_MASK	derivative.h	15651;"	d
SDHC_IRQSTATEN_CINTSEN_SHIFT	derivative.h	15652;"	d
SDHC_IRQSTATEN_CRMSEN_MASK	derivative.h	15649;"	d
SDHC_IRQSTATEN_CRMSEN_SHIFT	derivative.h	15650;"	d
SDHC_IRQSTATEN_CTOESEN_MASK	derivative.h	15653;"	d
SDHC_IRQSTATEN_CTOESEN_SHIFT	derivative.h	15654;"	d
SDHC_IRQSTATEN_DCESEN_MASK	derivative.h	15663;"	d
SDHC_IRQSTATEN_DCESEN_SHIFT	derivative.h	15664;"	d
SDHC_IRQSTATEN_DEBESEN_MASK	derivative.h	15665;"	d
SDHC_IRQSTATEN_DEBESEN_SHIFT	derivative.h	15666;"	d
SDHC_IRQSTATEN_DINTSEN_MASK	derivative.h	15641;"	d
SDHC_IRQSTATEN_DINTSEN_SHIFT	derivative.h	15642;"	d
SDHC_IRQSTATEN_DMAESEN_MASK	derivative.h	15669;"	d
SDHC_IRQSTATEN_DMAESEN_SHIFT	derivative.h	15670;"	d
SDHC_IRQSTATEN_DTOESEN_MASK	derivative.h	15661;"	d
SDHC_IRQSTATEN_DTOESEN_SHIFT	derivative.h	15662;"	d
SDHC_IRQSTATEN_REG	derivative.h	15423;"	d
SDHC_IRQSTATEN_TCSEN_MASK	derivative.h	15637;"	d
SDHC_IRQSTATEN_TCSEN_SHIFT	derivative.h	15638;"	d
SDHC_IRQSTAT_AC12E_MASK	derivative.h	15630;"	d
SDHC_IRQSTAT_AC12E_SHIFT	derivative.h	15631;"	d
SDHC_IRQSTAT_BGE_MASK	derivative.h	15602;"	d
SDHC_IRQSTAT_BGE_SHIFT	derivative.h	15603;"	d
SDHC_IRQSTAT_BRR_MASK	derivative.h	15608;"	d
SDHC_IRQSTAT_BRR_SHIFT	derivative.h	15609;"	d
SDHC_IRQSTAT_BWR_MASK	derivative.h	15606;"	d
SDHC_IRQSTAT_BWR_SHIFT	derivative.h	15607;"	d
SDHC_IRQSTAT_CCE_MASK	derivative.h	15618;"	d
SDHC_IRQSTAT_CCE_SHIFT	derivative.h	15619;"	d
SDHC_IRQSTAT_CC_MASK	derivative.h	15598;"	d
SDHC_IRQSTAT_CC_SHIFT	derivative.h	15599;"	d
SDHC_IRQSTAT_CEBE_MASK	derivative.h	15620;"	d
SDHC_IRQSTAT_CEBE_SHIFT	derivative.h	15621;"	d
SDHC_IRQSTAT_CIE_MASK	derivative.h	15622;"	d
SDHC_IRQSTAT_CIE_SHIFT	derivative.h	15623;"	d
SDHC_IRQSTAT_CINS_MASK	derivative.h	15610;"	d
SDHC_IRQSTAT_CINS_SHIFT	derivative.h	15611;"	d
SDHC_IRQSTAT_CINT_MASK	derivative.h	15614;"	d
SDHC_IRQSTAT_CINT_SHIFT	derivative.h	15615;"	d
SDHC_IRQSTAT_CRM_MASK	derivative.h	15612;"	d
SDHC_IRQSTAT_CRM_SHIFT	derivative.h	15613;"	d
SDHC_IRQSTAT_CTOE_MASK	derivative.h	15616;"	d
SDHC_IRQSTAT_CTOE_SHIFT	derivative.h	15617;"	d
SDHC_IRQSTAT_DCE_MASK	derivative.h	15626;"	d
SDHC_IRQSTAT_DCE_SHIFT	derivative.h	15627;"	d
SDHC_IRQSTAT_DEBE_MASK	derivative.h	15628;"	d
SDHC_IRQSTAT_DEBE_SHIFT	derivative.h	15629;"	d
SDHC_IRQSTAT_DINT_MASK	derivative.h	15604;"	d
SDHC_IRQSTAT_DINT_SHIFT	derivative.h	15605;"	d
SDHC_IRQSTAT_DMAE_MASK	derivative.h	15632;"	d
SDHC_IRQSTAT_DMAE_SHIFT	derivative.h	15633;"	d
SDHC_IRQSTAT_DTOE_MASK	derivative.h	15624;"	d
SDHC_IRQSTAT_DTOE_SHIFT	derivative.h	15625;"	d
SDHC_IRQSTAT_REG	derivative.h	15422;"	d
SDHC_IRQSTAT_TC_MASK	derivative.h	15600;"	d
SDHC_IRQSTAT_TC_SHIFT	derivative.h	15601;"	d
SDHC_MMCBOOT	derivative.h	15870;"	d
SDHC_MMCBOOT_AUTOSABGEN_MASK	derivative.h	15812;"	d
SDHC_MMCBOOT_AUTOSABGEN_SHIFT	derivative.h	15813;"	d
SDHC_MMCBOOT_BOOTACK_MASK	derivative.h	15806;"	d
SDHC_MMCBOOT_BOOTACK_SHIFT	derivative.h	15807;"	d
SDHC_MMCBOOT_BOOTBLKCNT	derivative.h	15816;"	d
SDHC_MMCBOOT_BOOTBLKCNT_MASK	derivative.h	15814;"	d
SDHC_MMCBOOT_BOOTBLKCNT_SHIFT	derivative.h	15815;"	d
SDHC_MMCBOOT_BOOTEN_MASK	derivative.h	15810;"	d
SDHC_MMCBOOT_BOOTEN_SHIFT	derivative.h	15811;"	d
SDHC_MMCBOOT_BOOTMODE_MASK	derivative.h	15808;"	d
SDHC_MMCBOOT_BOOTMODE_SHIFT	derivative.h	15809;"	d
SDHC_MMCBOOT_DTOCVACK	derivative.h	15805;"	d
SDHC_MMCBOOT_DTOCVACK_MASK	derivative.h	15803;"	d
SDHC_MMCBOOT_DTOCVACK_SHIFT	derivative.h	15804;"	d
SDHC_MMCBOOT_REG	derivative.h	15432;"	d
SDHC_MemMap	derivative.h	/^typedef struct SDHC_MemMap {$/;"	s
SDHC_MemMapPtr	derivative.h	/^} volatile *SDHC_MemMapPtr;$/;"	t
SDHC_PROCTL	derivative.h	15858;"	d
SDHC_PROCTL_CDSS_MASK	derivative.h	15552;"	d
SDHC_PROCTL_CDSS_SHIFT	derivative.h	15553;"	d
SDHC_PROCTL_CDTL_MASK	derivative.h	15550;"	d
SDHC_PROCTL_CDTL_SHIFT	derivative.h	15551;"	d
SDHC_PROCTL_CREQ_MASK	derivative.h	15559;"	d
SDHC_PROCTL_CREQ_SHIFT	derivative.h	15560;"	d
SDHC_PROCTL_D3CD_MASK	derivative.h	15545;"	d
SDHC_PROCTL_D3CD_SHIFT	derivative.h	15546;"	d
SDHC_PROCTL_DMAS	derivative.h	15556;"	d
SDHC_PROCTL_DMAS_MASK	derivative.h	15554;"	d
SDHC_PROCTL_DMAS_SHIFT	derivative.h	15555;"	d
SDHC_PROCTL_DTW	derivative.h	15544;"	d
SDHC_PROCTL_DTW_MASK	derivative.h	15542;"	d
SDHC_PROCTL_DTW_SHIFT	derivative.h	15543;"	d
SDHC_PROCTL_EMODE	derivative.h	15549;"	d
SDHC_PROCTL_EMODE_MASK	derivative.h	15547;"	d
SDHC_PROCTL_EMODE_SHIFT	derivative.h	15548;"	d
SDHC_PROCTL_IABG_MASK	derivative.h	15563;"	d
SDHC_PROCTL_IABG_SHIFT	derivative.h	15564;"	d
SDHC_PROCTL_LCTL_MASK	derivative.h	15540;"	d
SDHC_PROCTL_LCTL_SHIFT	derivative.h	15541;"	d
SDHC_PROCTL_REG	derivative.h	15420;"	d
SDHC_PROCTL_RWCTL_MASK	derivative.h	15561;"	d
SDHC_PROCTL_RWCTL_SHIFT	derivative.h	15562;"	d
SDHC_PROCTL_SABGREQ_MASK	derivative.h	15557;"	d
SDHC_PROCTL_SABGREQ_SHIFT	derivative.h	15558;"	d
SDHC_PROCTL_WECINS_MASK	derivative.h	15567;"	d
SDHC_PROCTL_WECINS_SHIFT	derivative.h	15568;"	d
SDHC_PROCTL_WECINT_MASK	derivative.h	15565;"	d
SDHC_PROCTL_WECINT_SHIFT	derivative.h	15566;"	d
SDHC_PROCTL_WECRM_MASK	derivative.h	15569;"	d
SDHC_PROCTL_WECRM_SHIFT	derivative.h	15570;"	d
SDHC_PRSSTAT	derivative.h	15857;"	d
SDHC_PRSSTAT_BREN_MASK	derivative.h	15530;"	d
SDHC_PRSSTAT_BREN_SHIFT	derivative.h	15531;"	d
SDHC_PRSSTAT_BWEN_MASK	derivative.h	15528;"	d
SDHC_PRSSTAT_BWEN_SHIFT	derivative.h	15529;"	d
SDHC_PRSSTAT_CDIHB_MASK	derivative.h	15510;"	d
SDHC_PRSSTAT_CDIHB_SHIFT	derivative.h	15511;"	d
SDHC_PRSSTAT_CIHB_MASK	derivative.h	15508;"	d
SDHC_PRSSTAT_CIHB_SHIFT	derivative.h	15509;"	d
SDHC_PRSSTAT_CINS_MASK	derivative.h	15532;"	d
SDHC_PRSSTAT_CINS_SHIFT	derivative.h	15533;"	d
SDHC_PRSSTAT_CLSL_MASK	derivative.h	15534;"	d
SDHC_PRSSTAT_CLSL_SHIFT	derivative.h	15535;"	d
SDHC_PRSSTAT_DLA_MASK	derivative.h	15512;"	d
SDHC_PRSSTAT_DLA_SHIFT	derivative.h	15513;"	d
SDHC_PRSSTAT_DLSL	derivative.h	15538;"	d
SDHC_PRSSTAT_DLSL_MASK	derivative.h	15536;"	d
SDHC_PRSSTAT_DLSL_SHIFT	derivative.h	15537;"	d
SDHC_PRSSTAT_HCKOFF_MASK	derivative.h	15518;"	d
SDHC_PRSSTAT_HCKOFF_SHIFT	derivative.h	15519;"	d
SDHC_PRSSTAT_IPGOFF_MASK	derivative.h	15516;"	d
SDHC_PRSSTAT_IPGOFF_SHIFT	derivative.h	15517;"	d
SDHC_PRSSTAT_PEROFF_MASK	derivative.h	15520;"	d
SDHC_PRSSTAT_PEROFF_SHIFT	derivative.h	15521;"	d
SDHC_PRSSTAT_REG	derivative.h	15419;"	d
SDHC_PRSSTAT_RTA_MASK	derivative.h	15526;"	d
SDHC_PRSSTAT_RTA_SHIFT	derivative.h	15527;"	d
SDHC_PRSSTAT_SDOFF_MASK	derivative.h	15522;"	d
SDHC_PRSSTAT_SDOFF_SHIFT	derivative.h	15523;"	d
SDHC_PRSSTAT_SDSTB_MASK	derivative.h	15514;"	d
SDHC_PRSSTAT_SDSTB_SHIFT	derivative.h	15515;"	d
SDHC_PRSSTAT_WTA_MASK	derivative.h	15524;"	d
SDHC_PRSSTAT_WTA_SHIFT	derivative.h	15525;"	d
SDHC_SYSCTL	derivative.h	15859;"	d
SDHC_SYSCTL_DTOCV	derivative.h	15588;"	d
SDHC_SYSCTL_DTOCV_MASK	derivative.h	15586;"	d
SDHC_SYSCTL_DTOCV_SHIFT	derivative.h	15587;"	d
SDHC_SYSCTL_DVS	derivative.h	15582;"	d
SDHC_SYSCTL_DVS_MASK	derivative.h	15580;"	d
SDHC_SYSCTL_DVS_SHIFT	derivative.h	15581;"	d
SDHC_SYSCTL_HCKEN_MASK	derivative.h	15574;"	d
SDHC_SYSCTL_HCKEN_SHIFT	derivative.h	15575;"	d
SDHC_SYSCTL_INITA_MASK	derivative.h	15595;"	d
SDHC_SYSCTL_INITA_SHIFT	derivative.h	15596;"	d
SDHC_SYSCTL_IPGEN_MASK	derivative.h	15572;"	d
SDHC_SYSCTL_IPGEN_SHIFT	derivative.h	15573;"	d
SDHC_SYSCTL_PEREN_MASK	derivative.h	15576;"	d
SDHC_SYSCTL_PEREN_SHIFT	derivative.h	15577;"	d
SDHC_SYSCTL_REG	derivative.h	15421;"	d
SDHC_SYSCTL_RSTA_MASK	derivative.h	15589;"	d
SDHC_SYSCTL_RSTA_SHIFT	derivative.h	15590;"	d
SDHC_SYSCTL_RSTC_MASK	derivative.h	15591;"	d
SDHC_SYSCTL_RSTC_SHIFT	derivative.h	15592;"	d
SDHC_SYSCTL_RSTD_MASK	derivative.h	15593;"	d
SDHC_SYSCTL_RSTD_SHIFT	derivative.h	15594;"	d
SDHC_SYSCTL_SDCLKEN_MASK	derivative.h	15578;"	d
SDHC_SYSCTL_SDCLKEN_SHIFT	derivative.h	15579;"	d
SDHC_SYSCTL_SDCLKFS	derivative.h	15585;"	d
SDHC_SYSCTL_SDCLKFS_MASK	derivative.h	15583;"	d
SDHC_SYSCTL_SDCLKFS_SHIFT	derivative.h	15584;"	d
SDHC_VENDOR	derivative.h	15869;"	d
SDHC_VENDOR_EXBLKNU_MASK	derivative.h	15797;"	d
SDHC_VENDOR_EXBLKNU_SHIFT	derivative.h	15798;"	d
SDHC_VENDOR_EXTDMAEN_MASK	derivative.h	15795;"	d
SDHC_VENDOR_EXTDMAEN_SHIFT	derivative.h	15796;"	d
SDHC_VENDOR_INTSTVAL	derivative.h	15801;"	d
SDHC_VENDOR_INTSTVAL_MASK	derivative.h	15799;"	d
SDHC_VENDOR_INTSTVAL_SHIFT	derivative.h	15800;"	d
SDHC_VENDOR_REG	derivative.h	15431;"	d
SDHC_WML	derivative.h	15865;"	d
SDHC_WML_RDWML	derivative.h	15742;"	d
SDHC_WML_RDWML_MASK	derivative.h	15740;"	d
SDHC_WML_RDWML_SHIFT	derivative.h	15741;"	d
SDHC_WML_REG	derivative.h	15427;"	d
SDHC_WML_WRBRSTLEN	derivative.h	15748;"	d
SDHC_WML_WRBRSTLEN_MASK	derivative.h	15746;"	d
SDHC_WML_WRBRSTLEN_SHIFT	derivative.h	15747;"	d
SDHC_WML_WRWML	derivative.h	15745;"	d
SDHC_WML_WRWML_MASK	derivative.h	15743;"	d
SDHC_WML_WRWML_SHIFT	derivative.h	15744;"	d
SDHC_XFERTYP	derivative.h	15851;"	d
SDHC_XFERTYP_AC12EN_MASK	derivative.h	15469;"	d
SDHC_XFERTYP_AC12EN_SHIFT	derivative.h	15470;"	d
SDHC_XFERTYP_BCEN_MASK	derivative.h	15467;"	d
SDHC_XFERTYP_BCEN_SHIFT	derivative.h	15468;"	d
SDHC_XFERTYP_CCCEN_MASK	derivative.h	15478;"	d
SDHC_XFERTYP_CCCEN_SHIFT	derivative.h	15479;"	d
SDHC_XFERTYP_CICEN_MASK	derivative.h	15480;"	d
SDHC_XFERTYP_CICEN_SHIFT	derivative.h	15481;"	d
SDHC_XFERTYP_CMDINX	derivative.h	15489;"	d
SDHC_XFERTYP_CMDINX_MASK	derivative.h	15487;"	d
SDHC_XFERTYP_CMDINX_SHIFT	derivative.h	15488;"	d
SDHC_XFERTYP_CMDTYP	derivative.h	15486;"	d
SDHC_XFERTYP_CMDTYP_MASK	derivative.h	15484;"	d
SDHC_XFERTYP_CMDTYP_SHIFT	derivative.h	15485;"	d
SDHC_XFERTYP_DMAEN_MASK	derivative.h	15465;"	d
SDHC_XFERTYP_DMAEN_SHIFT	derivative.h	15466;"	d
SDHC_XFERTYP_DPSEL_MASK	derivative.h	15482;"	d
SDHC_XFERTYP_DPSEL_SHIFT	derivative.h	15483;"	d
SDHC_XFERTYP_DTDSEL_MASK	derivative.h	15471;"	d
SDHC_XFERTYP_DTDSEL_SHIFT	derivative.h	15472;"	d
SDHC_XFERTYP_MSBSEL_MASK	derivative.h	15473;"	d
SDHC_XFERTYP_MSBSEL_SHIFT	derivative.h	15474;"	d
SDHC_XFERTYP_REG	derivative.h	15416;"	d
SDHC_XFERTYP_RSPTYP	derivative.h	15477;"	d
SDHC_XFERTYP_RSPTYP_MASK	derivative.h	15475;"	d
SDHC_XFERTYP_RSPTYP_SHIFT	derivative.h	15476;"	d
SDID	derivative.h	/^  uint32_t SDID;                                   \/**< System Device Identification Register, offset: 0x1024 *\/$/;"	m	struct:SIM_MemMap
SDRAM_END	sdram.h	70;"	d
SDRAM_SIZE	sdram.h	64;"	d
SDRAM_START	sdram.h	67;"	d
SDTH	derivative.h	/^  uint8_t SDTH;                                    \/**< UART CEA709.1-B Secondary Delay Timer High, offset: 0x25 *\/$/;"	m	struct:UART_MemMap
SDTL	derivative.h	/^  uint8_t SDTL;                                    \/**< UART CEA709.1-B Secondary Delay Timer Low, offset: 0x26 *\/$/;"	m	struct:UART_MemMap
SECSZ	derivative.h	/^  uint32_t SECSZ;                                  \/**< Sector size, offset: 0x3F2C *\/$/;"	m	struct:NFC_MemMap
SEEI	derivative.h	/^  uint8_t SEEI;                                    \/**< Set Enable Error Interrupt Register, offset: 0x19 *\/$/;"	m	struct:DMA_MemMap
SERQ	derivative.h	/^  uint8_t SERQ;                                    \/**< Set Enable Request Register, offset: 0x1B *\/$/;"	m	struct:DMA_MemMap
SERV	derivative.h	/^  uint8_t SERV;                                    \/**< Service Register, offset: 0x1 *\/$/;"	m	struct:EWM_MemMap
SET	derivative.h	/^  } SET[4][4];$/;"	m	struct:FMC_MemMap	typeref:struct:FMC_MemMap::__anon22
SFIFO	derivative.h	/^  uint8_t SFIFO;                                   \/**< UART FIFO Status Register, offset: 0x12 *\/$/;"	m	struct:UART_MemMap
SHCSR	derivative.h	/^  uint32_t SHCSR;                                  \/**< System Handler Control and State Register, offset: 0xD24 *\/$/;"	m	struct:SCB_MemMap
SHPR1	derivative.h	/^  uint32_t SHPR1;                                  \/**< System Handler Priority Register 1, offset: 0xD18 *\/$/;"	m	struct:SCB_MemMap
SHPR2	derivative.h	/^  uint32_t SHPR2;                                  \/**< System Handler Priority Register 2, offset: 0xD1C *\/$/;"	m	struct:SCB_MemMap
SHPR3	derivative.h	/^  uint32_t SHPR3;                                  \/**< System Handler Priority Register 3, offset: 0xD20 *\/$/;"	m	struct:SCB_MemMap
SIM_BASE_PTR	derivative.h	16375;"	d
SIM_BASE_PTRS	derivative.h	16377;"	d
SIM_CLKDIV1	derivative.h	16406;"	d
SIM_CLKDIV1_OUTDIV1	derivative.h	16274;"	d
SIM_CLKDIV1_OUTDIV1_MASK	derivative.h	16272;"	d
SIM_CLKDIV1_OUTDIV1_SHIFT	derivative.h	16273;"	d
SIM_CLKDIV1_OUTDIV2	derivative.h	16271;"	d
SIM_CLKDIV1_OUTDIV2_MASK	derivative.h	16269;"	d
SIM_CLKDIV1_OUTDIV2_SHIFT	derivative.h	16270;"	d
SIM_CLKDIV1_OUTDIV3	derivative.h	16268;"	d
SIM_CLKDIV1_OUTDIV3_MASK	derivative.h	16266;"	d
SIM_CLKDIV1_OUTDIV3_SHIFT	derivative.h	16267;"	d
SIM_CLKDIV1_OUTDIV4	derivative.h	16265;"	d
SIM_CLKDIV1_OUTDIV4_MASK	derivative.h	16263;"	d
SIM_CLKDIV1_OUTDIV4_SHIFT	derivative.h	16264;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_1	mcg.h	18;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_10	mcg.h	27;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_11	mcg.h	28;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_12	mcg.h	29;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_13	mcg.h	30;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_14	mcg.h	31;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_15	mcg.h	32;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_16	mcg.h	33;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_2	mcg.h	19;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_3	mcg.h	20;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_4	mcg.h	21;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_5	mcg.h	22;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_6	mcg.h	23;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_7	mcg.h	24;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_8	mcg.h	25;"	d
SIM_CLKDIV1_OUTDIV_DIVIDE_BY_9	mcg.h	26;"	d
SIM_CLKDIV1_REG	derivative.h	15954;"	d
SIM_CLKDIV2	derivative.h	16407;"	d
SIM_CLKDIV2_REG	derivative.h	15955;"	d
SIM_CLKDIV2_USBFSDIV	derivative.h	16280;"	d
SIM_CLKDIV2_USBFSDIV_MASK	derivative.h	16278;"	d
SIM_CLKDIV2_USBFSDIV_SHIFT	derivative.h	16279;"	d
SIM_CLKDIV2_USBFSFRAC_MASK	derivative.h	16276;"	d
SIM_CLKDIV2_USBFSFRAC_SHIFT	derivative.h	16277;"	d
SIM_CLKDIV2_USBHSDIV	derivative.h	16285;"	d
SIM_CLKDIV2_USBHSDIV_MASK	derivative.h	16283;"	d
SIM_CLKDIV2_USBHSDIV_SHIFT	derivative.h	16284;"	d
SIM_CLKDIV2_USBHSFRAC_MASK	derivative.h	16281;"	d
SIM_CLKDIV2_USBHSFRAC_SHIFT	derivative.h	16282;"	d
SIM_CLKDIV3	derivative.h	16414;"	d
SIM_CLKDIV3_LCDCDIV	derivative.h	16330;"	d
SIM_CLKDIV3_LCDCDIV_MASK	derivative.h	16328;"	d
SIM_CLKDIV3_LCDCDIV_SHIFT	derivative.h	16329;"	d
SIM_CLKDIV3_LCDCFRAC	derivative.h	16327;"	d
SIM_CLKDIV3_LCDCFRAC_MASK	derivative.h	16325;"	d
SIM_CLKDIV3_LCDCFRAC_SHIFT	derivative.h	16326;"	d
SIM_CLKDIV3_REG	derivative.h	15962;"	d
SIM_CLKDIV4	derivative.h	16415;"	d
SIM_CLKDIV4_NFCDIV	derivative.h	16342;"	d
SIM_CLKDIV4_NFCDIV_MASK	derivative.h	16340;"	d
SIM_CLKDIV4_NFCDIV_SHIFT	derivative.h	16341;"	d
SIM_CLKDIV4_NFCFRAC	derivative.h	16339;"	d
SIM_CLKDIV4_NFCFRAC_MASK	derivative.h	16337;"	d
SIM_CLKDIV4_NFCFRAC_SHIFT	derivative.h	16338;"	d
SIM_CLKDIV4_REG	derivative.h	15963;"	d
SIM_CLKDIV4_TRACEDIV	derivative.h	16336;"	d
SIM_CLKDIV4_TRACEDIV_MASK	derivative.h	16334;"	d
SIM_CLKDIV4_TRACEDIV_SHIFT	derivative.h	16335;"	d
SIM_CLKDIV4_TRACEFRAC_MASK	derivative.h	16332;"	d
SIM_CLKDIV4_TRACEFRAC_SHIFT	derivative.h	16333;"	d
SIM_FCFG1	derivative.h	16408;"	d
SIM_FCFG1_DEPART	derivative.h	16291;"	d
SIM_FCFG1_DEPART_MASK	derivative.h	16289;"	d
SIM_FCFG1_DEPART_SHIFT	derivative.h	16290;"	d
SIM_FCFG1_EESIZE	derivative.h	16294;"	d
SIM_FCFG1_EESIZE_MASK	derivative.h	16292;"	d
SIM_FCFG1_EESIZE_SHIFT	derivative.h	16293;"	d
SIM_FCFG1_FTFDIS_MASK	derivative.h	16287;"	d
SIM_FCFG1_FTFDIS_SHIFT	derivative.h	16288;"	d
SIM_FCFG1_NVMSIZE	derivative.h	16300;"	d
SIM_FCFG1_NVMSIZE_MASK	derivative.h	16298;"	d
SIM_FCFG1_NVMSIZE_SHIFT	derivative.h	16299;"	d
SIM_FCFG1_PFSIZE	derivative.h	16297;"	d
SIM_FCFG1_PFSIZE_MASK	derivative.h	16295;"	d
SIM_FCFG1_PFSIZE_SHIFT	derivative.h	16296;"	d
SIM_FCFG1_REG	derivative.h	15956;"	d
SIM_FCFG2	derivative.h	16409;"	d
SIM_FCFG2_MAXADDR01	derivative.h	16307;"	d
SIM_FCFG2_MAXADDR01_MASK	derivative.h	16305;"	d
SIM_FCFG2_MAXADDR01_SHIFT	derivative.h	16306;"	d
SIM_FCFG2_MAXADDR23	derivative.h	16304;"	d
SIM_FCFG2_MAXADDR23_MASK	derivative.h	16302;"	d
SIM_FCFG2_MAXADDR23_SHIFT	derivative.h	16303;"	d
SIM_FCFG2_REG	derivative.h	15957;"	d
SIM_MCR	derivative.h	16416;"	d
SIM_MCR_DDRCFG	derivative.h	16354;"	d
SIM_MCR_DDRCFG_DDR1	sdram.h	18;"	d
SIM_MCR_DDRCFG_DDR2_FULL_STRENGTH	sdram.h	19;"	d
SIM_MCR_DDRCFG_DDR2_HALF_STRENGTH	sdram.h	17;"	d
SIM_MCR_DDRCFG_LPDDR_FULL_STRENGTH	sdram.h	16;"	d
SIM_MCR_DDRCFG_LPDDR_HALF_STRENGTH	sdram.h	15;"	d
SIM_MCR_DDRCFG_MASK	derivative.h	16352;"	d
SIM_MCR_DDRCFG_SHIFT	derivative.h	16353;"	d
SIM_MCR_DDRDQSDIS_MASK	derivative.h	16350;"	d
SIM_MCR_DDRDQSDIS_SHIFT	derivative.h	16351;"	d
SIM_MCR_DDRPEN_MASK	derivative.h	16348;"	d
SIM_MCR_DDRPEN_SHIFT	derivative.h	16349;"	d
SIM_MCR_DDRSREN_MASK	derivative.h	16344;"	d
SIM_MCR_DDRSREN_SHIFT	derivative.h	16345;"	d
SIM_MCR_DDRS_MASK	derivative.h	16346;"	d
SIM_MCR_DDRS_SHIFT	derivative.h	16347;"	d
SIM_MCR_LCDSTART_MASK	derivative.h	16359;"	d
SIM_MCR_LCDSTART_SHIFT	derivative.h	16360;"	d
SIM_MCR_PDBLOOP_MASK	derivative.h	16361;"	d
SIM_MCR_PDBLOOP_SHIFT	derivative.h	16362;"	d
SIM_MCR_RCRRSTEN_MASK	derivative.h	16355;"	d
SIM_MCR_RCRRSTEN_SHIFT	derivative.h	16356;"	d
SIM_MCR_RCRRST_MASK	derivative.h	16357;"	d
SIM_MCR_RCRRST_SHIFT	derivative.h	16358;"	d
SIM_MCR_REG	derivative.h	15964;"	d
SIM_MCR_TRACECLKDIS_MASK	derivative.h	16365;"	d
SIM_MCR_TRACECLKDIS_SHIFT	derivative.h	16366;"	d
SIM_MCR_ULPICLKOBE_MASK	derivative.h	16363;"	d
SIM_MCR_ULPICLKOBE_SHIFT	derivative.h	16364;"	d
SIM_MemMap	derivative.h	/^typedef struct SIM_MemMap {$/;"	s
SIM_MemMapPtr	derivative.h	/^} volatile *SIM_MemMapPtr;$/;"	t
SIM_SCGC1	derivative.h	16399;"	d
SIM_SCGC1_OSC1_MASK	derivative.h	16136;"	d
SIM_SCGC1_OSC1_SHIFT	derivative.h	16137;"	d
SIM_SCGC1_REG	derivative.h	15947;"	d
SIM_SCGC1_UART4_MASK	derivative.h	16138;"	d
SIM_SCGC1_UART4_SHIFT	derivative.h	16139;"	d
SIM_SCGC1_UART5_MASK	derivative.h	16140;"	d
SIM_SCGC1_UART5_SHIFT	derivative.h	16141;"	d
SIM_SCGC2	derivative.h	16400;"	d
SIM_SCGC2_DAC0_MASK	derivative.h	16145;"	d
SIM_SCGC2_DAC0_SHIFT	derivative.h	16146;"	d
SIM_SCGC2_DAC1_MASK	derivative.h	16147;"	d
SIM_SCGC2_DAC1_SHIFT	derivative.h	16148;"	d
SIM_SCGC2_ENET_MASK	derivative.h	16143;"	d
SIM_SCGC2_ENET_SHIFT	derivative.h	16144;"	d
SIM_SCGC2_REG	derivative.h	15948;"	d
SIM_SCGC3	derivative.h	16401;"	d
SIM_SCGC3_ADC1_MASK	derivative.h	16170;"	d
SIM_SCGC3_ADC1_SHIFT	derivative.h	16171;"	d
SIM_SCGC3_ADC3_MASK	derivative.h	16172;"	d
SIM_SCGC3_ADC3_SHIFT	derivative.h	16173;"	d
SIM_SCGC3_DDR_MASK	derivative.h	16158;"	d
SIM_SCGC3_DDR_SHIFT	derivative.h	16159;"	d
SIM_SCGC3_DSPI2_MASK	derivative.h	16156;"	d
SIM_SCGC3_DSPI2_SHIFT	derivative.h	16157;"	d
SIM_SCGC3_ESDHC_MASK	derivative.h	16162;"	d
SIM_SCGC3_ESDHC_SHIFT	derivative.h	16163;"	d
SIM_SCGC3_FLEXCAN1_MASK	derivative.h	16152;"	d
SIM_SCGC3_FLEXCAN1_SHIFT	derivative.h	16153;"	d
SIM_SCGC3_FTM2_MASK	derivative.h	16166;"	d
SIM_SCGC3_FTM2_SHIFT	derivative.h	16167;"	d
SIM_SCGC3_FTM3_MASK	derivative.h	16168;"	d
SIM_SCGC3_FTM3_SHIFT	derivative.h	16169;"	d
SIM_SCGC3_LCDC_MASK	derivative.h	16164;"	d
SIM_SCGC3_LCDC_SHIFT	derivative.h	16165;"	d
SIM_SCGC3_NFC_MASK	derivative.h	16154;"	d
SIM_SCGC3_NFC_SHIFT	derivative.h	16155;"	d
SIM_SCGC3_REG	derivative.h	15949;"	d
SIM_SCGC3_RNGA_MASK	derivative.h	16150;"	d
SIM_SCGC3_RNGA_SHIFT	derivative.h	16151;"	d
SIM_SCGC3_SAI1_MASK	derivative.h	16160;"	d
SIM_SCGC3_SAI1_SHIFT	derivative.h	16161;"	d
SIM_SCGC4	derivative.h	16402;"	d
SIM_SCGC4_CMP_MASK	derivative.h	16193;"	d
SIM_SCGC4_CMP_SHIFT	derivative.h	16194;"	d
SIM_SCGC4_CMT_MASK	derivative.h	16177;"	d
SIM_SCGC4_CMT_SHIFT	derivative.h	16178;"	d
SIM_SCGC4_EWM_MASK	derivative.h	16175;"	d
SIM_SCGC4_EWM_SHIFT	derivative.h	16176;"	d
SIM_SCGC4_IIC0_MASK	derivative.h	16179;"	d
SIM_SCGC4_IIC0_SHIFT	derivative.h	16180;"	d
SIM_SCGC4_IIC1_MASK	derivative.h	16181;"	d
SIM_SCGC4_IIC1_SHIFT	derivative.h	16182;"	d
SIM_SCGC4_IIC2_MASK	derivative.h	19826;"	d
SIM_SCGC4_IIC2_SHIFT	derivative.h	19827;"	d
SIM_SCGC4_LLWU_MASK	derivative.h	16197;"	d
SIM_SCGC4_LLWU_SHIFT	derivative.h	16198;"	d
SIM_SCGC4_REG	derivative.h	15950;"	d
SIM_SCGC4_UART0_MASK	derivative.h	16183;"	d
SIM_SCGC4_UART0_SHIFT	derivative.h	16184;"	d
SIM_SCGC4_UART1_MASK	derivative.h	16185;"	d
SIM_SCGC4_UART1_SHIFT	derivative.h	16186;"	d
SIM_SCGC4_UART2_MASK	derivative.h	16187;"	d
SIM_SCGC4_UART2_SHIFT	derivative.h	16188;"	d
SIM_SCGC4_UART3_MASK	derivative.h	16189;"	d
SIM_SCGC4_UART3_SHIFT	derivative.h	16190;"	d
SIM_SCGC4_USBFS_MASK	derivative.h	16191;"	d
SIM_SCGC4_USBFS_SHIFT	derivative.h	16192;"	d
SIM_SCGC4_VREF_MASK	derivative.h	16195;"	d
SIM_SCGC4_VREF_SHIFT	derivative.h	16196;"	d
SIM_SCGC5	derivative.h	16403;"	d
SIM_SCGC5_DRYICESECREG_MASK	derivative.h	16206;"	d
SIM_SCGC5_DRYICESECREG_SHIFT	derivative.h	16207;"	d
SIM_SCGC5_DRYICE_MASK	derivative.h	16204;"	d
SIM_SCGC5_DRYICE_SHIFT	derivative.h	16205;"	d
SIM_SCGC5_LPTIMER_MASK	derivative.h	16200;"	d
SIM_SCGC5_LPTIMER_SHIFT	derivative.h	16201;"	d
SIM_SCGC5_PORTA_MASK	derivative.h	16210;"	d
SIM_SCGC5_PORTA_SHIFT	derivative.h	16211;"	d
SIM_SCGC5_PORTB_MASK	derivative.h	16212;"	d
SIM_SCGC5_PORTB_SHIFT	derivative.h	16213;"	d
SIM_SCGC5_PORTC_MASK	derivative.h	16214;"	d
SIM_SCGC5_PORTC_SHIFT	derivative.h	16215;"	d
SIM_SCGC5_PORTD_MASK	derivative.h	16216;"	d
SIM_SCGC5_PORTD_SHIFT	derivative.h	16217;"	d
SIM_SCGC5_PORTE_MASK	derivative.h	16218;"	d
SIM_SCGC5_PORTE_SHIFT	derivative.h	16219;"	d
SIM_SCGC5_PORTF_MASK	derivative.h	16220;"	d
SIM_SCGC5_PORTF_SHIFT	derivative.h	16221;"	d
SIM_SCGC5_REG	derivative.h	15951;"	d
SIM_SCGC5_REGFILE_MASK	derivative.h	16202;"	d
SIM_SCGC5_REGFILE_SHIFT	derivative.h	16203;"	d
SIM_SCGC5_TSI_MASK	derivative.h	16208;"	d
SIM_SCGC5_TSI_SHIFT	derivative.h	16209;"	d
SIM_SCGC6	derivative.h	16404;"	d
SIM_SCGC6_ADC0_MASK	derivative.h	16249;"	d
SIM_SCGC6_ADC0_SHIFT	derivative.h	16250;"	d
SIM_SCGC6_ADC2_MASK	derivative.h	16251;"	d
SIM_SCGC6_ADC2_SHIFT	derivative.h	16252;"	d
SIM_SCGC6_CRC_MASK	derivative.h	16235;"	d
SIM_SCGC6_CRC_SHIFT	derivative.h	16236;"	d
SIM_SCGC6_DMAMUX0_MASK	derivative.h	16223;"	d
SIM_SCGC6_DMAMUX0_SHIFT	derivative.h	16224;"	d
SIM_SCGC6_DMAMUX1_MASK	derivative.h	16225;"	d
SIM_SCGC6_DMAMUX1_SHIFT	derivative.h	16226;"	d
SIM_SCGC6_DSPI0_MASK	derivative.h	16229;"	d
SIM_SCGC6_DSPI0_SHIFT	derivative.h	16230;"	d
SIM_SCGC6_DSPI1_MASK	derivative.h	16231;"	d
SIM_SCGC6_DSPI1_SHIFT	derivative.h	16232;"	d
SIM_SCGC6_FLEXCAN0_MASK	derivative.h	16227;"	d
SIM_SCGC6_FLEXCAN0_SHIFT	derivative.h	16228;"	d
SIM_SCGC6_FTFE_MASK	derivative.h	19828;"	d
SIM_SCGC6_FTFE_SHIFT	derivative.h	19829;"	d
SIM_SCGC6_FTM0_MASK	derivative.h	16245;"	d
SIM_SCGC6_FTM0_SHIFT	derivative.h	16246;"	d
SIM_SCGC6_FTM1_MASK	derivative.h	16247;"	d
SIM_SCGC6_FTM1_SHIFT	derivative.h	16248;"	d
SIM_SCGC6_PDB_MASK	derivative.h	16241;"	d
SIM_SCGC6_PDB_SHIFT	derivative.h	16242;"	d
SIM_SCGC6_PIT_MASK	derivative.h	16243;"	d
SIM_SCGC6_PIT_SHIFT	derivative.h	16244;"	d
SIM_SCGC6_REG	derivative.h	15952;"	d
SIM_SCGC6_RTC_MASK	derivative.h	16253;"	d
SIM_SCGC6_RTC_SHIFT	derivative.h	16254;"	d
SIM_SCGC6_SAI0_MASK	derivative.h	16233;"	d
SIM_SCGC6_SAI0_SHIFT	derivative.h	16234;"	d
SIM_SCGC6_USBDCD_MASK	derivative.h	16239;"	d
SIM_SCGC6_USBDCD_SHIFT	derivative.h	16240;"	d
SIM_SCGC6_USBHS_MASK	derivative.h	16237;"	d
SIM_SCGC6_USBHS_SHIFT	derivative.h	16238;"	d
SIM_SCGC7	derivative.h	16405;"	d
SIM_SCGC7_DMA_MASK	derivative.h	16258;"	d
SIM_SCGC7_DMA_SHIFT	derivative.h	16259;"	d
SIM_SCGC7_FLEXBUS_MASK	derivative.h	16256;"	d
SIM_SCGC7_FLEXBUS_SHIFT	derivative.h	16257;"	d
SIM_SCGC7_MPU_MASK	derivative.h	16260;"	d
SIM_SCGC7_MPU_SHIFT	derivative.h	16261;"	d
SIM_SCGC7_PFLEXNVM_MASK	derivative.h	19830;"	d
SIM_SCGC7_PFLEXNVM_SHIFT	derivative.h	19831;"	d
SIM_SCGC7_REG	derivative.h	15953;"	d
SIM_SDID	derivative.h	16398;"	d
SIM_SDID_FAMID	derivative.h	16131;"	d
SIM_SDID_FAMID_MASK	derivative.h	16129;"	d
SIM_SDID_FAMID_SHIFT	derivative.h	16130;"	d
SIM_SDID_PINID	derivative.h	16128;"	d
SIM_SDID_PINID_MASK	derivative.h	16126;"	d
SIM_SDID_PINID_SHIFT	derivative.h	16127;"	d
SIM_SDID_REG	derivative.h	15946;"	d
SIM_SDID_REVID	derivative.h	16134;"	d
SIM_SDID_REVID_MASK	derivative.h	16132;"	d
SIM_SDID_REVID_SHIFT	derivative.h	16133;"	d
SIM_SOPT1	derivative.h	16391;"	d
SIM_SOPT1CFG	derivative.h	16392;"	d
SIM_SOPT1CFG_REG	derivative.h	15940;"	d
SIM_SOPT1CFG_URWE_MASK	derivative.h	15993;"	d
SIM_SOPT1CFG_URWE_SHIFT	derivative.h	15994;"	d
SIM_SOPT1CFG_USSWE_MASK	derivative.h	15997;"	d
SIM_SOPT1CFG_USSWE_SHIFT	derivative.h	15998;"	d
SIM_SOPT1CFG_UVSWE_MASK	derivative.h	15995;"	d
SIM_SOPT1CFG_UVSWE_SHIFT	derivative.h	15996;"	d
SIM_SOPT1_OSC32KSEL_MASK	derivative.h	15984;"	d
SIM_SOPT1_OSC32KSEL_SHIFT	derivative.h	15985;"	d
SIM_SOPT1_RAMSIZE	derivative.h	15983;"	d
SIM_SOPT1_RAMSIZE_MASK	derivative.h	15981;"	d
SIM_SOPT1_RAMSIZE_SHIFT	derivative.h	15982;"	d
SIM_SOPT1_REG	derivative.h	15939;"	d
SIM_SOPT1_USBREGEN_MASK	derivative.h	15990;"	d
SIM_SOPT1_USBREGEN_SHIFT	derivative.h	15991;"	d
SIM_SOPT1_USBSSTBY_MASK	derivative.h	15988;"	d
SIM_SOPT1_USBSSTBY_SHIFT	derivative.h	15989;"	d
SIM_SOPT1_USBVSTBY_MASK	derivative.h	15986;"	d
SIM_SOPT1_USBVSTBY_SHIFT	derivative.h	15987;"	d
SIM_SOPT2	derivative.h	16393;"	d
SIM_SOPT2_CLKOUTSEL	derivative.h	16007;"	d
SIM_SOPT2_CLKOUTSEL_MASK	derivative.h	16005;"	d
SIM_SOPT2_CLKOUTSEL_SHIFT	derivative.h	16006;"	d
SIM_SOPT2_CMTUARTPAD_MASK	derivative.h	16011;"	d
SIM_SOPT2_CMTUARTPAD_SHIFT	derivative.h	16012;"	d
SIM_SOPT2_ESDHCSRC	derivative.h	16035;"	d
SIM_SOPT2_ESDHCSRC_MASK	derivative.h	16033;"	d
SIM_SOPT2_ESDHCSRC_SHIFT	derivative.h	16034;"	d
SIM_SOPT2_FBSL	derivative.h	16010;"	d
SIM_SOPT2_FBSL_MASK	derivative.h	16008;"	d
SIM_SOPT2_FBSL_SHIFT	derivative.h	16009;"	d
SIM_SOPT2_LCDCSRC	derivative.h	16032;"	d
SIM_SOPT2_LCDCSRC_MASK	derivative.h	16030;"	d
SIM_SOPT2_LCDCSRC_SHIFT	derivative.h	16031;"	d
SIM_SOPT2_LCDC_CLKSEL_MASK	derivative.h	16015;"	d
SIM_SOPT2_LCDC_CLKSEL_SHIFT	derivative.h	16016;"	d
SIM_SOPT2_NFCSRC	derivative.h	16038;"	d
SIM_SOPT2_NFCSRC_MASK	derivative.h	16036;"	d
SIM_SOPT2_NFCSRC_SHIFT	derivative.h	16037;"	d
SIM_SOPT2_NFC_CLKSEL_MASK	derivative.h	16017;"	d
SIM_SOPT2_NFC_CLKSEL_SHIFT	derivative.h	16018;"	d
SIM_SOPT2_PLLFLLSEL	derivative.h	16021;"	d
SIM_SOPT2_PLLFLLSEL_MASK	derivative.h	16019;"	d
SIM_SOPT2_PLLFLLSEL_SHIFT	derivative.h	16020;"	d
SIM_SOPT2_REG	derivative.h	15941;"	d
SIM_SOPT2_RTCCLKOUTSEL_MASK	derivative.h	16003;"	d
SIM_SOPT2_RTCCLKOUTSEL_SHIFT	derivative.h	16004;"	d
SIM_SOPT2_TIMESRC	derivative.h	16026;"	d
SIM_SOPT2_TIMESRC_MASK	derivative.h	16024;"	d
SIM_SOPT2_TIMESRC_SHIFT	derivative.h	16025;"	d
SIM_SOPT2_TRACECLKSEL_MASK	derivative.h	16013;"	d
SIM_SOPT2_TRACECLKSEL_SHIFT	derivative.h	16014;"	d
SIM_SOPT2_USBFSRC	derivative.h	16029;"	d
SIM_SOPT2_USBFSRC_MASK	derivative.h	16027;"	d
SIM_SOPT2_USBFSRC_SHIFT	derivative.h	16028;"	d
SIM_SOPT2_USBF_CLKSEL_MASK	derivative.h	16022;"	d
SIM_SOPT2_USBF_CLKSEL_SHIFT	derivative.h	16023;"	d
SIM_SOPT2_USBHSRC	derivative.h	16002;"	d
SIM_SOPT2_USBHSRC_MASK	derivative.h	16000;"	d
SIM_SOPT2_USBHSRC_SHIFT	derivative.h	16001;"	d
SIM_SOPT4	derivative.h	16394;"	d
SIM_SOPT4_FTM0CLKSEL_MASK	derivative.h	16060;"	d
SIM_SOPT4_FTM0CLKSEL_SHIFT	derivative.h	16061;"	d
SIM_SOPT4_FTM0FLT0_MASK	derivative.h	16040;"	d
SIM_SOPT4_FTM0FLT0_SHIFT	derivative.h	16041;"	d
SIM_SOPT4_FTM0FLT1_MASK	derivative.h	16042;"	d
SIM_SOPT4_FTM0FLT1_SHIFT	derivative.h	16043;"	d
SIM_SOPT4_FTM0FLT2_MASK	derivative.h	16044;"	d
SIM_SOPT4_FTM0FLT2_SHIFT	derivative.h	16045;"	d
SIM_SOPT4_FTM0FLT3_MASK	derivative.h	16046;"	d
SIM_SOPT4_FTM0FLT3_SHIFT	derivative.h	16047;"	d
SIM_SOPT4_FTM0TRG0SRC_MASK	derivative.h	16068;"	d
SIM_SOPT4_FTM0TRG0SRC_SHIFT	derivative.h	16069;"	d
SIM_SOPT4_FTM0TRG1SRC_MASK	derivative.h	16070;"	d
SIM_SOPT4_FTM0TRG1SRC_SHIFT	derivative.h	16071;"	d
SIM_SOPT4_FTM1CH0SRC	derivative.h	16056;"	d
SIM_SOPT4_FTM1CH0SRC_MASK	derivative.h	16054;"	d
SIM_SOPT4_FTM1CH0SRC_SHIFT	derivative.h	16055;"	d
SIM_SOPT4_FTM1CLKSEL_MASK	derivative.h	16062;"	d
SIM_SOPT4_FTM1CLKSEL_SHIFT	derivative.h	16063;"	d
SIM_SOPT4_FTM1FLT0_MASK	derivative.h	16048;"	d
SIM_SOPT4_FTM1FLT0_SHIFT	derivative.h	16049;"	d
SIM_SOPT4_FTM2CH0SRC	derivative.h	16059;"	d
SIM_SOPT4_FTM2CH0SRC_MASK	derivative.h	16057;"	d
SIM_SOPT4_FTM2CH0SRC_SHIFT	derivative.h	16058;"	d
SIM_SOPT4_FTM2CLKSEL_MASK	derivative.h	16064;"	d
SIM_SOPT4_FTM2CLKSEL_SHIFT	derivative.h	16065;"	d
SIM_SOPT4_FTM2FLT0_MASK	derivative.h	16050;"	d
SIM_SOPT4_FTM2FLT0_SHIFT	derivative.h	16051;"	d
SIM_SOPT4_FTM3CLKSEL_MASK	derivative.h	16066;"	d
SIM_SOPT4_FTM3CLKSEL_SHIFT	derivative.h	16067;"	d
SIM_SOPT4_FTM3FLT0_MASK	derivative.h	16052;"	d
SIM_SOPT4_FTM3FLT0_SHIFT	derivative.h	16053;"	d
SIM_SOPT4_FTM3TRG0SRC_MASK	derivative.h	16072;"	d
SIM_SOPT4_FTM3TRG0SRC_SHIFT	derivative.h	16073;"	d
SIM_SOPT4_FTM3TRG1SRC_MASK	derivative.h	16074;"	d
SIM_SOPT4_FTM3TRG1SRC_SHIFT	derivative.h	16075;"	d
SIM_SOPT4_REG	derivative.h	15942;"	d
SIM_SOPT5	derivative.h	16395;"	d
SIM_SOPT5_REG	derivative.h	15943;"	d
SIM_SOPT5_UART0RXSRC	derivative.h	16082;"	d
SIM_SOPT5_UART0RXSRC_MASK	derivative.h	16080;"	d
SIM_SOPT5_UART0RXSRC_SHIFT	derivative.h	16081;"	d
SIM_SOPT5_UART0TXSRC	derivative.h	16079;"	d
SIM_SOPT5_UART0TXSRC_MASK	derivative.h	16077;"	d
SIM_SOPT5_UART0TXSRC_SHIFT	derivative.h	16078;"	d
SIM_SOPT5_UART1RXSRC	derivative.h	16088;"	d
SIM_SOPT5_UART1RXSRC_MASK	derivative.h	16086;"	d
SIM_SOPT5_UART1RXSRC_SHIFT	derivative.h	16087;"	d
SIM_SOPT5_UART1TXSRC	derivative.h	16085;"	d
SIM_SOPT5_UART1TXSRC_MASK	derivative.h	16083;"	d
SIM_SOPT5_UART1TXSRC_SHIFT	derivative.h	16084;"	d
SIM_SOPT6	derivative.h	16396;"	d
SIM_SOPT6_MCC	derivative.h	16092;"	d
SIM_SOPT6_MCC_MASK	derivative.h	16090;"	d
SIM_SOPT6_MCC_SHIFT	derivative.h	16091;"	d
SIM_SOPT6_PCR	derivative.h	16095;"	d
SIM_SOPT6_PCR_MASK	derivative.h	16093;"	d
SIM_SOPT6_PCR_SHIFT	derivative.h	16094;"	d
SIM_SOPT6_REG	derivative.h	15944;"	d
SIM_SOPT7	derivative.h	16397;"	d
SIM_SOPT7_ADC0ALTTRGEN_MASK	derivative.h	16102;"	d
SIM_SOPT7_ADC0ALTTRGEN_SHIFT	derivative.h	16103;"	d
SIM_SOPT7_ADC0PRETRGSEL_MASK	derivative.h	16100;"	d
SIM_SOPT7_ADC0PRETRGSEL_SHIFT	derivative.h	16101;"	d
SIM_SOPT7_ADC0TRGSEL	derivative.h	16099;"	d
SIM_SOPT7_ADC0TRGSEL_MASK	derivative.h	16097;"	d
SIM_SOPT7_ADC0TRGSEL_SHIFT	derivative.h	16098;"	d
SIM_SOPT7_ADC1ALTTRGEN_MASK	derivative.h	16109;"	d
SIM_SOPT7_ADC1ALTTRGEN_SHIFT	derivative.h	16110;"	d
SIM_SOPT7_ADC1PRETRGSEL_MASK	derivative.h	16107;"	d
SIM_SOPT7_ADC1PRETRGSEL_SHIFT	derivative.h	16108;"	d
SIM_SOPT7_ADC1TRGSEL	derivative.h	16106;"	d
SIM_SOPT7_ADC1TRGSEL_MASK	derivative.h	16104;"	d
SIM_SOPT7_ADC1TRGSEL_SHIFT	derivative.h	16105;"	d
SIM_SOPT7_ADC2ALTTRGEN_MASK	derivative.h	16116;"	d
SIM_SOPT7_ADC2ALTTRGEN_SHIFT	derivative.h	16117;"	d
SIM_SOPT7_ADC2PRETRGSEL_MASK	derivative.h	16114;"	d
SIM_SOPT7_ADC2PRETRGSEL_SHIFT	derivative.h	16115;"	d
SIM_SOPT7_ADC2TRGSEL	derivative.h	16113;"	d
SIM_SOPT7_ADC2TRGSEL_MASK	derivative.h	16111;"	d
SIM_SOPT7_ADC2TRGSEL_SHIFT	derivative.h	16112;"	d
SIM_SOPT7_ADC3ALTTRGEN_MASK	derivative.h	16123;"	d
SIM_SOPT7_ADC3ALTTRGEN_SHIFT	derivative.h	16124;"	d
SIM_SOPT7_ADC3PRETRGSEL_MASK	derivative.h	16121;"	d
SIM_SOPT7_ADC3PRETRGSEL_SHIFT	derivative.h	16122;"	d
SIM_SOPT7_ADC3TRGSEL	derivative.h	16120;"	d
SIM_SOPT7_ADC3TRGSEL_MASK	derivative.h	16118;"	d
SIM_SOPT7_ADC3TRGSEL_SHIFT	derivative.h	16119;"	d
SIM_SOPT7_REG	derivative.h	15945;"	d
SIM_UIDH	derivative.h	16410;"	d
SIM_UIDH_REG	derivative.h	15958;"	d
SIM_UIDH_UID	derivative.h	16311;"	d
SIM_UIDH_UID_MASK	derivative.h	16309;"	d
SIM_UIDH_UID_SHIFT	derivative.h	16310;"	d
SIM_UIDL	derivative.h	16413;"	d
SIM_UIDL_REG	derivative.h	15961;"	d
SIM_UIDL_UID	derivative.h	16323;"	d
SIM_UIDL_UID_MASK	derivative.h	16321;"	d
SIM_UIDL_UID_SHIFT	derivative.h	16322;"	d
SIM_UIDMH	derivative.h	16411;"	d
SIM_UIDMH_REG	derivative.h	15959;"	d
SIM_UIDMH_UID	derivative.h	16315;"	d
SIM_UIDMH_UID_MASK	derivative.h	16313;"	d
SIM_UIDMH_UID_SHIFT	derivative.h	16314;"	d
SIM_UIDML	derivative.h	16412;"	d
SIM_UIDML_REG	derivative.h	15960;"	d
SIM_UIDML_UID	derivative.h	16319;"	d
SIM_UIDML_UID_MASK	derivative.h	16317;"	d
SIM_UIDML_UID_SHIFT	derivative.h	16318;"	d
SLAST	derivative.h	/^    uint32_t SLAST;                                  \/**< TCD Last Source Address Adjustment, array offset: 0x100C, array step: 0x20 *\/$/;"	m	struct:DMA_MemMap::__anon15
SLAVE	derivative.h	/^  } SLAVE[8];$/;"	m	struct:AXBS_MemMap	typeref:struct:AXBS_MemMap::__anon3
SLEEPCNT	derivative.h	/^  uint32_t SLEEPCNT;                               \/**< Sleep Count Register, offset: 0x10 *\/$/;"	m	struct:DWT_MemMap
SLTH	derivative.h	/^  uint8_t SLTH;                                    \/**< I2C SCL Low Timeout Register High, offset: 0xA *\/$/;"	m	struct:I2C_MemMap
SLTL	derivative.h	/^  uint8_t SLTL;                                    \/**< I2C SCL Low Timeout Register Low, offset: 0xB *\/$/;"	m	struct:I2C_MemMap
SMB	derivative.h	/^  uint8_t SMB;                                     \/**< I2C SMBus Control and Status register, offset: 0x8 *\/$/;"	m	struct:I2C_MemMap
SMC_BASE_PTR	derivative.h	16509;"	d
SMC_BASE_PTRS	derivative.h	16511;"	d
SMC_MemMap	derivative.h	/^typedef struct SMC_MemMap {$/;"	s
SMC_MemMapPtr	derivative.h	/^} volatile *SMC_MemMapPtr;$/;"	t
SMC_PMCTRL	derivative.h	16526;"	d
SMC_PMCTRL_LPWUI_MASK	derivative.h	16491;"	d
SMC_PMCTRL_LPWUI_SHIFT	derivative.h	16492;"	d
SMC_PMCTRL_REG	derivative.h	16457;"	d
SMC_PMCTRL_RUNM	derivative.h	16490;"	d
SMC_PMCTRL_RUNM_MASK	derivative.h	16488;"	d
SMC_PMCTRL_RUNM_SHIFT	derivative.h	16489;"	d
SMC_PMCTRL_STOPA_MASK	derivative.h	16486;"	d
SMC_PMCTRL_STOPA_SHIFT	derivative.h	16487;"	d
SMC_PMCTRL_STOPM	derivative.h	16485;"	d
SMC_PMCTRL_STOPM_MASK	derivative.h	16483;"	d
SMC_PMCTRL_STOPM_SHIFT	derivative.h	16484;"	d
SMC_PMPROT	derivative.h	16525;"	d
SMC_PMPROT_ALLS_MASK	derivative.h	16478;"	d
SMC_PMPROT_ALLS_SHIFT	derivative.h	16479;"	d
SMC_PMPROT_AVLLS_MASK	derivative.h	16476;"	d
SMC_PMPROT_AVLLS_SHIFT	derivative.h	16477;"	d
SMC_PMPROT_AVLP_MASK	derivative.h	16480;"	d
SMC_PMPROT_AVLP_SHIFT	derivative.h	16481;"	d
SMC_PMPROT_REG	derivative.h	16456;"	d
SMC_PMSTAT	derivative.h	16528;"	d
SMC_PMSTAT_PMSTAT	derivative.h	16500;"	d
SMC_PMSTAT_PMSTAT_MASK	derivative.h	16498;"	d
SMC_PMSTAT_PMSTAT_SHIFT	derivative.h	16499;"	d
SMC_PMSTAT_REG	derivative.h	16459;"	d
SMC_VLLSCTRL	derivative.h	16527;"	d
SMC_VLLSCTRL_REG	derivative.h	16458;"	d
SMC_VLLSCTRL_VLLSM	derivative.h	16496;"	d
SMC_VLLSCTRL_VLLSM_MASK	derivative.h	16494;"	d
SMC_VLLSCTRL_VLLSM_SHIFT	derivative.h	16495;"	d
SOFF	derivative.h	/^    uint16_t SOFF;                                   \/**< TCD Signed Source Address Offset, array offset: 0x1004, array step: 0x20 *\/$/;"	m	struct:DMA_MemMap::__anon15
SOFTHLD	derivative.h	/^  uint8_t SOFTHLD;                                 \/**< SOF Threshold Register, offset: 0xAC *\/$/;"	m	struct:USB_MemMap
SOPT1	derivative.h	/^  uint32_t SOPT1;                                  \/**< System Options Register 1, offset: 0x0 *\/$/;"	m	struct:SIM_MemMap
SOPT1CFG	derivative.h	/^  uint32_t SOPT1CFG;                               \/**< SOPT1 Configuration Register, offset: 0x4 *\/$/;"	m	struct:SIM_MemMap
SOPT2	derivative.h	/^  uint32_t SOPT2;                                  \/**< System Options Register 2, offset: 0x1004 *\/$/;"	m	struct:SIM_MemMap
SOPT4	derivative.h	/^  uint32_t SOPT4;                                  \/**< System Options Register 4, offset: 0x100C *\/$/;"	m	struct:SIM_MemMap
SOPT5	derivative.h	/^  uint32_t SOPT5;                                  \/**< System Options Register 5, offset: 0x1010 *\/$/;"	m	struct:SIM_MemMap
SOPT6	derivative.h	/^  uint32_t SOPT6;                                  \/**< System Options Register 6, offset: 0x1014 *\/$/;"	m	struct:SIM_MemMap
SOPT7	derivative.h	/^  uint32_t SOPT7;                                  \/**< System Options Register 7, offset: 0x1018 *\/$/;"	m	struct:SIM_MemMap
SP	derivative.h	/^  } SP[5];$/;"	m	struct:MPU_MemMap	typeref:struct:MPU_MemMap::__anon25
SPI0_BASE_PTR	derivative.h	16824;"	d
SPI0_CTAR	derivative.h	16902;"	d
SPI0_CTAR0	derivative.h	16846;"	d
SPI0_CTAR0_SLAVE	derivative.h	16847;"	d
SPI0_CTAR1	derivative.h	16848;"	d
SPI0_CTAR_SLAVE	derivative.h	16905;"	d
SPI0_MCR	derivative.h	16844;"	d
SPI0_POPR	derivative.h	16853;"	d
SPI0_PUSHR	derivative.h	16851;"	d
SPI0_PUSHR_SLAVE	derivative.h	16852;"	d
SPI0_RSER	derivative.h	16850;"	d
SPI0_RXFR0	derivative.h	16858;"	d
SPI0_RXFR1	derivative.h	16859;"	d
SPI0_RXFR2	derivative.h	16860;"	d
SPI0_RXFR3	derivative.h	16861;"	d
SPI0_SR	derivative.h	16849;"	d
SPI0_TCR	derivative.h	16845;"	d
SPI0_TXFR0	derivative.h	16854;"	d
SPI0_TXFR1	derivative.h	16855;"	d
SPI0_TXFR2	derivative.h	16856;"	d
SPI0_TXFR3	derivative.h	16857;"	d
SPI1_BASE_PTR	derivative.h	16826;"	d
SPI1_CTAR	derivative.h	16903;"	d
SPI1_CTAR0	derivative.h	16865;"	d
SPI1_CTAR0_SLAVE	derivative.h	16866;"	d
SPI1_CTAR1	derivative.h	16867;"	d
SPI1_CTAR_SLAVE	derivative.h	16906;"	d
SPI1_MCR	derivative.h	16863;"	d
SPI1_POPR	derivative.h	16872;"	d
SPI1_PUSHR	derivative.h	16870;"	d
SPI1_PUSHR_SLAVE	derivative.h	16871;"	d
SPI1_RSER	derivative.h	16869;"	d
SPI1_RXFR0	derivative.h	16877;"	d
SPI1_RXFR1	derivative.h	16878;"	d
SPI1_RXFR2	derivative.h	16879;"	d
SPI1_RXFR3	derivative.h	16880;"	d
SPI1_SR	derivative.h	16868;"	d
SPI1_TCR	derivative.h	16864;"	d
SPI1_TXFR0	derivative.h	16873;"	d
SPI1_TXFR1	derivative.h	16874;"	d
SPI1_TXFR2	derivative.h	16875;"	d
SPI1_TXFR3	derivative.h	16876;"	d
SPI2_BASE_PTR	derivative.h	16828;"	d
SPI2_CTAR	derivative.h	16904;"	d
SPI2_CTAR0	derivative.h	16884;"	d
SPI2_CTAR0_SLAVE	derivative.h	16885;"	d
SPI2_CTAR1	derivative.h	16886;"	d
SPI2_CTAR_SLAVE	derivative.h	16907;"	d
SPI2_MCR	derivative.h	16882;"	d
SPI2_POPR	derivative.h	16891;"	d
SPI2_PUSHR	derivative.h	16889;"	d
SPI2_PUSHR_SLAVE	derivative.h	16890;"	d
SPI2_RSER	derivative.h	16888;"	d
SPI2_RXFR0	derivative.h	16896;"	d
SPI2_RXFR1	derivative.h	16897;"	d
SPI2_RXFR2	derivative.h	16898;"	d
SPI2_RXFR3	derivative.h	16899;"	d
SPI2_SR	derivative.h	16887;"	d
SPI2_TCR	derivative.h	16883;"	d
SPI2_TXFR0	derivative.h	16892;"	d
SPI2_TXFR1	derivative.h	16893;"	d
SPI2_TXFR2	derivative.h	16894;"	d
SPI2_TXFR3	derivative.h	16895;"	d
SPI_BASE_PTRS	derivative.h	16830;"	d
SPI_CTAR_ASC	derivative.h	16669;"	d
SPI_CTAR_ASC_MASK	derivative.h	16667;"	d
SPI_CTAR_ASC_SHIFT	derivative.h	16668;"	d
SPI_CTAR_BR	derivative.h	16663;"	d
SPI_CTAR_BR_MASK	derivative.h	16661;"	d
SPI_CTAR_BR_SHIFT	derivative.h	16662;"	d
SPI_CTAR_CPHA_MASK	derivative.h	16687;"	d
SPI_CTAR_CPHA_SHIFT	derivative.h	16688;"	d
SPI_CTAR_CPOL_MASK	derivative.h	16689;"	d
SPI_CTAR_CPOL_SHIFT	derivative.h	16690;"	d
SPI_CTAR_CSSCK	derivative.h	16672;"	d
SPI_CTAR_CSSCK_MASK	derivative.h	16670;"	d
SPI_CTAR_CSSCK_SHIFT	derivative.h	16671;"	d
SPI_CTAR_DBR_MASK	derivative.h	16694;"	d
SPI_CTAR_DBR_SHIFT	derivative.h	16695;"	d
SPI_CTAR_DT	derivative.h	16666;"	d
SPI_CTAR_DT_MASK	derivative.h	16664;"	d
SPI_CTAR_DT_SHIFT	derivative.h	16665;"	d
SPI_CTAR_FMSZ	derivative.h	16693;"	d
SPI_CTAR_FMSZ_MASK	derivative.h	16691;"	d
SPI_CTAR_FMSZ_SHIFT	derivative.h	16692;"	d
SPI_CTAR_LSBFE_MASK	derivative.h	16685;"	d
SPI_CTAR_LSBFE_SHIFT	derivative.h	16686;"	d
SPI_CTAR_PASC	derivative.h	16681;"	d
SPI_CTAR_PASC_MASK	derivative.h	16679;"	d
SPI_CTAR_PASC_SHIFT	derivative.h	16680;"	d
SPI_CTAR_PBR	derivative.h	16675;"	d
SPI_CTAR_PBR_MASK	derivative.h	16673;"	d
SPI_CTAR_PBR_SHIFT	derivative.h	16674;"	d
SPI_CTAR_PCSSCK	derivative.h	16684;"	d
SPI_CTAR_PCSSCK_MASK	derivative.h	16682;"	d
SPI_CTAR_PCSSCK_SHIFT	derivative.h	16683;"	d
SPI_CTAR_PDT	derivative.h	16678;"	d
SPI_CTAR_PDT_MASK	derivative.h	16676;"	d
SPI_CTAR_PDT_SHIFT	derivative.h	16677;"	d
SPI_CTAR_REG	derivative.h	16590;"	d
SPI_CTAR_SLAVE_CPHA_MASK	derivative.h	16697;"	d
SPI_CTAR_SLAVE_CPHA_SHIFT	derivative.h	16698;"	d
SPI_CTAR_SLAVE_CPOL_MASK	derivative.h	16699;"	d
SPI_CTAR_SLAVE_CPOL_SHIFT	derivative.h	16700;"	d
SPI_CTAR_SLAVE_FMSZ	derivative.h	16703;"	d
SPI_CTAR_SLAVE_FMSZ_MASK	derivative.h	16701;"	d
SPI_CTAR_SLAVE_FMSZ_SHIFT	derivative.h	16702;"	d
SPI_CTAR_SLAVE_REG	derivative.h	16591;"	d
SPI_MCR_CLR_RXF_MASK	derivative.h	16626;"	d
SPI_MCR_CLR_RXF_SHIFT	derivative.h	16627;"	d
SPI_MCR_CLR_TXF_MASK	derivative.h	16628;"	d
SPI_MCR_CLR_TXF_SHIFT	derivative.h	16629;"	d
SPI_MCR_CONT_SCKE_MASK	derivative.h	16652;"	d
SPI_MCR_CONT_SCKE_SHIFT	derivative.h	16653;"	d
SPI_MCR_DCONF	derivative.h	16651;"	d
SPI_MCR_DCONF_MASK	derivative.h	16649;"	d
SPI_MCR_DCONF_SHIFT	derivative.h	16650;"	d
SPI_MCR_DIS_RXF_MASK	derivative.h	16630;"	d
SPI_MCR_DIS_RXF_SHIFT	derivative.h	16631;"	d
SPI_MCR_DIS_TXF_MASK	derivative.h	16632;"	d
SPI_MCR_DIS_TXF_SHIFT	derivative.h	16633;"	d
SPI_MCR_DOZE_MASK	derivative.h	16636;"	d
SPI_MCR_DOZE_SHIFT	derivative.h	16637;"	d
SPI_MCR_FRZ_MASK	derivative.h	16647;"	d
SPI_MCR_FRZ_SHIFT	derivative.h	16648;"	d
SPI_MCR_HALT_MASK	derivative.h	16621;"	d
SPI_MCR_HALT_SHIFT	derivative.h	16622;"	d
SPI_MCR_MDIS_MASK	derivative.h	16634;"	d
SPI_MCR_MDIS_SHIFT	derivative.h	16635;"	d
SPI_MCR_MSTR_MASK	derivative.h	16654;"	d
SPI_MCR_MSTR_SHIFT	derivative.h	16655;"	d
SPI_MCR_MTFE_MASK	derivative.h	16645;"	d
SPI_MCR_MTFE_SHIFT	derivative.h	16646;"	d
SPI_MCR_PCSIS	derivative.h	16640;"	d
SPI_MCR_PCSIS_MASK	derivative.h	16638;"	d
SPI_MCR_PCSIS_SHIFT	derivative.h	16639;"	d
SPI_MCR_PCSSE_MASK	derivative.h	16643;"	d
SPI_MCR_PCSSE_SHIFT	derivative.h	16644;"	d
SPI_MCR_REG	derivative.h	16588;"	d
SPI_MCR_ROOE_MASK	derivative.h	16641;"	d
SPI_MCR_ROOE_SHIFT	derivative.h	16642;"	d
SPI_MCR_SMPL_PT	derivative.h	16625;"	d
SPI_MCR_SMPL_PT_MASK	derivative.h	16623;"	d
SPI_MCR_SMPL_PT_SHIFT	derivative.h	16624;"	d
SPI_MemMap	derivative.h	/^typedef struct SPI_MemMap {$/;"	s
SPI_MemMapPtr	derivative.h	/^} volatile *SPI_MemMapPtr;$/;"	t
SPI_POPR_REG	derivative.h	16596;"	d
SPI_POPR_RXDATA	derivative.h	16771;"	d
SPI_POPR_RXDATA_MASK	derivative.h	16769;"	d
SPI_POPR_RXDATA_SHIFT	derivative.h	16770;"	d
SPI_PUSHR_CONT_MASK	derivative.h	16762;"	d
SPI_PUSHR_CONT_SHIFT	derivative.h	16763;"	d
SPI_PUSHR_CTAS	derivative.h	16761;"	d
SPI_PUSHR_CTAS_MASK	derivative.h	16759;"	d
SPI_PUSHR_CTAS_SHIFT	derivative.h	16760;"	d
SPI_PUSHR_CTCNT_MASK	derivative.h	16755;"	d
SPI_PUSHR_CTCNT_SHIFT	derivative.h	16756;"	d
SPI_PUSHR_EOQ_MASK	derivative.h	16757;"	d
SPI_PUSHR_EOQ_SHIFT	derivative.h	16758;"	d
SPI_PUSHR_PCS	derivative.h	16754;"	d
SPI_PUSHR_PCS_MASK	derivative.h	16752;"	d
SPI_PUSHR_PCS_SHIFT	derivative.h	16753;"	d
SPI_PUSHR_REG	derivative.h	16594;"	d
SPI_PUSHR_SLAVE_REG	derivative.h	16595;"	d
SPI_PUSHR_SLAVE_TXDATA	derivative.h	16767;"	d
SPI_PUSHR_SLAVE_TXDATA_MASK	derivative.h	16765;"	d
SPI_PUSHR_SLAVE_TXDATA_SHIFT	derivative.h	16766;"	d
SPI_PUSHR_TXDATA	derivative.h	16751;"	d
SPI_PUSHR_TXDATA_MASK	derivative.h	16749;"	d
SPI_PUSHR_TXDATA_SHIFT	derivative.h	16750;"	d
SPI_RSER_EOQF_RE_MASK	derivative.h	16744;"	d
SPI_RSER_EOQF_RE_SHIFT	derivative.h	16745;"	d
SPI_RSER_REG	derivative.h	16593;"	d
SPI_RSER_RFDF_DIRS_MASK	derivative.h	16732;"	d
SPI_RSER_RFDF_DIRS_SHIFT	derivative.h	16733;"	d
SPI_RSER_RFDF_RE_MASK	derivative.h	16734;"	d
SPI_RSER_RFDF_RE_SHIFT	derivative.h	16735;"	d
SPI_RSER_RFOF_RE_MASK	derivative.h	16736;"	d
SPI_RSER_RFOF_RE_SHIFT	derivative.h	16737;"	d
SPI_RSER_TCF_RE_MASK	derivative.h	16746;"	d
SPI_RSER_TCF_RE_SHIFT	derivative.h	16747;"	d
SPI_RSER_TFFF_DIRS_MASK	derivative.h	16738;"	d
SPI_RSER_TFFF_DIRS_SHIFT	derivative.h	16739;"	d
SPI_RSER_TFFF_RE_MASK	derivative.h	16740;"	d
SPI_RSER_TFFF_RE_SHIFT	derivative.h	16741;"	d
SPI_RSER_TFUF_RE_MASK	derivative.h	16742;"	d
SPI_RSER_TFUF_RE_SHIFT	derivative.h	16743;"	d
SPI_RXFR0_REG	derivative.h	16601;"	d
SPI_RXFR0_RXDATA	derivative.h	16803;"	d
SPI_RXFR0_RXDATA_MASK	derivative.h	16801;"	d
SPI_RXFR0_RXDATA_SHIFT	derivative.h	16802;"	d
SPI_RXFR1_REG	derivative.h	16602;"	d
SPI_RXFR1_RXDATA	derivative.h	16807;"	d
SPI_RXFR1_RXDATA_MASK	derivative.h	16805;"	d
SPI_RXFR1_RXDATA_SHIFT	derivative.h	16806;"	d
SPI_RXFR2_REG	derivative.h	16603;"	d
SPI_RXFR2_RXDATA	derivative.h	16811;"	d
SPI_RXFR2_RXDATA_MASK	derivative.h	16809;"	d
SPI_RXFR2_RXDATA_SHIFT	derivative.h	16810;"	d
SPI_RXFR3_REG	derivative.h	16604;"	d
SPI_RXFR3_RXDATA	derivative.h	16815;"	d
SPI_RXFR3_RXDATA_MASK	derivative.h	16813;"	d
SPI_RXFR3_RXDATA_SHIFT	derivative.h	16814;"	d
SPI_SR_EOQF_MASK	derivative.h	16725;"	d
SPI_SR_EOQF_SHIFT	derivative.h	16726;"	d
SPI_SR_POPNXTPTR	derivative.h	16707;"	d
SPI_SR_POPNXTPTR_MASK	derivative.h	16705;"	d
SPI_SR_POPNXTPTR_SHIFT	derivative.h	16706;"	d
SPI_SR_REG	derivative.h	16592;"	d
SPI_SR_RFDF_MASK	derivative.h	16717;"	d
SPI_SR_RFDF_SHIFT	derivative.h	16718;"	d
SPI_SR_RFOF_MASK	derivative.h	16719;"	d
SPI_SR_RFOF_SHIFT	derivative.h	16720;"	d
SPI_SR_RXCTR	derivative.h	16710;"	d
SPI_SR_RXCTR_MASK	derivative.h	16708;"	d
SPI_SR_RXCTR_SHIFT	derivative.h	16709;"	d
SPI_SR_TCF_MASK	derivative.h	16729;"	d
SPI_SR_TCF_SHIFT	derivative.h	16730;"	d
SPI_SR_TFFF_MASK	derivative.h	16721;"	d
SPI_SR_TFFF_SHIFT	derivative.h	16722;"	d
SPI_SR_TFUF_MASK	derivative.h	16723;"	d
SPI_SR_TFUF_SHIFT	derivative.h	16724;"	d
SPI_SR_TXCTR	derivative.h	16716;"	d
SPI_SR_TXCTR_MASK	derivative.h	16714;"	d
SPI_SR_TXCTR_SHIFT	derivative.h	16715;"	d
SPI_SR_TXNXTPTR	derivative.h	16713;"	d
SPI_SR_TXNXTPTR_MASK	derivative.h	16711;"	d
SPI_SR_TXNXTPTR_SHIFT	derivative.h	16712;"	d
SPI_SR_TXRXS_MASK	derivative.h	16727;"	d
SPI_SR_TXRXS_SHIFT	derivative.h	16728;"	d
SPI_TCR_REG	derivative.h	16589;"	d
SPI_TCR_SPI_TCNT	derivative.h	16659;"	d
SPI_TCR_SPI_TCNT_MASK	derivative.h	16657;"	d
SPI_TCR_SPI_TCNT_SHIFT	derivative.h	16658;"	d
SPI_TXFR0_REG	derivative.h	16597;"	d
SPI_TXFR0_TXCMD_TXDATA	derivative.h	16778;"	d
SPI_TXFR0_TXCMD_TXDATA_MASK	derivative.h	16776;"	d
SPI_TXFR0_TXCMD_TXDATA_SHIFT	derivative.h	16777;"	d
SPI_TXFR0_TXDATA	derivative.h	16775;"	d
SPI_TXFR0_TXDATA_MASK	derivative.h	16773;"	d
SPI_TXFR0_TXDATA_SHIFT	derivative.h	16774;"	d
SPI_TXFR1_REG	derivative.h	16598;"	d
SPI_TXFR1_TXCMD_TXDATA	derivative.h	16785;"	d
SPI_TXFR1_TXCMD_TXDATA_MASK	derivative.h	16783;"	d
SPI_TXFR1_TXCMD_TXDATA_SHIFT	derivative.h	16784;"	d
SPI_TXFR1_TXDATA	derivative.h	16782;"	d
SPI_TXFR1_TXDATA_MASK	derivative.h	16780;"	d
SPI_TXFR1_TXDATA_SHIFT	derivative.h	16781;"	d
SPI_TXFR2_REG	derivative.h	16599;"	d
SPI_TXFR2_TXCMD_TXDATA	derivative.h	16792;"	d
SPI_TXFR2_TXCMD_TXDATA_MASK	derivative.h	16790;"	d
SPI_TXFR2_TXCMD_TXDATA_SHIFT	derivative.h	16791;"	d
SPI_TXFR2_TXDATA	derivative.h	16789;"	d
SPI_TXFR2_TXDATA_MASK	derivative.h	16787;"	d
SPI_TXFR2_TXDATA_SHIFT	derivative.h	16788;"	d
SPI_TXFR3_REG	derivative.h	16600;"	d
SPI_TXFR3_TXCMD_TXDATA	derivative.h	16799;"	d
SPI_TXFR3_TXCMD_TXDATA_MASK	derivative.h	16797;"	d
SPI_TXFR3_TXCMD_TXDATA_SHIFT	derivative.h	16798;"	d
SPI_TXFR3_TXDATA	derivative.h	16796;"	d
SPI_TXFR3_TXDATA_MASK	derivative.h	16794;"	d
SPI_TXFR3_TXDATA_SHIFT	derivative.h	16795;"	d
SPPR	derivative.h	/^  uint32_t SPPR;                                   \/**< Selected Pin Protocol Register, offset: 0xF0 *\/$/;"	m	struct:TPIU_MemMap
SR	derivative.h	/^  uint32_t SR;                                     \/**< DSPI Status Register, offset: 0x2C *\/$/;"	m	struct:SPI_MemMap
SR	derivative.h	/^  uint32_t SR;                                     \/**< ETM Status Register, offset: 0x10 *\/$/;"	m	struct:ETM_MemMap
SR	derivative.h	/^  uint32_t SR;                                     \/**< RNGA Status Register, offset: 0x4 *\/$/;"	m	struct:RNG_MemMap
SR	derivative.h	/^  uint32_t SR;                                     \/**< RTC Status Register, offset: 0x14 *\/$/;"	m	struct:RTC_MemMap
SR	derivative.h	/^  uint8_t SR;                                      \/**< DAC Status Register, offset: 0x20 *\/$/;"	m	struct:DAC_MemMap
SR1	derivative.h	/^  uint32_t SR1;                                    \/**< Flash status 1, offset: 0x3F18 *\/$/;"	m	struct:NFC_MemMap
SR2	derivative.h	/^  uint32_t SR2;                                    \/**< Flash status 2, offset: 0x3F1C *\/$/;"	m	struct:NFC_MemMap
SRS0	derivative.h	/^  uint8_t SRS0;                                    \/**< System Reset Status Register 0, offset: 0x0 *\/$/;"	m	struct:RCM_MemMap
SRS1	derivative.h	/^  uint8_t SRS1;                                    \/**< System Reset Status Register 1, offset: 0x1 *\/$/;"	m	struct:RCM_MemMap
SSPSR	derivative.h	/^  uint32_t SSPSR;                                  \/**< Supported Parallel Port Size Register, offset: 0x0 *\/$/;"	m	struct:TPIU_MemMap
SSRT	derivative.h	/^  uint8_t SSRT;                                    \/**< Set START Bit Register, offset: 0x1D *\/$/;"	m	struct:DMA_MemMap
STAT	derivative.h	/^  uint8_t STAT;                                    \/**< Status Register, offset: 0x90 *\/$/;"	m	struct:USB_MemMap
STATUS	derivative.h	/^  uint32_t STATUS;                                 \/**< Capture and Compare Status, offset: 0x50 *\/$/;"	m	struct:FTM_MemMap
STATUS	derivative.h	/^  uint32_t STATUS;                                 \/**< Status Register, offset: 0x8 *\/$/;"	m	struct:USBDCD_MemMap
STCTRLH	derivative.h	/^  uint16_t STCTRLH;                                \/**< Watchdog Status and Control Register High, offset: 0x0 *\/$/;"	m	struct:WDOG_MemMap
STCTRLL	derivative.h	/^  uint16_t STCTRLL;                                \/**< Watchdog Status and Control Register Low, offset: 0x2 *\/$/;"	m	struct:WDOG_MemMap
STIM_READ	derivative.h	/^    uint32_t STIM_READ[32];                          \/**< Stimulus Port Register 0 (for reading)..Stimulus Port Register 31 (for reading), array offset: 0x0, array step: 0x4 *\/$/;"	m	union:ITM_MemMap::__anon24
STIM_WRITE	derivative.h	/^    uint32_t STIM_WRITE[32];                         \/**< Stimulus Port Register 0 (for writing)..Stimulus Port Register 31 (for writing), array offset: 0x0, array step: 0x4 *\/$/;"	m	union:ITM_MemMap::__anon24
STIR	derivative.h	/^  uint32_t STIR[1];                                \/**< Software Trigger Interrupt Register, array offset: 0xE00, array step: 0x4 *\/$/;"	m	struct:NVIC_MemMap
STR_CA	derivative.h	/^  uint32_t STR_CA[9];                              \/**< General Purpose Register 0 - Store Register command..General Purpose Register 8 - Store Register command, array offset: 0x888, array step: 0x4 *\/$/;"	m	struct:CAU_MemMap
STR_CAA	derivative.h	/^  uint32_t STR_CAA;                                \/**< Accumulator register - Store Register command, offset: 0x884 *\/$/;"	m	struct:CAU_MemMap
STR_CASR	derivative.h	/^  uint32_t STR_CASR;                               \/**< Status register  - Store Register command, offset: 0x880 *\/$/;"	m	struct:CAU_MemMap
STS	derivative.h	/^  uint32_t STS;                                    \/**< Status Register, offset: 0xC *\/$/;"	m	struct:ETB_MemMap
SVCCapacitivePadInit	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCCapacitivePadInit(int arg0) {$/;"	f
SVCCapacitivePadInit	svc.c	/^void __attribute__((never_inline)) SVCCapacitivePadInit(int arg0) {$/;"	f
SVCCapacitivePadRead	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCCapacitivePadRead(int arg0) {$/;"	f
SVCCapacitivePadRead	svc.c	/^int __attribute__((never_inline)) SVCCapacitivePadRead(int arg0) {$/;"	f
SVCCreate	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCCreate(char * arg0) {$/;"	f
SVCCreate	svc.c	/^int __attribute__((never_inline)) SVCCreate(char * arg0) {$/;"	f
SVCDelete	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCDelete(char * filepath) {$/;"	f
SVCDelete	svc.c	/^int __attribute__((never_inline)) SVCDelete(char *filepath) {$/;"	f
SVCFClose	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCFClose(int fd) {$/;"	f
SVCFClose	svc.c	/^int __attribute__((never_inline)) SVCFClose(int fd) {$/;"	f
SVCFgetc	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCFgetc(int fd) {$/;"	f
SVCFgetc	svc.c	/^int __attribute__((never_inline)) SVCFgetc(int fd) {$/;"	f
SVCFputc	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCFputc(int ch, int fd) {$/;"	f
SVCFputc	svc.c	/^int __attribute__((never_inline)) SVCFputc(int ch, int fd) {$/;"	f
SVCFree	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCFree(void * arg0) {$/;"	f
SVCFree	svc.c	/^void __attribute__((never_inline)) SVCFree(void * arg0) {$/;"	f
SVCLcdcInit	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCLcdcInit(int arg0) {$/;"	f
SVCLcdcInit	svc.c	/^void __attribute__((never_inline)) SVCLcdcInit(int arg0) {$/;"	f
SVCLcdcWrite	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCLcdcWrite(int arg0, int arg1) {$/;"	f
SVCLcdcWrite	svc.c	/^void __attribute__((never_inline)) SVCLcdcWrite(int arg0, int arg1) {$/;"	f
SVCLedInit	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCLedInit(int arg0) {$/;"	f
SVCLedInit	svc.c	/^void __attribute__((never_inline)) SVCLedInit(int arg0) {$/;"	f
SVCLedWrite	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCLedWrite(int arg0, int arg1) {$/;"	f
SVCLedWrite	svc.c	/^void __attribute__((never_inline)) SVCLedWrite(int arg0, int arg1) {$/;"	f
SVCMalloc	svc.c	/^void * __attribute__((naked)) __attribute__((noinline)) SVCMalloc(unsigned arg0) {$/;"	f
SVCMalloc	svc.c	/^void * __attribute__((never_inline)) SVCMalloc(unsigned arg0) {$/;"	f
SVCMyopen	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCMyopen($/;"	f
SVCMyopen	svc.c	/^int __attribute__((never_inline)) SVCMyopen($/;"	f
SVCPotentiometerInit	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCPotentiometerInit(int arg0) {$/;"	f
SVCPotentiometerInit	svc.c	/^void __attribute__((never_inline)) SVCPotentiometerInit(int arg0) {$/;"	f
SVCPotentiometerRead	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCPotentiometerRead(int arg0) {$/;"	f
SVCPotentiometerRead	svc.c	/^int __attribute__((never_inline)) SVCPotentiometerRead(int arg0) {$/;"	f
SVCPushButtonInit	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCPushButtonInit(int arg0) {$/;"	f
SVCPushButtonInit	svc.c	/^void __attribute__((never_inline)) SVCPushButtonInit(int arg0) {$/;"	f
SVCPushButtonRead	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCPushButtonRead(int arg0) {$/;"	f
SVCPushButtonRead	svc.c	/^int __attribute__((never_inline)) SVCPushButtonRead(int arg0) {$/;"	f
SVCUartInit	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCUartInit(int arg0) {$/;"	f
SVCUartInit	svc.c	/^void __attribute__((never_inline)) SVCUartInit(int arg0) {$/;"	f
SVCUartRead	svc.c	/^int __attribute__((naked)) __attribute__((noinline)) SVCUartRead(int arg0) {$/;"	f
SVCUartRead	svc.c	/^int __attribute__((never_inline)) SVCUartRead(int arg0) {$/;"	f
SVCUartWrite	svc.c	/^void __attribute__((naked)) __attribute__((noinline)) SVCUartWrite(int arg0, int arg1) {$/;"	f
SVCUartWrite	svc.c	/^void __attribute__((never_inline)) SVCUartWrite(int arg0, int arg1) {$/;"	f
SVC_CAPACITIVEPAD_INIT	svc.h	37;"	d
SVC_CAPACITIVEPAD_READ	svc.h	38;"	d
SVC_FILE_CREATE	svc.h	45;"	d
SVC_FILE_DELETE	svc.h	46;"	d
SVC_FREE	svc.h	40;"	d
SVC_LCDC_INIT	svc.h	29;"	d
SVC_LCDC_WRITE	svc.h	30;"	d
SVC_LED_INIT	svc.h	19;"	d
SVC_LED_WRITE	svc.h	20;"	d
SVC_MALLOC	svc.h	39;"	d
SVC_MYCLOSE	svc.h	42;"	d
SVC_MYOPEN	svc.h	41;"	d
SVC_MYREAD	svc.h	43;"	d
SVC_MYWRITE	svc.h	44;"	d
SVC_MaxPriority	svc.h	15;"	d
SVC_POTENTIOMETER_INIT	svc.h	32;"	d
SVC_POTENTIOMETER_READ	svc.h	33;"	d
SVC_PUSHBUTTON_INIT	svc.h	22;"	d
SVC_PUSHBUTTON_READ	svc.h	23;"	d
SVC_PriorityShift	svc.h	16;"	d
SVC_THERMISTOR_INIT	svc.h	35;"	d
SVC_THERMISTOR_READ	svc.h	36;"	d
SVC_UART_INIT	svc.h	25;"	d
SVC_UART_READ	svc.h	27;"	d
SVC_UART_WRITE	svc.h	26;"	d
SWAP	derivative.h	/^  uint32_t SWAP;                                   \/**< Cach swap, offset: 0x3F28 *\/$/;"	m	struct:NFC_MemMap
SWOCTRL	derivative.h	/^  uint32_t SWOCTRL;                                \/**< FTM Software Output Control, offset: 0x94 *\/$/;"	m	struct:FTM_MemMap
SYNC	derivative.h	/^  uint32_t SYNC;                                   \/**< Synchronization, offset: 0x58 *\/$/;"	m	struct:FTM_MemMap
SYNCFR	derivative.h	/^  uint32_t SYNCFR;                                 \/**< Synchronization Frequency Register, offset: 0x1E0 *\/$/;"	m	struct:ETM_MemMap
SYNCONF	derivative.h	/^  uint32_t SYNCONF;                                \/**< Synchronization Configuration, offset: 0x8C *\/$/;"	m	struct:FTM_MemMap
SYSCTL	derivative.h	/^  uint32_t SYSCTL;                                 \/**< System Control Register, offset: 0x2C *\/$/;"	m	struct:SDHC_MemMap
SYST_CALIB	derivative.h	17018;"	d
SYST_CSR	derivative.h	17015;"	d
SYST_CVR	derivative.h	17017;"	d
SYST_RVR	derivative.h	17016;"	d
SysTick_BASE_PTR	derivative.h	16999;"	d
SysTick_BASE_PTRS	derivative.h	17001;"	d
SysTick_CALIB_NOREF_MASK	derivative.h	16989;"	d
SysTick_CALIB_NOREF_SHIFT	derivative.h	16990;"	d
SysTick_CALIB_REG	derivative.h	16950;"	d
SysTick_CALIB_SKEW_MASK	derivative.h	16987;"	d
SysTick_CALIB_SKEW_SHIFT	derivative.h	16988;"	d
SysTick_CALIB_TENMS	derivative.h	16986;"	d
SysTick_CALIB_TENMS_MASK	derivative.h	16984;"	d
SysTick_CALIB_TENMS_SHIFT	derivative.h	16985;"	d
SysTick_CSR_CLKSOURCE_MASK	derivative.h	16971;"	d
SysTick_CSR_CLKSOURCE_SHIFT	derivative.h	16972;"	d
SysTick_CSR_COUNTFLAG_MASK	derivative.h	16973;"	d
SysTick_CSR_COUNTFLAG_SHIFT	derivative.h	16974;"	d
SysTick_CSR_ENABLE_MASK	derivative.h	16967;"	d
SysTick_CSR_ENABLE_SHIFT	derivative.h	16968;"	d
SysTick_CSR_REG	derivative.h	16947;"	d
SysTick_CSR_TICKINT_MASK	derivative.h	16969;"	d
SysTick_CSR_TICKINT_SHIFT	derivative.h	16970;"	d
SysTick_CVR_CURRENT	derivative.h	16982;"	d
SysTick_CVR_CURRENT_MASK	derivative.h	16980;"	d
SysTick_CVR_CURRENT_SHIFT	derivative.h	16981;"	d
SysTick_CVR_REG	derivative.h	16949;"	d
SysTick_MemMap	derivative.h	/^typedef struct SysTick_MemMap {$/;"	s
SysTick_MemMapPtr	derivative.h	/^} volatile *SysTick_MemMapPtr;$/;"	t
SysTick_RVR_REG	derivative.h	16948;"	d
SysTick_RVR_RELOAD	derivative.h	16978;"	d
SysTick_RVR_RELOAD_MASK	derivative.h	16976;"	d
SysTick_RVR_RELOAD_SHIFT	derivative.h	16977;"	d
SystemControl_BASE_PTR	derivative.h	15320;"	d
TACC	derivative.h	/^  uint32_t TACC;                                   \/**< Transmit Accelerator Function Configuration, offset: 0x1C0 *\/$/;"	m	struct:ENET_MemMap
TAEM	derivative.h	/^  uint32_t TAEM;                                   \/**< Transmit FIFO Almost Empty Threshold, offset: 0x1A4 *\/$/;"	m	struct:ENET_MemMap
TAFL	derivative.h	/^  uint32_t TAFL;                                   \/**< Transmit FIFO Almost Full Threshold, offset: 0x1A8 *\/$/;"	m	struct:ENET_MemMap
TAGVD	derivative.h	/^  uint32_t TAGVD[4][4];                            \/**< Cache Tag Storage, array offset: 0x100, array step: index*0x10, index2*0x4 *\/$/;"	m	struct:FMC_MemMap
TAR	derivative.h	/^  uint32_t TAR;                                    \/**< RTC Time Alarm Register, offset: 0x8 *\/$/;"	m	struct:RTC_MemMap
TCCR	derivative.h	/^    uint32_t TCCR;                                   \/**< Timer Compare Capture Register, array offset: 0x60C, array step: 0x8 *\/$/;"	m	struct:ENET_MemMap::__anon20
TCD	derivative.h	/^  } TCD[32];$/;"	m	struct:DMA_MemMap	typeref:struct:DMA_MemMap::__anon15
TCFIFO	derivative.h	/^  uint8_t TCFIFO;                                  \/**< UART FIFO Transmit Count, offset: 0x14 *\/$/;"	m	struct:UART_MemMap
TCR	derivative.h	/^  uint32_t TCR;                                    \/**< DSPI Transfer Count Register, offset: 0x8 *\/$/;"	m	struct:SPI_MemMap
TCR	derivative.h	/^  uint32_t TCR;                                    \/**< RTC Time Compensation Register, offset: 0xC *\/$/;"	m	struct:RTC_MemMap
TCR	derivative.h	/^  uint32_t TCR;                                    \/**< Trace Control Register, offset: 0xE80 *\/$/;"	m	struct:ITM_MemMap
TCR	derivative.h	/^  uint32_t TCR;                                    \/**< Transmit Control Register, offset: 0xC4 *\/$/;"	m	struct:ENET_MemMap
TCR1	derivative.h	/^  uint32_t TCR1;                                   \/**< SAI Transmit Configuration 1 Register, offset: 0x4 *\/$/;"	m	struct:I2S_MemMap
TCR2	derivative.h	/^  uint32_t TCR2;                                   \/**< SAI Transmit Configuration 2 Register, offset: 0x8 *\/$/;"	m	struct:I2S_MemMap
TCR3	derivative.h	/^  uint32_t TCR3;                                   \/**< SAI Transmit Configuration 3 Register, offset: 0xC *\/$/;"	m	struct:I2S_MemMap
TCR4	derivative.h	/^  uint32_t TCR4;                                   \/**< SAI Transmit Configuration 4 Register, offset: 0x10 *\/$/;"	m	struct:I2S_MemMap
TCR5	derivative.h	/^  uint32_t TCR5;                                   \/**< SAI Transmit Configuration 5 Register, offset: 0x14 *\/$/;"	m	struct:I2S_MemMap
TCSR	derivative.h	/^    uint32_t TCSR;                                   \/**< Timer Control Status Register, array offset: 0x608, array step: 0x8 *\/$/;"	m	struct:ENET_MemMap::__anon20
TCSR	derivative.h	/^  uint32_t TCSR;                                   \/**< SAI Transmit Control Register, offset: 0x0 *\/$/;"	m	struct:I2S_MemMap
TCTRL	derivative.h	/^    uint32_t TCTRL;                                  \/**< Timer Control Register, array offset: 0x108, array step: 0x10 *\/$/;"	m	struct:PIT_MemMap::__anon28
TDAR	derivative.h	/^  uint32_t TDAR;                                   \/**< Transmit Descriptor Active Register, offset: 0x14 *\/$/;"	m	struct:ENET_MemMap
TDR	derivative.h	/^  uint32_t TDR[2];                                 \/**< SAI Transmit Data Register, array offset: 0x20, array step: 0x4 *\/$/;"	m	struct:I2S_MemMap
TDSR	derivative.h	/^  uint32_t TDSR;                                   \/**< Transmit Buffer Descriptor Ring Start Register, offset: 0x184 *\/$/;"	m	struct:ENET_MemMap
TECR1	derivative.h	/^  uint32_t TECR1;                                  \/**< Trace Enable Control 1 Register, offset: 0x24 *\/$/;"	m	struct:ETM_MemMap
TER	derivative.h	/^  uint32_t TER;                                    \/**< Trace Enable Register, offset: 0xE00 *\/$/;"	m	struct:ITM_MemMap
TESSEICR	derivative.h	/^  uint32_t TESSEICR;                               \/**< TraceEnable Start\/Stop EmbeddedICE Control Register, offset: 0x1F0 *\/$/;"	m	struct:ETM_MemMap
TFLG	derivative.h	/^    uint32_t TFLG;                                   \/**< Timer Flag Register, array offset: 0x10C, array step: 0x10 *\/$/;"	m	struct:PIT_MemMap::__anon28
TFR	derivative.h	/^  uint32_t TFR[2];                                 \/**< SAI Transmit FIFO Register, array offset: 0x40, array step: 0x4 *\/$/;"	m	struct:I2S_MemMap
TFWR	derivative.h	/^  uint32_t TFWR;                                   \/**< Transmit FIFO Watermark Register, offset: 0x144 *\/$/;"	m	struct:ENET_MemMap
TGSR	derivative.h	/^  uint32_t TGSR;                                   \/**< Timer Global Status Register, offset: 0x604 *\/$/;"	m	struct:ENET_MemMap
THERMISTOR	io.h	/^    THERMISTOR,$/;"	e	enum:__anon37
THERMISTOR1	io.h	/^typedef enum { THERMISTOR1} thermistor_minor_device; $/;"	e	enum:__anon42
THRESHOLD	derivative.h	/^  uint32_t THRESHOLD;                              \/**< Low Power Channel Threshold Register, offset: 0x120 *\/$/;"	m	struct:TSI_MemMap
THRESHOLD_OFFSET	capacitivepadsdriver.c	23;"	d	file:
TIDT	derivative.h	/^  uint8_t TIDT;                                    \/**< UART CEA709.1-B Transmit Indeterminate Time, offset: 0x31 *\/$/;"	m	struct:UART_MemMap
TIMER	derivative.h	/^  uint32_t TIMER;                                  \/**< Free Running Timer, offset: 0x8 *\/$/;"	m	struct:CAN_MemMap
TIMER0	derivative.h	/^  uint32_t TIMER0;                                 \/**< TIMER0 Register, offset: 0x10 *\/$/;"	m	struct:USBDCD_MemMap
TIMER1	derivative.h	/^  uint32_t TIMER1;                                 \/**< , offset: 0x14 *\/$/;"	m	struct:USBDCD_MemMap
TIMER2	derivative.h	/^  uint32_t TIMER2;                                 \/**< , offset: 0x18 *\/$/;"	m	struct:USBDCD_MemMap
TIPG	derivative.h	/^  uint32_t TIPG;                                   \/**< Transmit Inter-Packet Gap, offset: 0x1AC *\/$/;"	m	struct:ENET_MemMap
TL7816	derivative.h	/^  uint8_t TL7816;                                  \/**< UART 7816 Transmit Length Register, offset: 0x1F *\/$/;"	m	struct:UART_MemMap
TMR	derivative.h	/^  uint32_t TMR;                                    \/**< SAI Transmit Mask Register, offset: 0x60 *\/$/;"	m	struct:I2S_MemMap
TMROUTH	derivative.h	/^  uint16_t TMROUTH;                                \/**< Watchdog Timer Output Register High, offset: 0x10 *\/$/;"	m	struct:WDOG_MemMap
TMROUTL	derivative.h	/^  uint16_t TMROUTL;                                \/**< Watchdog Timer Output Register Low, offset: 0x12 *\/$/;"	m	struct:WDOG_MemMap
TOKEN	derivative.h	/^  uint8_t TOKEN;                                   \/**< Token Register, offset: 0xA8 *\/$/;"	m	struct:USB_MemMap
TOVALH	derivative.h	/^  uint16_t TOVALH;                                 \/**< Watchdog Time-out Value Register High, offset: 0x4 *\/$/;"	m	struct:WDOG_MemMap
TOVALL	derivative.h	/^  uint16_t TOVALL;                                 \/**< Watchdog Time-out Value Register Low, offset: 0x6 *\/$/;"	m	struct:WDOG_MemMap
TPIU_ACPR	derivative.h	17159;"	d
TPIU_ACPR_REG	derivative.h	17092;"	d
TPIU_BASE_PTR	derivative.h	17141;"	d
TPIU_BASE_PTRS	derivative.h	17143;"	d
TPIU_CID0	derivative.h	17181;"	d
TPIU_CID0_REG	derivative.h	17114;"	d
TPIU_CID1	derivative.h	17182;"	d
TPIU_CID1_REG	derivative.h	17115;"	d
TPIU_CID2	derivative.h	17183;"	d
TPIU_CID2_REG	derivative.h	17116;"	d
TPIU_CID3	derivative.h	17184;"	d
TPIU_CID4_REG	derivative.h	17117;"	d
TPIU_CLAIMCLR	derivative.h	17171;"	d
TPIU_CLAIMCLR_REG	derivative.h	17104;"	d
TPIU_CLAIMSET	derivative.h	17170;"	d
TPIU_CLAIMSET_REG	derivative.h	17103;"	d
TPIU_CSPSR	derivative.h	17158;"	d
TPIU_CSPSR_REG	derivative.h	17091;"	d
TPIU_DEVID	derivative.h	17172;"	d
TPIU_DEVID_REG	derivative.h	17105;"	d
TPIU_FFCR	derivative.h	17162;"	d
TPIU_FFCR_REG	derivative.h	17095;"	d
TPIU_FFSR	derivative.h	17161;"	d
TPIU_FFSR_REG	derivative.h	17094;"	d
TPIU_FIFODATA0	derivative.h	17165;"	d
TPIU_FIFODATA0_REG	derivative.h	17098;"	d
TPIU_FIFODATA1	derivative.h	17168;"	d
TPIU_FIFODATA1_REG	derivative.h	17101;"	d
TPIU_FSCR	derivative.h	17163;"	d
TPIU_FSCR_REG	derivative.h	17096;"	d
TPIU_ITATBCTR0	derivative.h	17167;"	d
TPIU_ITATBCTR0_REG	derivative.h	17100;"	d
TPIU_ITATBCTR2	derivative.h	17166;"	d
TPIU_ITATBCTR2_REG	derivative.h	17099;"	d
TPIU_ITCTRL	derivative.h	17169;"	d
TPIU_ITCTRL_REG	derivative.h	17102;"	d
TPIU_MemMap	derivative.h	/^typedef struct TPIU_MemMap {$/;"	s
TPIU_MemMapPtr	derivative.h	/^} volatile *TPIU_MemMapPtr;$/;"	t
TPIU_PID0	derivative.h	17177;"	d
TPIU_PID0_REG	derivative.h	17110;"	d
TPIU_PID1	derivative.h	17178;"	d
TPIU_PID1_REG	derivative.h	17111;"	d
TPIU_PID2	derivative.h	17179;"	d
TPIU_PID2_REG	derivative.h	17112;"	d
TPIU_PID3	derivative.h	17180;"	d
TPIU_PID3_REG	derivative.h	17113;"	d
TPIU_PID4	derivative.h	17173;"	d
TPIU_PID4_REG	derivative.h	17106;"	d
TPIU_PID5	derivative.h	17174;"	d
TPIU_PID5_REG	derivative.h	17107;"	d
TPIU_PID6	derivative.h	17175;"	d
TPIU_PID6_REG	derivative.h	17108;"	d
TPIU_PID7	derivative.h	17176;"	d
TPIU_PID7_REG	derivative.h	17109;"	d
TPIU_SPPR	derivative.h	17160;"	d
TPIU_SPPR_REG	derivative.h	17093;"	d
TPIU_SSPSR	derivative.h	17157;"	d
TPIU_SSPSR_REG	derivative.h	17090;"	d
TPIU_TRIGGER	derivative.h	17164;"	d
TPIU_TRIGGER_REG	derivative.h	17097;"	d
TPL	derivative.h	/^  uint8_t TPL;                                     \/**< UART CEA709.1-B Transmit Packet Length, offset: 0x28 *\/$/;"	m	struct:UART_MemMap
TPR	derivative.h	/^  uint32_t TPR;                                    \/**< RTC Time Prescaler Register, offset: 0x4 *\/$/;"	m	struct:RTC_MemMap
TPR	derivative.h	/^  uint32_t TPR;                                    \/**< Trace Privilege Register, offset: 0xE40 *\/$/;"	m	struct:ITM_MemMap
TRACEIDR	derivative.h	/^  uint32_t TRACEIDR;                               \/**< CoreSight Trace ID Register, offset: 0x200 *\/$/;"	m	struct:ETM_MemMap
TRG	derivative.h	/^  uint32_t TRG;                                    \/**< Trigger Counter Register, offset: 0x1C *\/$/;"	m	struct:ETB_MemMap
TRIGGER	derivative.h	/^  uint32_t TRIGGER;                                \/**< Trigger Event Register, offset: 0x8 *\/$/;"	m	struct:ETM_MemMap
TRIGGER	derivative.h	/^  uint32_t TRIGGER;                                \/**< Trigger Register, offset: 0xEE8 *\/$/;"	m	struct:TPIU_MemMap
TRM	derivative.h	/^  uint8_t TRM;                                     \/**< VREF Trim Register, offset: 0x0 *\/$/;"	m	struct:VREF_MemMap
TRUE	potentiometerdriver.h	7;"	d
TRUE	thermistordriver.h	6;"	d
TSEM	derivative.h	/^  uint32_t TSEM;                                   \/**< Transmit FIFO Section Empty Threshold, offset: 0x1A0 *\/$/;"	m	struct:ENET_MemMap
TSEVR	derivative.h	/^  uint32_t TSEVR;                                  \/**< Timestamp Event Register, offset: 0x1F8 *\/$/;"	m	struct:ETM_MemMap
TSI0_BASE_PTR	derivative.h	17425;"	d
TSI0_CNTR1	derivative.h	17445;"	d
TSI0_CNTR11	derivative.h	17450;"	d
TSI0_CNTR13	derivative.h	17451;"	d
TSI0_CNTR15	derivative.h	17452;"	d
TSI0_CNTR3	derivative.h	17446;"	d
TSI0_CNTR5	derivative.h	17447;"	d
TSI0_CNTR7	derivative.h	17448;"	d
TSI0_CNTR9	derivative.h	17449;"	d
TSI0_GENCS	derivative.h	17441;"	d
TSI0_PEN	derivative.h	17443;"	d
TSI0_SCANC	derivative.h	17442;"	d
TSI0_THRESHOLD	derivative.h	17453;"	d
TSI0_WUCNTR	derivative.h	17444;"	d
TSI_BASE_PTRS	derivative.h	17427;"	d
TSI_CNTR11_CTN	derivative.h	17395;"	d
TSI_CNTR11_CTN1	derivative.h	17392;"	d
TSI_CNTR11_CTN1_MASK	derivative.h	17390;"	d
TSI_CNTR11_CTN1_SHIFT	derivative.h	17391;"	d
TSI_CNTR11_CTN_MASK	derivative.h	17393;"	d
TSI_CNTR11_CTN_SHIFT	derivative.h	17394;"	d
TSI_CNTR11_REG	derivative.h	17243;"	d
TSI_CNTR13_CTN	derivative.h	17402;"	d
TSI_CNTR13_CTN1	derivative.h	17399;"	d
TSI_CNTR13_CTN1_MASK	derivative.h	17397;"	d
TSI_CNTR13_CTN1_SHIFT	derivative.h	17398;"	d
TSI_CNTR13_CTN_MASK	derivative.h	17400;"	d
TSI_CNTR13_CTN_SHIFT	derivative.h	17401;"	d
TSI_CNTR13_REG	derivative.h	17244;"	d
TSI_CNTR15_CTN	derivative.h	17409;"	d
TSI_CNTR15_CTN1	derivative.h	17406;"	d
TSI_CNTR15_CTN1_MASK	derivative.h	17404;"	d
TSI_CNTR15_CTN1_SHIFT	derivative.h	17405;"	d
TSI_CNTR15_CTN_MASK	derivative.h	17407;"	d
TSI_CNTR15_CTN_SHIFT	derivative.h	17408;"	d
TSI_CNTR15_REG	derivative.h	17245;"	d
TSI_CNTR1_CTN	derivative.h	17360;"	d
TSI_CNTR1_CTN1	derivative.h	17357;"	d
TSI_CNTR1_CTN1_MASK	derivative.h	17355;"	d
TSI_CNTR1_CTN1_SHIFT	derivative.h	17356;"	d
TSI_CNTR1_CTN_MASK	derivative.h	17358;"	d
TSI_CNTR1_CTN_SHIFT	derivative.h	17359;"	d
TSI_CNTR1_REG	derivative.h	17238;"	d
TSI_CNTR3_CTN	derivative.h	17367;"	d
TSI_CNTR3_CTN1	derivative.h	17364;"	d
TSI_CNTR3_CTN1_MASK	derivative.h	17362;"	d
TSI_CNTR3_CTN1_SHIFT	derivative.h	17363;"	d
TSI_CNTR3_CTN_MASK	derivative.h	17365;"	d
TSI_CNTR3_CTN_SHIFT	derivative.h	17366;"	d
TSI_CNTR3_REG	derivative.h	17239;"	d
TSI_CNTR5_CTN	derivative.h	17374;"	d
TSI_CNTR5_CTN1	derivative.h	17371;"	d
TSI_CNTR5_CTN1_MASK	derivative.h	17369;"	d
TSI_CNTR5_CTN1_SHIFT	derivative.h	17370;"	d
TSI_CNTR5_CTN_MASK	derivative.h	17372;"	d
TSI_CNTR5_CTN_SHIFT	derivative.h	17373;"	d
TSI_CNTR5_REG	derivative.h	17240;"	d
TSI_CNTR7_CTN	derivative.h	17381;"	d
TSI_CNTR7_CTN1	derivative.h	17378;"	d
TSI_CNTR7_CTN1_MASK	derivative.h	17376;"	d
TSI_CNTR7_CTN1_SHIFT	derivative.h	17377;"	d
TSI_CNTR7_CTN_MASK	derivative.h	17379;"	d
TSI_CNTR7_CTN_SHIFT	derivative.h	17380;"	d
TSI_CNTR7_REG	derivative.h	17241;"	d
TSI_CNTR9_CTN	derivative.h	17388;"	d
TSI_CNTR9_CTN1	derivative.h	17385;"	d
TSI_CNTR9_CTN1_MASK	derivative.h	17383;"	d
TSI_CNTR9_CTN1_SHIFT	derivative.h	17384;"	d
TSI_CNTR9_CTN_MASK	derivative.h	17386;"	d
TSI_CNTR9_CTN_SHIFT	derivative.h	17387;"	d
TSI_CNTR9_REG	derivative.h	17242;"	d
TSI_Calibrate	capacitivepadsdriver.c	/^void TSI_Calibrate(void) {$/;"	f
TSI_GENCS_EOSF_MASK	derivative.h	17285;"	d
TSI_GENCS_EOSF_SHIFT	derivative.h	17286;"	d
TSI_GENCS_ERIE_MASK	derivative.h	17269;"	d
TSI_GENCS_ERIE_SHIFT	derivative.h	17270;"	d
TSI_GENCS_ESOR_MASK	derivative.h	17267;"	d
TSI_GENCS_ESOR_SHIFT	derivative.h	17268;"	d
TSI_GENCS_EXTERF_MASK	derivative.h	17281;"	d
TSI_GENCS_EXTERF_SHIFT	derivative.h	17282;"	d
TSI_GENCS_LPCLKS_MASK	derivative.h	17296;"	d
TSI_GENCS_LPCLKS_SHIFT	derivative.h	17297;"	d
TSI_GENCS_LPSCNITV	derivative.h	17295;"	d
TSI_GENCS_LPSCNITV_MASK	derivative.h	17293;"	d
TSI_GENCS_LPSCNITV_SHIFT	derivative.h	17294;"	d
TSI_GENCS_NSCN	derivative.h	17292;"	d
TSI_GENCS_NSCN_MASK	derivative.h	17290;"	d
TSI_GENCS_NSCN_SHIFT	derivative.h	17291;"	d
TSI_GENCS_OUTRGF_MASK	derivative.h	17283;"	d
TSI_GENCS_OUTRGF_SHIFT	derivative.h	17284;"	d
TSI_GENCS_OVRF_MASK	derivative.h	17279;"	d
TSI_GENCS_OVRF_SHIFT	derivative.h	17280;"	d
TSI_GENCS_PS	derivative.h	17289;"	d
TSI_GENCS_PS_MASK	derivative.h	17287;"	d
TSI_GENCS_PS_SHIFT	derivative.h	17288;"	d
TSI_GENCS_REG	derivative.h	17234;"	d
TSI_GENCS_SCNIP_MASK	derivative.h	17277;"	d
TSI_GENCS_SCNIP_SHIFT	derivative.h	17278;"	d
TSI_GENCS_STM_MASK	derivative.h	17265;"	d
TSI_GENCS_STM_SHIFT	derivative.h	17266;"	d
TSI_GENCS_STPE_MASK	derivative.h	17263;"	d
TSI_GENCS_STPE_SHIFT	derivative.h	17264;"	d
TSI_GENCS_SWTS_MASK	derivative.h	17275;"	d
TSI_GENCS_SWTS_SHIFT	derivative.h	17276;"	d
TSI_GENCS_TSIEN_MASK	derivative.h	17273;"	d
TSI_GENCS_TSIEN_SHIFT	derivative.h	17274;"	d
TSI_GENCS_TSIIE_MASK	derivative.h	17271;"	d
TSI_GENCS_TSIIE_SHIFT	derivative.h	17272;"	d
TSI_Init	capacitivepadsdriver.c	/^void TSI_Init(void) {$/;"	f
TSI_MemMap	derivative.h	/^typedef struct TSI_MemMap {$/;"	s
TSI_MemMapPtr	derivative.h	/^} volatile *TSI_MemMapPtr;$/;"	t
TSI_PEN_LPSP	derivative.h	17349;"	d
TSI_PEN_LPSP_MASK	derivative.h	17347;"	d
TSI_PEN_LPSP_SHIFT	derivative.h	17348;"	d
TSI_PEN_PEN0_MASK	derivative.h	17315;"	d
TSI_PEN_PEN0_SHIFT	derivative.h	17316;"	d
TSI_PEN_PEN10_MASK	derivative.h	17335;"	d
TSI_PEN_PEN10_SHIFT	derivative.h	17336;"	d
TSI_PEN_PEN11_MASK	derivative.h	17337;"	d
TSI_PEN_PEN11_SHIFT	derivative.h	17338;"	d
TSI_PEN_PEN12_MASK	derivative.h	17339;"	d
TSI_PEN_PEN12_SHIFT	derivative.h	17340;"	d
TSI_PEN_PEN13_MASK	derivative.h	17341;"	d
TSI_PEN_PEN13_SHIFT	derivative.h	17342;"	d
TSI_PEN_PEN14_MASK	derivative.h	17343;"	d
TSI_PEN_PEN14_SHIFT	derivative.h	17344;"	d
TSI_PEN_PEN15_MASK	derivative.h	17345;"	d
TSI_PEN_PEN15_SHIFT	derivative.h	17346;"	d
TSI_PEN_PEN1_MASK	derivative.h	17317;"	d
TSI_PEN_PEN1_SHIFT	derivative.h	17318;"	d
TSI_PEN_PEN2_MASK	derivative.h	17319;"	d
TSI_PEN_PEN2_SHIFT	derivative.h	17320;"	d
TSI_PEN_PEN3_MASK	derivative.h	17321;"	d
TSI_PEN_PEN3_SHIFT	derivative.h	17322;"	d
TSI_PEN_PEN4_MASK	derivative.h	17323;"	d
TSI_PEN_PEN4_SHIFT	derivative.h	17324;"	d
TSI_PEN_PEN5_MASK	derivative.h	17325;"	d
TSI_PEN_PEN5_SHIFT	derivative.h	17326;"	d
TSI_PEN_PEN6_MASK	derivative.h	17327;"	d
TSI_PEN_PEN6_SHIFT	derivative.h	17328;"	d
TSI_PEN_PEN7_MASK	derivative.h	17329;"	d
TSI_PEN_PEN7_SHIFT	derivative.h	17330;"	d
TSI_PEN_PEN8_MASK	derivative.h	17331;"	d
TSI_PEN_PEN8_SHIFT	derivative.h	17332;"	d
TSI_PEN_PEN9_MASK	derivative.h	17333;"	d
TSI_PEN_PEN9_SHIFT	derivative.h	17334;"	d
TSI_PEN_REG	derivative.h	17236;"	d
TSI_SCANC_AMCLKS	derivative.h	17304;"	d
TSI_SCANC_AMCLKS_MASK	derivative.h	17302;"	d
TSI_SCANC_AMCLKS_SHIFT	derivative.h	17303;"	d
TSI_SCANC_AMPSC	derivative.h	17301;"	d
TSI_SCANC_AMPSC_MASK	derivative.h	17299;"	d
TSI_SCANC_AMPSC_SHIFT	derivative.h	17300;"	d
TSI_SCANC_EXTCHRG	derivative.h	17310;"	d
TSI_SCANC_EXTCHRG_MASK	derivative.h	17308;"	d
TSI_SCANC_EXTCHRG_SHIFT	derivative.h	17309;"	d
TSI_SCANC_REFCHRG	derivative.h	17313;"	d
TSI_SCANC_REFCHRG_MASK	derivative.h	17311;"	d
TSI_SCANC_REFCHRG_SHIFT	derivative.h	17312;"	d
TSI_SCANC_REG	derivative.h	17235;"	d
TSI_SCANC_SMOD	derivative.h	17307;"	d
TSI_SCANC_SMOD_MASK	derivative.h	17305;"	d
TSI_SCANC_SMOD_SHIFT	derivative.h	17306;"	d
TSI_THRESHOLD_HTHH	derivative.h	17413;"	d
TSI_THRESHOLD_HTHH_MASK	derivative.h	17411;"	d
TSI_THRESHOLD_HTHH_SHIFT	derivative.h	17412;"	d
TSI_THRESHOLD_LTHH	derivative.h	17416;"	d
TSI_THRESHOLD_LTHH_MASK	derivative.h	17414;"	d
TSI_THRESHOLD_LTHH_SHIFT	derivative.h	17415;"	d
TSI_THRESHOLD_REG	derivative.h	17246;"	d
TSI_WUCNTR_REG	derivative.h	17237;"	d
TSI_WUCNTR_WUCNT	derivative.h	17353;"	d
TSI_WUCNTR_WUCNT_MASK	derivative.h	17351;"	d
TSI_WUCNTR_WUCNT_SHIFT	derivative.h	17352;"	d
TSR	derivative.h	/^  uint32_t TSR;                                    \/**< RTC Time Seconds Register, offset: 0x0 *\/$/;"	m	struct:RTC_MemMap
TTCTRL	derivative.h	/^  uint32_t TTCTRL;                                 \/**< Host TT Asynchronous Buffer Control, offset: 0x15C *\/$/;"	m	struct:USBHS_MemMap
TTSR	derivative.h	/^  uint32_t TTSR;                                   \/**< RTC Tamper Time Seconds Register, offset: 0x20 *\/$/;"	m	struct:RTC_MemMap
TWFIFO	derivative.h	/^  uint8_t TWFIFO;                                  \/**< UART FIFO Transmit Watermark, offset: 0x13 *\/$/;"	m	struct:UART_MemMap
TXFILLTUNING	derivative.h	/^  uint32_t TXFILLTUNING;                           \/**< Transmit FIFO Tuning Control Register, offset: 0x164 *\/$/;"	m	struct:USBHS_MemMap
TXFR0	derivative.h	/^  uint32_t TXFR0;                                  \/**< DSPI Transmit FIFO Registers, offset: 0x3C *\/$/;"	m	struct:SPI_MemMap
TXFR1	derivative.h	/^  uint32_t TXFR1;                                  \/**< DSPI Transmit FIFO Registers, offset: 0x40 *\/$/;"	m	struct:SPI_MemMap
TXFR2	derivative.h	/^  uint32_t TXFR2;                                  \/**< DSPI Transmit FIFO Registers, offset: 0x44 *\/$/;"	m	struct:SPI_MemMap
TXFR3	derivative.h	/^  uint32_t TXFR3;                                  \/**< DSPI Transmit FIFO Registers, offset: 0x48 *\/$/;"	m	struct:SPI_MemMap
UART	io.h	/^    UART,$/;"	e	enum:__anon37
UART0_B1T	derivative.h	18040;"	d
UART0_BASE_PTR	derivative.h	17980;"	d
UART0_BDH	derivative.h	18006;"	d
UART0_BDL	derivative.h	18007;"	d
UART0_C1	derivative.h	18008;"	d
UART0_C2	derivative.h	18009;"	d
UART0_C3	derivative.h	18012;"	d
UART0_C4	derivative.h	18016;"	d
UART0_C5	derivative.h	18017;"	d
UART0_C6	derivative.h	18037;"	d
UART0_C7816	derivative.h	18028;"	d
UART0_CFIFO	derivative.h	18022;"	d
UART0_CPW	derivative.h	18051;"	d
UART0_D	derivative.h	18013;"	d
UART0_ED	derivative.h	18018;"	d
UART0_ET7816	derivative.h	18035;"	d
UART0_IE	derivative.h	18045;"	d
UART0_IE7816	derivative.h	18029;"	d
UART0_IR	derivative.h	18020;"	d
UART0_IS7816	derivative.h	18030;"	d
UART0_MA1	derivative.h	18014;"	d
UART0_MA2	derivative.h	18015;"	d
UART0_MODEM	derivative.h	18019;"	d
UART0_PCTH	derivative.h	18038;"	d
UART0_PCTL	derivative.h	18039;"	d
UART0_PFIFO	derivative.h	18021;"	d
UART0_PRE	derivative.h	18043;"	d
UART0_RCFIFO	derivative.h	18027;"	d
UART0_RIDT	derivative.h	18052;"	d
UART0_RPL	derivative.h	18049;"	d
UART0_RPREL	derivative.h	18050;"	d
UART0_RWFIFO	derivative.h	18026;"	d
UART0_S1	derivative.h	18010;"	d
UART0_S2	derivative.h	18011;"	d
UART0_S3	derivative.h	18047;"	d
UART0_S4	derivative.h	18048;"	d
UART0_SDTH	derivative.h	18041;"	d
UART0_SDTL	derivative.h	18042;"	d
UART0_SFIFO	derivative.h	18023;"	d
UART0_TCFIFO	derivative.h	18025;"	d
UART0_TIDT	derivative.h	18053;"	d
UART0_TL7816	derivative.h	18036;"	d
UART0_TPL	derivative.h	18044;"	d
UART0_TWFIFO	derivative.h	18024;"	d
UART0_WB	derivative.h	18046;"	d
UART0_WF7816	derivative.h	18034;"	d
UART0_WN7816	derivative.h	18033;"	d
UART0_WP7816T0	derivative.h	18031;"	d
UART0_WP7816T1	derivative.h	18032;"	d
UART1	io.h	/^typedef enum {UART1} uart_minor_device; $/;"	e	enum:__anon36
UART1_BASE_PTR	derivative.h	17982;"	d
UART1_BDH	derivative.h	18055;"	d
UART1_BDL	derivative.h	18056;"	d
UART1_C1	derivative.h	18057;"	d
UART1_C2	derivative.h	18058;"	d
UART1_C3	derivative.h	18061;"	d
UART1_C4	derivative.h	18065;"	d
UART1_C5	derivative.h	18066;"	d
UART1_C7816	derivative.h	18077;"	d
UART1_CFIFO	derivative.h	18071;"	d
UART1_D	derivative.h	18062;"	d
UART1_ED	derivative.h	18067;"	d
UART1_ET7816	derivative.h	18084;"	d
UART1_IE7816	derivative.h	18078;"	d
UART1_IR	derivative.h	18069;"	d
UART1_IS7816	derivative.h	18079;"	d
UART1_MA1	derivative.h	18063;"	d
UART1_MA2	derivative.h	18064;"	d
UART1_MODEM	derivative.h	18068;"	d
UART1_PFIFO	derivative.h	18070;"	d
UART1_RCFIFO	derivative.h	18076;"	d
UART1_RWFIFO	derivative.h	18075;"	d
UART1_S1	derivative.h	18059;"	d
UART1_S2	derivative.h	18060;"	d
UART1_SFIFO	derivative.h	18072;"	d
UART1_TCFIFO	derivative.h	18074;"	d
UART1_TL7816	derivative.h	18085;"	d
UART1_TWFIFO	derivative.h	18073;"	d
UART1_WF7816	derivative.h	18083;"	d
UART1_WN7816	derivative.h	18082;"	d
UART1_WP7816T0	derivative.h	18080;"	d
UART1_WP7816T1	derivative.h	18081;"	d
UART2_BASE_PTR	derivative.h	17984;"	d
UART2_BDH	derivative.h	18087;"	d
UART2_BDL	derivative.h	18088;"	d
UART2_C1	derivative.h	18089;"	d
UART2_C2	derivative.h	18090;"	d
UART2_C3	derivative.h	18093;"	d
UART2_C4	derivative.h	18097;"	d
UART2_C5	derivative.h	18098;"	d
UART2_CFIFO	derivative.h	18103;"	d
UART2_D	derivative.h	18094;"	d
UART2_ED	derivative.h	18099;"	d
UART2_ERROR_INTERRUPT_PRIORITY	uartdriver.h	25;"	d
UART2_ERROR_IRQ_NUMBER	uartdriver.h	23;"	d
UART2_IR	derivative.h	18101;"	d
UART2_MA1	derivative.h	18095;"	d
UART2_MA2	derivative.h	18096;"	d
UART2_MODEM	derivative.h	18100;"	d
UART2_PFIFO	derivative.h	18102;"	d
UART2_RCFIFO	derivative.h	18108;"	d
UART2_RWFIFO	derivative.h	18107;"	d
UART2_S1	derivative.h	18091;"	d
UART2_S2	derivative.h	18092;"	d
UART2_SFIFO	derivative.h	18104;"	d
UART2_STATUS_INTERRUPT_PRIORITY	uartdriver.h	20;"	d
UART2_STATUS_IRQ_NUMBER	uartdriver.h	18;"	d
UART2_TCFIFO	derivative.h	18106;"	d
UART2_TWFIFO	derivative.h	18105;"	d
UART3_BASE_PTR	derivative.h	17986;"	d
UART3_BDH	derivative.h	18110;"	d
UART3_BDL	derivative.h	18111;"	d
UART3_C1	derivative.h	18112;"	d
UART3_C2	derivative.h	18113;"	d
UART3_C3	derivative.h	18116;"	d
UART3_C4	derivative.h	18120;"	d
UART3_C5	derivative.h	18121;"	d
UART3_CFIFO	derivative.h	18126;"	d
UART3_D	derivative.h	18117;"	d
UART3_ED	derivative.h	18122;"	d
UART3_IR	derivative.h	18124;"	d
UART3_MA1	derivative.h	18118;"	d
UART3_MA2	derivative.h	18119;"	d
UART3_MODEM	derivative.h	18123;"	d
UART3_PFIFO	derivative.h	18125;"	d
UART3_RCFIFO	derivative.h	18131;"	d
UART3_RWFIFO	derivative.h	18130;"	d
UART3_S1	derivative.h	18114;"	d
UART3_S2	derivative.h	18115;"	d
UART3_SFIFO	derivative.h	18127;"	d
UART3_TCFIFO	derivative.h	18129;"	d
UART3_TWFIFO	derivative.h	18128;"	d
UART4_BASE_PTR	derivative.h	17988;"	d
UART4_BDH	derivative.h	18133;"	d
UART4_BDL	derivative.h	18134;"	d
UART4_C1	derivative.h	18135;"	d
UART4_C2	derivative.h	18136;"	d
UART4_C3	derivative.h	18139;"	d
UART4_C4	derivative.h	18143;"	d
UART4_C5	derivative.h	18144;"	d
UART4_CFIFO	derivative.h	18149;"	d
UART4_D	derivative.h	18140;"	d
UART4_ED	derivative.h	18145;"	d
UART4_IR	derivative.h	18147;"	d
UART4_MA1	derivative.h	18141;"	d
UART4_MA2	derivative.h	18142;"	d
UART4_MODEM	derivative.h	18146;"	d
UART4_PFIFO	derivative.h	18148;"	d
UART4_RCFIFO	derivative.h	18154;"	d
UART4_RWFIFO	derivative.h	18153;"	d
UART4_S1	derivative.h	18137;"	d
UART4_S2	derivative.h	18138;"	d
UART4_SFIFO	derivative.h	18150;"	d
UART4_TCFIFO	derivative.h	18152;"	d
UART4_TWFIFO	derivative.h	18151;"	d
UART5_BASE_PTR	derivative.h	17990;"	d
UART5_BDH	derivative.h	18156;"	d
UART5_BDL	derivative.h	18157;"	d
UART5_C1	derivative.h	18158;"	d
UART5_C2	derivative.h	18159;"	d
UART5_C3	derivative.h	18162;"	d
UART5_C4	derivative.h	18166;"	d
UART5_C5	derivative.h	18167;"	d
UART5_CFIFO	derivative.h	18172;"	d
UART5_D	derivative.h	18163;"	d
UART5_ED	derivative.h	18168;"	d
UART5_IR	derivative.h	18170;"	d
UART5_MA1	derivative.h	18164;"	d
UART5_MA2	derivative.h	18165;"	d
UART5_MODEM	derivative.h	18169;"	d
UART5_PFIFO	derivative.h	18171;"	d
UART5_RCFIFO	derivative.h	18177;"	d
UART5_RWFIFO	derivative.h	18176;"	d
UART5_S1	derivative.h	18160;"	d
UART5_S2	derivative.h	18161;"	d
UART5_SFIFO	derivative.h	18173;"	d
UART5_TCFIFO	derivative.h	18175;"	d
UART5_TWFIFO	derivative.h	18174;"	d
UART_B1T_B1T	derivative.h	17889;"	d
UART_B1T_B1T_MASK	derivative.h	17887;"	d
UART_B1T_B1T_SHIFT	derivative.h	17888;"	d
UART_B1T_REG	derivative.h	17576;"	d
UART_BASE_PTRS	derivative.h	17992;"	d
UART_BDH_LBKDIE_MASK	derivative.h	17611;"	d
UART_BDH_LBKDIE_SHIFT	derivative.h	17612;"	d
UART_BDH_REG	derivative.h	17542;"	d
UART_BDH_RXEDGIE_MASK	derivative.h	17609;"	d
UART_BDH_RXEDGIE_SHIFT	derivative.h	17610;"	d
UART_BDH_SBR	derivative.h	17608;"	d
UART_BDH_SBR_MASK	derivative.h	17606;"	d
UART_BDH_SBR_SHIFT	derivative.h	17607;"	d
UART_BDL_REG	derivative.h	17543;"	d
UART_BDL_SBR	derivative.h	17616;"	d
UART_BDL_SBR_MASK	derivative.h	17614;"	d
UART_BDL_SBR_SHIFT	derivative.h	17615;"	d
UART_C1_ILT_MASK	derivative.h	17622;"	d
UART_C1_ILT_SHIFT	derivative.h	17623;"	d
UART_C1_LOOPS_MASK	derivative.h	17632;"	d
UART_C1_LOOPS_SHIFT	derivative.h	17633;"	d
UART_C1_M_MASK	derivative.h	17626;"	d
UART_C1_M_SHIFT	derivative.h	17627;"	d
UART_C1_PE_MASK	derivative.h	17620;"	d
UART_C1_PE_SHIFT	derivative.h	17621;"	d
UART_C1_PT_MASK	derivative.h	17618;"	d
UART_C1_PT_SHIFT	derivative.h	17619;"	d
UART_C1_REG	derivative.h	17544;"	d
UART_C1_RSRC_MASK	derivative.h	17628;"	d
UART_C1_RSRC_SHIFT	derivative.h	17629;"	d
UART_C1_UARTSWAI_MASK	derivative.h	17630;"	d
UART_C1_UARTSWAI_SHIFT	derivative.h	17631;"	d
UART_C1_WAKE_MASK	derivative.h	17624;"	d
UART_C1_WAKE_SHIFT	derivative.h	17625;"	d
UART_C2_ILIE_MASK	derivative.h	17643;"	d
UART_C2_ILIE_SHIFT	derivative.h	17644;"	d
UART_C2_REG	derivative.h	17545;"	d
UART_C2_RE_MASK	derivative.h	17639;"	d
UART_C2_RE_SHIFT	derivative.h	17640;"	d
UART_C2_RIE_MASK	derivative.h	17645;"	d
UART_C2_RIE_SHIFT	derivative.h	17646;"	d
UART_C2_RWU_MASK	derivative.h	17637;"	d
UART_C2_RWU_SHIFT	derivative.h	17638;"	d
UART_C2_SBK_MASK	derivative.h	17635;"	d
UART_C2_SBK_SHIFT	derivative.h	17636;"	d
UART_C2_TCIE_MASK	derivative.h	17647;"	d
UART_C2_TCIE_SHIFT	derivative.h	17648;"	d
UART_C2_TE_MASK	derivative.h	17641;"	d
UART_C2_TE_SHIFT	derivative.h	17642;"	d
UART_C2_TIE_MASK	derivative.h	17649;"	d
UART_C2_TIE_SHIFT	derivative.h	17650;"	d
UART_C3_FEIE_MASK	derivative.h	17688;"	d
UART_C3_FEIE_SHIFT	derivative.h	17689;"	d
UART_C3_NEIE_MASK	derivative.h	17690;"	d
UART_C3_NEIE_SHIFT	derivative.h	17691;"	d
UART_C3_ORIE_MASK	derivative.h	17692;"	d
UART_C3_ORIE_SHIFT	derivative.h	17693;"	d
UART_C3_PEIE_MASK	derivative.h	17686;"	d
UART_C3_PEIE_SHIFT	derivative.h	17687;"	d
UART_C3_R8_MASK	derivative.h	17700;"	d
UART_C3_R8_SHIFT	derivative.h	17701;"	d
UART_C3_REG	derivative.h	17548;"	d
UART_C3_T8_MASK	derivative.h	17698;"	d
UART_C3_T8_SHIFT	derivative.h	17699;"	d
UART_C3_TXDIR_MASK	derivative.h	17696;"	d
UART_C3_TXDIR_SHIFT	derivative.h	17697;"	d
UART_C3_TXINV_MASK	derivative.h	17694;"	d
UART_C3_TXINV_SHIFT	derivative.h	17695;"	d
UART_C4_BRFA	derivative.h	17717;"	d
UART_C4_BRFA_MASK	derivative.h	17715;"	d
UART_C4_BRFA_SHIFT	derivative.h	17716;"	d
UART_C4_M10_MASK	derivative.h	17718;"	d
UART_C4_M10_SHIFT	derivative.h	17719;"	d
UART_C4_MAEN1_MASK	derivative.h	17722;"	d
UART_C4_MAEN1_SHIFT	derivative.h	17723;"	d
UART_C4_MAEN2_MASK	derivative.h	17720;"	d
UART_C4_MAEN2_SHIFT	derivative.h	17721;"	d
UART_C4_REG	derivative.h	17552;"	d
UART_C5_RDMAS_MASK	derivative.h	17725;"	d
UART_C5_RDMAS_SHIFT	derivative.h	17726;"	d
UART_C5_REG	derivative.h	17553;"	d
UART_C5_TDMAS_MASK	derivative.h	17727;"	d
UART_C5_TDMAS_SHIFT	derivative.h	17728;"	d
UART_C6_CE_MASK	derivative.h	17872;"	d
UART_C6_CE_SHIFT	derivative.h	17873;"	d
UART_C6_CP_MASK	derivative.h	17870;"	d
UART_C6_CP_SHIFT	derivative.h	17871;"	d
UART_C6_EN709_MASK	derivative.h	17876;"	d
UART_C6_EN709_SHIFT	derivative.h	17877;"	d
UART_C6_REG	derivative.h	17573;"	d
UART_C6_TX709_MASK	derivative.h	17874;"	d
UART_C6_TX709_SHIFT	derivative.h	17875;"	d
UART_C7816_ANACK_MASK	derivative.h	17805;"	d
UART_C7816_ANACK_SHIFT	derivative.h	17806;"	d
UART_C7816_INIT_MASK	derivative.h	17803;"	d
UART_C7816_INIT_SHIFT	derivative.h	17804;"	d
UART_C7816_ISO_7816E_MASK	derivative.h	17799;"	d
UART_C7816_ISO_7816E_SHIFT	derivative.h	17800;"	d
UART_C7816_ONACK_MASK	derivative.h	17807;"	d
UART_C7816_ONACK_SHIFT	derivative.h	17808;"	d
UART_C7816_REG	derivative.h	17564;"	d
UART_C7816_TTYPE_MASK	derivative.h	17801;"	d
UART_C7816_TTYPE_SHIFT	derivative.h	17802;"	d
UART_CFIFO_REG	derivative.h	17558;"	d
UART_CFIFO_RXFLUSH_MASK	derivative.h	17767;"	d
UART_CFIFO_RXFLUSH_SHIFT	derivative.h	17768;"	d
UART_CFIFO_RXOFE_MASK	derivative.h	17765;"	d
UART_CFIFO_RXOFE_SHIFT	derivative.h	17766;"	d
UART_CFIFO_RXUFE_MASK	derivative.h	17761;"	d
UART_CFIFO_RXUFE_SHIFT	derivative.h	17762;"	d
UART_CFIFO_TXFLUSH_MASK	derivative.h	17769;"	d
UART_CFIFO_TXFLUSH_SHIFT	derivative.h	17770;"	d
UART_CFIFO_TXOFE_MASK	derivative.h	17763;"	d
UART_CFIFO_TXOFE_SHIFT	derivative.h	17764;"	d
UART_CPW_CPW	derivative.h	17963;"	d
UART_CPW_CPW_MASK	derivative.h	17961;"	d
UART_CPW_CPW_SHIFT	derivative.h	17962;"	d
UART_CPW_REG	derivative.h	17587;"	d
UART_D_REG	derivative.h	17549;"	d
UART_D_RT	derivative.h	17705;"	d
UART_D_RT_MASK	derivative.h	17703;"	d
UART_D_RT_SHIFT	derivative.h	17704;"	d
UART_ED_NOISY_MASK	derivative.h	17732;"	d
UART_ED_NOISY_SHIFT	derivative.h	17733;"	d
UART_ED_PARITYE_MASK	derivative.h	17730;"	d
UART_ED_PARITYE_SHIFT	derivative.h	17731;"	d
UART_ED_REG	derivative.h	17554;"	d
UART_ET7816_REG	derivative.h	17571;"	d
UART_ET7816_RXTHRESHOLD	derivative.h	17861;"	d
UART_ET7816_RXTHRESHOLD_MASK	derivative.h	17859;"	d
UART_ET7816_RXTHRESHOLD_SHIFT	derivative.h	17860;"	d
UART_ET7816_TXTHRESHOLD	derivative.h	17864;"	d
UART_ET7816_TXTHRESHOLD_MASK	derivative.h	17862;"	d
UART_ET7816_TXTHRESHOLD_SHIFT	derivative.h	17863;"	d
UART_IE7816_BWTE_MASK	derivative.h	17818;"	d
UART_IE7816_BWTE_SHIFT	derivative.h	17819;"	d
UART_IE7816_CWTE_MASK	derivative.h	17820;"	d
UART_IE7816_CWTE_SHIFT	derivative.h	17821;"	d
UART_IE7816_GTVE_MASK	derivative.h	17814;"	d
UART_IE7816_GTVE_SHIFT	derivative.h	17815;"	d
UART_IE7816_INITDE_MASK	derivative.h	17816;"	d
UART_IE7816_INITDE_SHIFT	derivative.h	17817;"	d
UART_IE7816_REG	derivative.h	17565;"	d
UART_IE7816_RXTE_MASK	derivative.h	17810;"	d
UART_IE7816_RXTE_SHIFT	derivative.h	17811;"	d
UART_IE7816_TXTE_MASK	derivative.h	17812;"	d
UART_IE7816_TXTE_SHIFT	derivative.h	17813;"	d
UART_IE7816_WTE_MASK	derivative.h	17822;"	d
UART_IE7816_WTE_SHIFT	derivative.h	17823;"	d
UART_IE_ISDIE_MASK	derivative.h	17917;"	d
UART_IE_ISDIE_SHIFT	derivative.h	17918;"	d
UART_IE_PCTEIE_MASK	derivative.h	17911;"	d
UART_IE_PCTEIE_SHIFT	derivative.h	17912;"	d
UART_IE_PRXIE_MASK	derivative.h	17915;"	d
UART_IE_PRXIE_SHIFT	derivative.h	17916;"	d
UART_IE_PSIE_MASK	derivative.h	17909;"	d
UART_IE_PSIE_SHIFT	derivative.h	17910;"	d
UART_IE_PTXIE_MASK	derivative.h	17913;"	d
UART_IE_PTXIE_SHIFT	derivative.h	17914;"	d
UART_IE_REG	derivative.h	17581;"	d
UART_IE_TXFIE_MASK	derivative.h	17907;"	d
UART_IE_TXFIE_SHIFT	derivative.h	17908;"	d
UART_IE_WBEIE_MASK	derivative.h	17919;"	d
UART_IE_WBEIE_SHIFT	derivative.h	17920;"	d
UART_IR_IREN_MASK	derivative.h	17747;"	d
UART_IR_IREN_SHIFT	derivative.h	17748;"	d
UART_IR_REG	derivative.h	17556;"	d
UART_IR_TNP	derivative.h	17746;"	d
UART_IR_TNP_MASK	derivative.h	17744;"	d
UART_IR_TNP_SHIFT	derivative.h	17745;"	d
UART_IS7816_BWT_MASK	derivative.h	17833;"	d
UART_IS7816_BWT_SHIFT	derivative.h	17834;"	d
UART_IS7816_CWT_MASK	derivative.h	17835;"	d
UART_IS7816_CWT_SHIFT	derivative.h	17836;"	d
UART_IS7816_GTV_MASK	derivative.h	17829;"	d
UART_IS7816_GTV_SHIFT	derivative.h	17830;"	d
UART_IS7816_INITD_MASK	derivative.h	17831;"	d
UART_IS7816_INITD_SHIFT	derivative.h	17832;"	d
UART_IS7816_REG	derivative.h	17566;"	d
UART_IS7816_RXT_MASK	derivative.h	17825;"	d
UART_IS7816_RXT_SHIFT	derivative.h	17826;"	d
UART_IS7816_TXT_MASK	derivative.h	17827;"	d
UART_IS7816_TXT_SHIFT	derivative.h	17828;"	d
UART_IS7816_WT_MASK	derivative.h	17837;"	d
UART_IS7816_WT_SHIFT	derivative.h	17838;"	d
UART_MA1_MA	derivative.h	17709;"	d
UART_MA1_MA_MASK	derivative.h	17707;"	d
UART_MA1_MA_SHIFT	derivative.h	17708;"	d
UART_MA1_REG	derivative.h	17550;"	d
UART_MA2_MA	derivative.h	17713;"	d
UART_MA2_MA_MASK	derivative.h	17711;"	d
UART_MA2_MA_SHIFT	derivative.h	17712;"	d
UART_MA2_REG	derivative.h	17551;"	d
UART_MODEM_REG	derivative.h	17555;"	d
UART_MODEM_RXRTSE_MASK	derivative.h	17741;"	d
UART_MODEM_RXRTSE_SHIFT	derivative.h	17742;"	d
UART_MODEM_TXCTSE_MASK	derivative.h	17735;"	d
UART_MODEM_TXCTSE_SHIFT	derivative.h	17736;"	d
UART_MODEM_TXRTSE_MASK	derivative.h	17737;"	d
UART_MODEM_TXRTSE_SHIFT	derivative.h	17738;"	d
UART_MODEM_TXRTSPOL_MASK	derivative.h	17739;"	d
UART_MODEM_TXRTSPOL_SHIFT	derivative.h	17740;"	d
UART_MemMap	derivative.h	/^typedef struct UART_MemMap {$/;"	s
UART_MemMapPtr	derivative.h	/^} volatile *UART_MemMapPtr;$/;"	t
UART_PCTH_PCTH	derivative.h	17881;"	d
UART_PCTH_PCTH_MASK	derivative.h	17879;"	d
UART_PCTH_PCTH_SHIFT	derivative.h	17880;"	d
UART_PCTH_REG	derivative.h	17574;"	d
UART_PCTL_PCTL	derivative.h	17885;"	d
UART_PCTL_PCTL_MASK	derivative.h	17883;"	d
UART_PCTL_PCTL_SHIFT	derivative.h	17884;"	d
UART_PCTL_REG	derivative.h	17575;"	d
UART_PFIFO_REG	derivative.h	17557;"	d
UART_PFIFO_RXFE_MASK	derivative.h	17753;"	d
UART_PFIFO_RXFE_SHIFT	derivative.h	17754;"	d
UART_PFIFO_RXFIFOSIZE	derivative.h	17752;"	d
UART_PFIFO_RXFIFOSIZE_MASK	derivative.h	17750;"	d
UART_PFIFO_RXFIFOSIZE_SHIFT	derivative.h	17751;"	d
UART_PFIFO_TXFE_MASK	derivative.h	17758;"	d
UART_PFIFO_TXFE_SHIFT	derivative.h	17759;"	d
UART_PFIFO_TXFIFOSIZE	derivative.h	17757;"	d
UART_PFIFO_TXFIFOSIZE_MASK	derivative.h	17755;"	d
UART_PFIFO_TXFIFOSIZE_SHIFT	derivative.h	17756;"	d
UART_PRE_PREAMBLE	derivative.h	17901;"	d
UART_PRE_PREAMBLE_MASK	derivative.h	17899;"	d
UART_PRE_PREAMBLE_SHIFT	derivative.h	17900;"	d
UART_PRE_REG	derivative.h	17579;"	d
UART_RCFIFO_REG	derivative.h	17563;"	d
UART_RCFIFO_RXCOUNT	derivative.h	17797;"	d
UART_RCFIFO_RXCOUNT_MASK	derivative.h	17795;"	d
UART_RCFIFO_RXCOUNT_SHIFT	derivative.h	17796;"	d
UART_RIDT_REG	derivative.h	17588;"	d
UART_RIDT_RIDT	derivative.h	17967;"	d
UART_RIDT_RIDT_MASK	derivative.h	17965;"	d
UART_RIDT_RIDT_SHIFT	derivative.h	17966;"	d
UART_RPL_REG	derivative.h	17585;"	d
UART_RPL_RPL	derivative.h	17955;"	d
UART_RPL_RPL_MASK	derivative.h	17953;"	d
UART_RPL_RPL_SHIFT	derivative.h	17954;"	d
UART_RPREL_REG	derivative.h	17586;"	d
UART_RPREL_RPREL	derivative.h	17959;"	d
UART_RPREL_RPREL_MASK	derivative.h	17957;"	d
UART_RPREL_RPREL_SHIFT	derivative.h	17958;"	d
UART_RWFIFO_REG	derivative.h	17562;"	d
UART_RWFIFO_RXWATER	derivative.h	17793;"	d
UART_RWFIFO_RXWATER_MASK	derivative.h	17791;"	d
UART_RWFIFO_RXWATER_SHIFT	derivative.h	17792;"	d
UART_S1_FE_MASK	derivative.h	17654;"	d
UART_S1_FE_SHIFT	derivative.h	17655;"	d
UART_S1_IDLE_MASK	derivative.h	17660;"	d
UART_S1_IDLE_SHIFT	derivative.h	17661;"	d
UART_S1_NF_MASK	derivative.h	17656;"	d
UART_S1_NF_SHIFT	derivative.h	17657;"	d
UART_S1_OR_MASK	derivative.h	17658;"	d
UART_S1_OR_SHIFT	derivative.h	17659;"	d
UART_S1_PF_MASK	derivative.h	17652;"	d
UART_S1_PF_SHIFT	derivative.h	17653;"	d
UART_S1_RDRF_MASK	derivative.h	17662;"	d
UART_S1_RDRF_SHIFT	derivative.h	17663;"	d
UART_S1_REG	derivative.h	17546;"	d
UART_S1_TC_MASK	derivative.h	17664;"	d
UART_S1_TC_SHIFT	derivative.h	17665;"	d
UART_S1_TDRE_MASK	derivative.h	17666;"	d
UART_S1_TDRE_SHIFT	derivative.h	17667;"	d
UART_S2_BRK13_MASK	derivative.h	17673;"	d
UART_S2_BRK13_SHIFT	derivative.h	17674;"	d
UART_S2_LBKDE_MASK	derivative.h	17671;"	d
UART_S2_LBKDE_SHIFT	derivative.h	17672;"	d
UART_S2_LBKDIF_MASK	derivative.h	17683;"	d
UART_S2_LBKDIF_SHIFT	derivative.h	17684;"	d
UART_S2_MSBF_MASK	derivative.h	17679;"	d
UART_S2_MSBF_SHIFT	derivative.h	17680;"	d
UART_S2_RAF_MASK	derivative.h	17669;"	d
UART_S2_RAF_SHIFT	derivative.h	17670;"	d
UART_S2_REG	derivative.h	17547;"	d
UART_S2_RWUID_MASK	derivative.h	17675;"	d
UART_S2_RWUID_SHIFT	derivative.h	17676;"	d
UART_S2_RXEDGIF_MASK	derivative.h	17681;"	d
UART_S2_RXEDGIF_SHIFT	derivative.h	17682;"	d
UART_S2_RXINV_MASK	derivative.h	17677;"	d
UART_S2_RXINV_SHIFT	derivative.h	17678;"	d
UART_S3_ISD_MASK	derivative.h	17936;"	d
UART_S3_ISD_SHIFT	derivative.h	17937;"	d
UART_S3_PCTEF_MASK	derivative.h	17930;"	d
UART_S3_PCTEF_SHIFT	derivative.h	17931;"	d
UART_S3_PEF_MASK	derivative.h	17940;"	d
UART_S3_PEF_SHIFT	derivative.h	17941;"	d
UART_S3_PRXF_MASK	derivative.h	17934;"	d
UART_S3_PRXF_SHIFT	derivative.h	17935;"	d
UART_S3_PSF_MASK	derivative.h	17928;"	d
UART_S3_PSF_SHIFT	derivative.h	17929;"	d
UART_S3_PTXF_MASK	derivative.h	17932;"	d
UART_S3_PTXF_SHIFT	derivative.h	17933;"	d
UART_S3_REG	derivative.h	17583;"	d
UART_S3_TXFF_MASK	derivative.h	17926;"	d
UART_S3_TXFF_SHIFT	derivative.h	17927;"	d
UART_S3_WBEF_MASK	derivative.h	17938;"	d
UART_S3_WBEF_SHIFT	derivative.h	17939;"	d
UART_S4_CDET	derivative.h	17949;"	d
UART_S4_CDET_MASK	derivative.h	17947;"	d
UART_S4_CDET_SHIFT	derivative.h	17948;"	d
UART_S4_FE_MASK	derivative.h	17943;"	d
UART_S4_FE_SHIFT	derivative.h	17944;"	d
UART_S4_ILCV_MASK	derivative.h	17945;"	d
UART_S4_ILCV_SHIFT	derivative.h	17946;"	d
UART_S4_INITF_MASK	derivative.h	17950;"	d
UART_S4_INITF_SHIFT	derivative.h	17951;"	d
UART_S4_REG	derivative.h	17584;"	d
UART_SDTH_REG	derivative.h	17577;"	d
UART_SDTH_SDTH	derivative.h	17893;"	d
UART_SDTH_SDTH_MASK	derivative.h	17891;"	d
UART_SDTH_SDTH_SHIFT	derivative.h	17892;"	d
UART_SDTL_REG	derivative.h	17578;"	d
UART_SDTL_SDTL	derivative.h	17897;"	d
UART_SDTL_SDTL_MASK	derivative.h	17895;"	d
UART_SDTL_SDTL_SHIFT	derivative.h	17896;"	d
UART_SFIFO_REG	derivative.h	17559;"	d
UART_SFIFO_RXEMPT_MASK	derivative.h	17778;"	d
UART_SFIFO_RXEMPT_SHIFT	derivative.h	17779;"	d
UART_SFIFO_RXOF_MASK	derivative.h	17776;"	d
UART_SFIFO_RXOF_SHIFT	derivative.h	17777;"	d
UART_SFIFO_RXUF_MASK	derivative.h	17772;"	d
UART_SFIFO_RXUF_SHIFT	derivative.h	17773;"	d
UART_SFIFO_TXEMPT_MASK	derivative.h	17780;"	d
UART_SFIFO_TXEMPT_SHIFT	derivative.h	17781;"	d
UART_SFIFO_TXOF_MASK	derivative.h	17774;"	d
UART_SFIFO_TXOF_SHIFT	derivative.h	17775;"	d
UART_TCFIFO_REG	derivative.h	17561;"	d
UART_TCFIFO_TXCOUNT	derivative.h	17789;"	d
UART_TCFIFO_TXCOUNT_MASK	derivative.h	17787;"	d
UART_TCFIFO_TXCOUNT_SHIFT	derivative.h	17788;"	d
UART_TIDT_REG	derivative.h	17589;"	d
UART_TIDT_TIDT	derivative.h	17971;"	d
UART_TIDT_TIDT_MASK	derivative.h	17969;"	d
UART_TIDT_TIDT_SHIFT	derivative.h	17970;"	d
UART_TL7816_REG	derivative.h	17572;"	d
UART_TL7816_TLEN	derivative.h	17868;"	d
UART_TL7816_TLEN_MASK	derivative.h	17866;"	d
UART_TL7816_TLEN_SHIFT	derivative.h	17867;"	d
UART_TPL_REG	derivative.h	17580;"	d
UART_TPL_TPL	derivative.h	17905;"	d
UART_TPL_TPL_MASK	derivative.h	17903;"	d
UART_TPL_TPL_SHIFT	derivative.h	17904;"	d
UART_TWFIFO_REG	derivative.h	17560;"	d
UART_TWFIFO_TXWATER	derivative.h	17785;"	d
UART_TWFIFO_TXWATER_MASK	derivative.h	17783;"	d
UART_TWFIFO_TXWATER_SHIFT	derivative.h	17784;"	d
UART_WB_REG	derivative.h	17582;"	d
UART_WB_WBASE	derivative.h	17924;"	d
UART_WB_WBASE_MASK	derivative.h	17922;"	d
UART_WB_WBASE_SHIFT	derivative.h	17923;"	d
UART_WF7816_GTFD	derivative.h	17857;"	d
UART_WF7816_GTFD_MASK	derivative.h	17855;"	d
UART_WF7816_GTFD_SHIFT	derivative.h	17856;"	d
UART_WF7816_REG	derivative.h	17570;"	d
UART_WN7816_GTN	derivative.h	17853;"	d
UART_WN7816_GTN_MASK	derivative.h	17851;"	d
UART_WN7816_GTN_SHIFT	derivative.h	17852;"	d
UART_WN7816_REG	derivative.h	17569;"	d
UART_WP7816_T_TYPE0_REG	derivative.h	17567;"	d
UART_WP7816_T_TYPE0_WI	derivative.h	17842;"	d
UART_WP7816_T_TYPE0_WI_MASK	derivative.h	17840;"	d
UART_WP7816_T_TYPE0_WI_SHIFT	derivative.h	17841;"	d
UART_WP7816_T_TYPE1_BWI	derivative.h	17846;"	d
UART_WP7816_T_TYPE1_BWI_MASK	derivative.h	17844;"	d
UART_WP7816_T_TYPE1_BWI_SHIFT	derivative.h	17845;"	d
UART_WP7816_T_TYPE1_CWI	derivative.h	17849;"	d
UART_WP7816_T_TYPE1_CWI_MASK	derivative.h	17847;"	d
UART_WP7816_T_TYPE1_CWI_SHIFT	derivative.h	17848;"	d
UART_WP7816_T_TYPE1_REG	derivative.h	17568;"	d
UIDH	derivative.h	/^  uint32_t UIDH;                                   \/**< Unique Identification Register High, offset: 0x1054 *\/$/;"	m	struct:SIM_MemMap
UIDL	derivative.h	/^  uint32_t UIDL;                                   \/**< Unique Identification Register Low, offset: 0x1060 *\/$/;"	m	struct:SIM_MemMap
UIDMH	derivative.h	/^  uint32_t UIDMH;                                  \/**< Unique Identification Register Mid-High, offset: 0x1058 *\/$/;"	m	struct:SIM_MemMap
UIDML	derivative.h	/^  uint32_t UIDML;                                  \/**< Unique Identification Register Mid Low, offset: 0x105C *\/$/;"	m	struct:SIM_MemMap
ULPI_VIEWPORT	derivative.h	/^  uint32_t ULPI_VIEWPORT;                          \/**< ULPI Register Access, offset: 0x170 *\/$/;"	m	struct:USBHS_MemMap
UNLOCK	derivative.h	/^  uint16_t UNLOCK;                                 \/**< Watchdog Unlock Register, offset: 0xE *\/$/;"	m	struct:WDOG_MemMap
USB0_ADDINFO	derivative.h	18575;"	d
USB0_ADDR	derivative.h	18586;"	d
USB0_BASE_PTR	derivative.h	18556;"	d
USB0_BDTPAGE1	derivative.h	18587;"	d
USB0_BDTPAGE2	derivative.h	18592;"	d
USB0_BDTPAGE3	derivative.h	18593;"	d
USB0_CONTROL	derivative.h	18612;"	d
USB0_CTL	derivative.h	18585;"	d
USB0_ENDPT	derivative.h	18617;"	d
USB0_ENDPT0	derivative.h	18594;"	d
USB0_ENDPT1	derivative.h	18595;"	d
USB0_ENDPT10	derivative.h	18604;"	d
USB0_ENDPT11	derivative.h	18605;"	d
USB0_ENDPT12	derivative.h	18606;"	d
USB0_ENDPT13	derivative.h	18607;"	d
USB0_ENDPT14	derivative.h	18608;"	d
USB0_ENDPT15	derivative.h	18609;"	d
USB0_ENDPT2	derivative.h	18596;"	d
USB0_ENDPT3	derivative.h	18597;"	d
USB0_ENDPT4	derivative.h	18598;"	d
USB0_ENDPT5	derivative.h	18599;"	d
USB0_ENDPT6	derivative.h	18600;"	d
USB0_ENDPT7	derivative.h	18601;"	d
USB0_ENDPT8	derivative.h	18602;"	d
USB0_ENDPT9	derivative.h	18603;"	d
USB0_ERREN	derivative.h	18583;"	d
USB0_ERRSTAT	derivative.h	18582;"	d
USB0_FRMNUMH	derivative.h	18589;"	d
USB0_FRMNUML	derivative.h	18588;"	d
USB0_IDCOMP	derivative.h	18573;"	d
USB0_INTEN	derivative.h	18581;"	d
USB0_ISTAT	derivative.h	18580;"	d
USB0_OBSERVE	derivative.h	18611;"	d
USB0_OTGCTL	derivative.h	18579;"	d
USB0_OTGICR	derivative.h	18577;"	d
USB0_OTGISTAT	derivative.h	18576;"	d
USB0_OTGSTAT	derivative.h	18578;"	d
USB0_PERID	derivative.h	18572;"	d
USB0_REV	derivative.h	18574;"	d
USB0_SOFTHLD	derivative.h	18591;"	d
USB0_STAT	derivative.h	18584;"	d
USB0_TOKEN	derivative.h	18590;"	d
USB0_USBCTRL	derivative.h	18610;"	d
USB0_USBFRMADJUST	derivative.h	18614;"	d
USB0_USBTRC0	derivative.h	18613;"	d
USBCMD	derivative.h	/^  uint32_t USBCMD;                                 \/**< USB Command Register, offset: 0x140 *\/$/;"	m	struct:USBHS_MemMap
USBCTRL	derivative.h	/^  uint8_t USBCTRL;                                 \/**< USB Control Register, offset: 0x100 *\/$/;"	m	struct:USB_MemMap
USBDCD_BASE_PTR	derivative.h	18740;"	d
USBDCD_BASE_PTRS	derivative.h	18742;"	d
USBDCD_CLOCK	derivative.h	18757;"	d
USBDCD_CLOCK_CLOCK_SPEED	derivative.h	18697;"	d
USBDCD_CLOCK_CLOCK_SPEED_MASK	derivative.h	18695;"	d
USBDCD_CLOCK_CLOCK_SPEED_SHIFT	derivative.h	18696;"	d
USBDCD_CLOCK_CLOCK_UNIT_MASK	derivative.h	18693;"	d
USBDCD_CLOCK_CLOCK_UNIT_SHIFT	derivative.h	18694;"	d
USBDCD_CLOCK_REG	derivative.h	18661;"	d
USBDCD_CONTROL	derivative.h	18756;"	d
USBDCD_CONTROL_IACK_MASK	derivative.h	18682;"	d
USBDCD_CONTROL_IACK_SHIFT	derivative.h	18683;"	d
USBDCD_CONTROL_IE_MASK	derivative.h	18686;"	d
USBDCD_CONTROL_IE_SHIFT	derivative.h	18687;"	d
USBDCD_CONTROL_IF_MASK	derivative.h	18684;"	d
USBDCD_CONTROL_IF_SHIFT	derivative.h	18685;"	d
USBDCD_CONTROL_REG	derivative.h	18660;"	d
USBDCD_CONTROL_SR_MASK	derivative.h	18690;"	d
USBDCD_CONTROL_SR_SHIFT	derivative.h	18691;"	d
USBDCD_CONTROL_START_MASK	derivative.h	18688;"	d
USBDCD_CONTROL_START_SHIFT	derivative.h	18689;"	d
USBDCD_MemMap	derivative.h	/^typedef struct USBDCD_MemMap {$/;"	s
USBDCD_MemMapPtr	derivative.h	/^} volatile *USBDCD_MemMapPtr;$/;"	t
USBDCD_STATUS	derivative.h	18758;"	d
USBDCD_STATUS_ACTIVE_MASK	derivative.h	18709;"	d
USBDCD_STATUS_ACTIVE_SHIFT	derivative.h	18710;"	d
USBDCD_STATUS_ERR_MASK	derivative.h	18705;"	d
USBDCD_STATUS_ERR_SHIFT	derivative.h	18706;"	d
USBDCD_STATUS_REG	derivative.h	18662;"	d
USBDCD_STATUS_SEQ_RES	derivative.h	18701;"	d
USBDCD_STATUS_SEQ_RES_MASK	derivative.h	18699;"	d
USBDCD_STATUS_SEQ_RES_SHIFT	derivative.h	18700;"	d
USBDCD_STATUS_SEQ_STAT	derivative.h	18704;"	d
USBDCD_STATUS_SEQ_STAT_MASK	derivative.h	18702;"	d
USBDCD_STATUS_SEQ_STAT_SHIFT	derivative.h	18703;"	d
USBDCD_STATUS_TO_MASK	derivative.h	18707;"	d
USBDCD_STATUS_TO_SHIFT	derivative.h	18708;"	d
USBDCD_TIMER0	derivative.h	18759;"	d
USBDCD_TIMER0_REG	derivative.h	18663;"	d
USBDCD_TIMER0_TSEQ_INIT	derivative.h	18717;"	d
USBDCD_TIMER0_TSEQ_INIT_MASK	derivative.h	18715;"	d
USBDCD_TIMER0_TSEQ_INIT_SHIFT	derivative.h	18716;"	d
USBDCD_TIMER0_TUNITCON	derivative.h	18714;"	d
USBDCD_TIMER0_TUNITCON_MASK	derivative.h	18712;"	d
USBDCD_TIMER0_TUNITCON_SHIFT	derivative.h	18713;"	d
USBDCD_TIMER1	derivative.h	18760;"	d
USBDCD_TIMER1_REG	derivative.h	18664;"	d
USBDCD_TIMER1_TDCD_DBNC	derivative.h	18724;"	d
USBDCD_TIMER1_TDCD_DBNC_MASK	derivative.h	18722;"	d
USBDCD_TIMER1_TDCD_DBNC_SHIFT	derivative.h	18723;"	d
USBDCD_TIMER1_TVDPSRC_ON	derivative.h	18721;"	d
USBDCD_TIMER1_TVDPSRC_ON_MASK	derivative.h	18719;"	d
USBDCD_TIMER1_TVDPSRC_ON_SHIFT	derivative.h	18720;"	d
USBDCD_TIMER2	derivative.h	18761;"	d
USBDCD_TIMER2_CHECK_DM	derivative.h	18728;"	d
USBDCD_TIMER2_CHECK_DM_MASK	derivative.h	18726;"	d
USBDCD_TIMER2_CHECK_DM_SHIFT	derivative.h	18727;"	d
USBDCD_TIMER2_REG	derivative.h	18665;"	d
USBDCD_TIMER2_TVDPSRC_CON	derivative.h	18731;"	d
USBDCD_TIMER2_TVDPSRC_CON_MASK	derivative.h	18729;"	d
USBDCD_TIMER2_TVDPSRC_CON_SHIFT	derivative.h	18730;"	d
USBFRMADJUST	derivative.h	/^  uint8_t USBFRMADJUST;                            \/**< Frame Adjust Register, offset: 0x114 *\/$/;"	m	struct:USB_MemMap
USBGENCTRL	derivative.h	/^  uint32_t USBGENCTRL;                             \/**< USB General Control Register, offset: 0x200 *\/$/;"	m	struct:USBHS_MemMap
USBHS_ASYNCLISTADDR	derivative.h	19484;"	d
USBHS_ASYNCLISTADDR_ASYBASE	derivative.h	19174;"	d
USBHS_ASYNCLISTADDR_ASYBASE_MASK	derivative.h	19172;"	d
USBHS_ASYNCLISTADDR_ASYBASE_SHIFT	derivative.h	19173;"	d
USBHS_ASYNCLISTADDR_REG	derivative.h	18874;"	d
USBHS_BASE_PTR	derivative.h	19446;"	d
USBHS_BASE_PTRS	derivative.h	19448;"	d
USBHS_BURSTSIZE	derivative.h	19487;"	d
USBHS_BURSTSIZE_REG	derivative.h	18877;"	d
USBHS_BURSTSIZE_RXPBURST	derivative.h	19188;"	d
USBHS_BURSTSIZE_RXPBURST_MASK	derivative.h	19186;"	d
USBHS_BURSTSIZE_RXPBURST_SHIFT	derivative.h	19187;"	d
USBHS_BURSTSIZE_TXPBURST	derivative.h	19191;"	d
USBHS_BURSTSIZE_TXPBURST_MASK	derivative.h	19189;"	d
USBHS_BURSTSIZE_TXPBURST_SHIFT	derivative.h	19190;"	d
USBHS_CONFIGFLAG	derivative.h	19492;"	d
USBHS_CONFIGFLAG_REG	derivative.h	18882;"	d
USBHS_DCCPARAMS	derivative.h	19477;"	d
USBHS_DCCPARAMS_DC_MASK	derivative.h	19052;"	d
USBHS_DCCPARAMS_DC_SHIFT	derivative.h	19053;"	d
USBHS_DCCPARAMS_DEN	derivative.h	19051;"	d
USBHS_DCCPARAMS_DEN_MASK	derivative.h	19049;"	d
USBHS_DCCPARAMS_DEN_SHIFT	derivative.h	19050;"	d
USBHS_DCCPARAMS_HC_MASK	derivative.h	19054;"	d
USBHS_DCCPARAMS_HC_SHIFT	derivative.h	19055;"	d
USBHS_DCCPARAMS_REG	derivative.h	18867;"	d
USBHS_DCIVERSION	derivative.h	19476;"	d
USBHS_DCIVERSION_DCIVERSION	derivative.h	19047;"	d
USBHS_DCIVERSION_DCIVERSION_MASK	derivative.h	19045;"	d
USBHS_DCIVERSION_DCIVERSION_SHIFT	derivative.h	19046;"	d
USBHS_DCIVERSION_REG	derivative.h	18866;"	d
USBHS_DEVICEADDR	derivative.h	19482;"	d
USBHS_DEVICEADDR_REG	derivative.h	18872;"	d
USBHS_DEVICEADDR_USBADR	derivative.h	19166;"	d
USBHS_DEVICEADDR_USBADRA_MASK	derivative.h	19162;"	d
USBHS_DEVICEADDR_USBADRA_SHIFT	derivative.h	19163;"	d
USBHS_DEVICEADDR_USBADR_MASK	derivative.h	19164;"	d
USBHS_DEVICEADDR_USBADR_SHIFT	derivative.h	19165;"	d
USBHS_ENDPTNAK	derivative.h	19490;"	d
USBHS_ENDPTNAKEN	derivative.h	19491;"	d
USBHS_ENDPTNAKEN_EPRNE	derivative.h	19233;"	d
USBHS_ENDPTNAKEN_EPRNE_MASK	derivative.h	19231;"	d
USBHS_ENDPTNAKEN_EPRNE_SHIFT	derivative.h	19232;"	d
USBHS_ENDPTNAKEN_EPTNE	derivative.h	19236;"	d
USBHS_ENDPTNAKEN_EPTNE_MASK	derivative.h	19234;"	d
USBHS_ENDPTNAKEN_EPTNE_SHIFT	derivative.h	19235;"	d
USBHS_ENDPTNAKEN_REG	derivative.h	18881;"	d
USBHS_ENDPTNAK_EPRN	derivative.h	19226;"	d
USBHS_ENDPTNAK_EPRN_MASK	derivative.h	19224;"	d
USBHS_ENDPTNAK_EPRN_SHIFT	derivative.h	19225;"	d
USBHS_ENDPTNAK_EPTN	derivative.h	19229;"	d
USBHS_ENDPTNAK_EPTN_MASK	derivative.h	19227;"	d
USBHS_ENDPTNAK_EPTN_SHIFT	derivative.h	19228;"	d
USBHS_ENDPTNAK_REG	derivative.h	18880;"	d
USBHS_EPCOMPLETE	derivative.h	19500;"	d
USBHS_EPCOMPLETE_ERCE	derivative.h	19385;"	d
USBHS_EPCOMPLETE_ERCE_MASK	derivative.h	19383;"	d
USBHS_EPCOMPLETE_ERCE_SHIFT	derivative.h	19384;"	d
USBHS_EPCOMPLETE_ETCE	derivative.h	19388;"	d
USBHS_EPCOMPLETE_ETCE_MASK	derivative.h	19386;"	d
USBHS_EPCOMPLETE_ETCE_SHIFT	derivative.h	19387;"	d
USBHS_EPCOMPLETE_REG	derivative.h	18890;"	d
USBHS_EPCR	derivative.h	19508;"	d
USBHS_EPCR0	derivative.h	19501;"	d
USBHS_EPCR0_REG	derivative.h	18891;"	d
USBHS_EPCR0_RXE_MASK	derivative.h	19395;"	d
USBHS_EPCR0_RXE_SHIFT	derivative.h	19396;"	d
USBHS_EPCR0_RXS_MASK	derivative.h	19390;"	d
USBHS_EPCR0_RXS_SHIFT	derivative.h	19391;"	d
USBHS_EPCR0_RXT	derivative.h	19394;"	d
USBHS_EPCR0_RXT_MASK	derivative.h	19392;"	d
USBHS_EPCR0_RXT_SHIFT	derivative.h	19393;"	d
USBHS_EPCR0_TXE_MASK	derivative.h	19402;"	d
USBHS_EPCR0_TXE_SHIFT	derivative.h	19403;"	d
USBHS_EPCR0_TXS_MASK	derivative.h	19397;"	d
USBHS_EPCR0_TXS_SHIFT	derivative.h	19398;"	d
USBHS_EPCR0_TXT	derivative.h	19401;"	d
USBHS_EPCR0_TXT_MASK	derivative.h	19399;"	d
USBHS_EPCR0_TXT_SHIFT	derivative.h	19400;"	d
USBHS_EPCR1	derivative.h	19502;"	d
USBHS_EPCR2	derivative.h	19503;"	d
USBHS_EPCR3	derivative.h	19504;"	d
USBHS_EPCR_REG	derivative.h	18892;"	d
USBHS_EPCR_RXD_MASK	derivative.h	19407;"	d
USBHS_EPCR_RXD_SHIFT	derivative.h	19408;"	d
USBHS_EPCR_RXE_MASK	derivative.h	19416;"	d
USBHS_EPCR_RXE_SHIFT	derivative.h	19417;"	d
USBHS_EPCR_RXI_MASK	derivative.h	19412;"	d
USBHS_EPCR_RXI_SHIFT	derivative.h	19413;"	d
USBHS_EPCR_RXR_MASK	derivative.h	19414;"	d
USBHS_EPCR_RXR_SHIFT	derivative.h	19415;"	d
USBHS_EPCR_RXS_MASK	derivative.h	19405;"	d
USBHS_EPCR_RXS_SHIFT	derivative.h	19406;"	d
USBHS_EPCR_RXT	derivative.h	19411;"	d
USBHS_EPCR_RXT_MASK	derivative.h	19409;"	d
USBHS_EPCR_RXT_SHIFT	derivative.h	19410;"	d
USBHS_EPCR_TXD_MASK	derivative.h	19420;"	d
USBHS_EPCR_TXD_SHIFT	derivative.h	19421;"	d
USBHS_EPCR_TXE_MASK	derivative.h	19429;"	d
USBHS_EPCR_TXE_SHIFT	derivative.h	19430;"	d
USBHS_EPCR_TXI_MASK	derivative.h	19425;"	d
USBHS_EPCR_TXI_SHIFT	derivative.h	19426;"	d
USBHS_EPCR_TXR_MASK	derivative.h	19427;"	d
USBHS_EPCR_TXR_SHIFT	derivative.h	19428;"	d
USBHS_EPCR_TXS_MASK	derivative.h	19418;"	d
USBHS_EPCR_TXS_SHIFT	derivative.h	19419;"	d
USBHS_EPCR_TXT	derivative.h	19424;"	d
USBHS_EPCR_TXT_MASK	derivative.h	19422;"	d
USBHS_EPCR_TXT_SHIFT	derivative.h	19423;"	d
USBHS_EPFLUSH	derivative.h	19498;"	d
USBHS_EPFLUSH_FERB	derivative.h	19371;"	d
USBHS_EPFLUSH_FERB_MASK	derivative.h	19369;"	d
USBHS_EPFLUSH_FERB_SHIFT	derivative.h	19370;"	d
USBHS_EPFLUSH_FETB	derivative.h	19374;"	d
USBHS_EPFLUSH_FETB_MASK	derivative.h	19372;"	d
USBHS_EPFLUSH_FETB_SHIFT	derivative.h	19373;"	d
USBHS_EPFLUSH_REG	derivative.h	18888;"	d
USBHS_EPLISTADDR	derivative.h	19485;"	d
USBHS_EPLISTADDR_EPBASE	derivative.h	19178;"	d
USBHS_EPLISTADDR_EPBASE_MASK	derivative.h	19176;"	d
USBHS_EPLISTADDR_EPBASE_SHIFT	derivative.h	19177;"	d
USBHS_EPLISTADDR_REG	derivative.h	18875;"	d
USBHS_EPPRIME	derivative.h	19497;"	d
USBHS_EPPRIME_PERB	derivative.h	19364;"	d
USBHS_EPPRIME_PERB_MASK	derivative.h	19362;"	d
USBHS_EPPRIME_PERB_SHIFT	derivative.h	19363;"	d
USBHS_EPPRIME_PETB	derivative.h	19367;"	d
USBHS_EPPRIME_PETB_MASK	derivative.h	19365;"	d
USBHS_EPPRIME_PETB_SHIFT	derivative.h	19366;"	d
USBHS_EPPRIME_REG	derivative.h	18887;"	d
USBHS_EPSETUPSR	derivative.h	19496;"	d
USBHS_EPSETUPSR_EPSETUPSTAT	derivative.h	19360;"	d
USBHS_EPSETUPSR_EPSETUPSTAT_MASK	derivative.h	19358;"	d
USBHS_EPSETUPSR_EPSETUPSTAT_SHIFT	derivative.h	19359;"	d
USBHS_EPSETUPSR_REG	derivative.h	18886;"	d
USBHS_EPSR	derivative.h	19499;"	d
USBHS_EPSR_ERBR	derivative.h	19378;"	d
USBHS_EPSR_ERBR_MASK	derivative.h	19376;"	d
USBHS_EPSR_ERBR_SHIFT	derivative.h	19377;"	d
USBHS_EPSR_ETBR	derivative.h	19381;"	d
USBHS_EPSR_ETBR_MASK	derivative.h	19379;"	d
USBHS_EPSR_ETBR_SHIFT	derivative.h	19380;"	d
USBHS_EPSR_REG	derivative.h	18889;"	d
USBHS_FRINDEX	derivative.h	19481;"	d
USBHS_FRINDEX_FRINDEX	derivative.h	19157;"	d
USBHS_FRINDEX_FRINDEX_MASK	derivative.h	19155;"	d
USBHS_FRINDEX_FRINDEX_SHIFT	derivative.h	19156;"	d
USBHS_FRINDEX_REG	derivative.h	18871;"	d
USBHS_FRINDEX_Reerved	derivative.h	19160;"	d
USBHS_FRINDEX_Reerved_MASK	derivative.h	19158;"	d
USBHS_FRINDEX_Reerved_SHIFT	derivative.h	19159;"	d
USBHS_GPTIMER0CTL	derivative.h	19469;"	d
USBHS_GPTIMER0CTL_GPTCNT	derivative.h	18979;"	d
USBHS_GPTIMER0CTL_GPTCNT_MASK	derivative.h	18977;"	d
USBHS_GPTIMER0CTL_GPTCNT_SHIFT	derivative.h	18978;"	d
USBHS_GPTIMER0CTL_MODE_MASK	derivative.h	18980;"	d
USBHS_GPTIMER0CTL_MODE_SHIFT	derivative.h	18981;"	d
USBHS_GPTIMER0CTL_REG	derivative.h	18859;"	d
USBHS_GPTIMER0CTL_RST_MASK	derivative.h	18982;"	d
USBHS_GPTIMER0CTL_RST_SHIFT	derivative.h	18983;"	d
USBHS_GPTIMER0CTL_RUN_MASK	derivative.h	18984;"	d
USBHS_GPTIMER0CTL_RUN_SHIFT	derivative.h	18985;"	d
USBHS_GPTIMER0LD	derivative.h	19468;"	d
USBHS_GPTIMER0LD_GPTLD	derivative.h	18975;"	d
USBHS_GPTIMER0LD_GPTLD_MASK	derivative.h	18973;"	d
USBHS_GPTIMER0LD_GPTLD_SHIFT	derivative.h	18974;"	d
USBHS_GPTIMER0LD_REG	derivative.h	18858;"	d
USBHS_GPTIMER1CTL	derivative.h	19471;"	d
USBHS_GPTIMER1CTL_GPTCNT	derivative.h	18993;"	d
USBHS_GPTIMER1CTL_GPTCNT_MASK	derivative.h	18991;"	d
USBHS_GPTIMER1CTL_GPTCNT_SHIFT	derivative.h	18992;"	d
USBHS_GPTIMER1CTL_MODE_MASK	derivative.h	18994;"	d
USBHS_GPTIMER1CTL_MODE_SHIFT	derivative.h	18995;"	d
USBHS_GPTIMER1CTL_REG	derivative.h	18861;"	d
USBHS_GPTIMER1CTL_RST_MASK	derivative.h	18996;"	d
USBHS_GPTIMER1CTL_RST_SHIFT	derivative.h	18997;"	d
USBHS_GPTIMER1CTL_RUN_MASK	derivative.h	18998;"	d
USBHS_GPTIMER1CTL_RUN_SHIFT	derivative.h	18999;"	d
USBHS_GPTIMER1LD	derivative.h	19470;"	d
USBHS_GPTIMER1LD_GPTLD	derivative.h	18989;"	d
USBHS_GPTIMER1LD_GPTLD_MASK	derivative.h	18987;"	d
USBHS_GPTIMER1LD_GPTLD_SHIFT	derivative.h	18988;"	d
USBHS_GPTIMER1LD_REG	derivative.h	18860;"	d
USBHS_HCCPARAMS	derivative.h	19475;"	d
USBHS_HCCPARAMS_ADC_MASK	derivative.h	19032;"	d
USBHS_HCCPARAMS_ADC_SHIFT	derivative.h	19033;"	d
USBHS_HCCPARAMS_ASP_MASK	derivative.h	19036;"	d
USBHS_HCCPARAMS_ASP_SHIFT	derivative.h	19037;"	d
USBHS_HCCPARAMS_EECP	derivative.h	19043;"	d
USBHS_HCCPARAMS_EECP_MASK	derivative.h	19041;"	d
USBHS_HCCPARAMS_EECP_SHIFT	derivative.h	19042;"	d
USBHS_HCCPARAMS_IST	derivative.h	19040;"	d
USBHS_HCCPARAMS_IST_MASK	derivative.h	19038;"	d
USBHS_HCCPARAMS_IST_SHIFT	derivative.h	19039;"	d
USBHS_HCCPARAMS_PFL_MASK	derivative.h	19034;"	d
USBHS_HCCPARAMS_PFL_SHIFT	derivative.h	19035;"	d
USBHS_HCCPARAMS_REG	derivative.h	18865;"	d
USBHS_HCIVERSION	derivative.h	19473;"	d
USBHS_HCIVERSION_CAPLENGTH	derivative.h	19007;"	d
USBHS_HCIVERSION_CAPLENGTH_MASK	derivative.h	19005;"	d
USBHS_HCIVERSION_CAPLENGTH_SHIFT	derivative.h	19006;"	d
USBHS_HCIVERSION_HCIVERSION	derivative.h	19010;"	d
USBHS_HCIVERSION_HCIVERSION_MASK	derivative.h	19008;"	d
USBHS_HCIVERSION_HCIVERSION_SHIFT	derivative.h	19009;"	d
USBHS_HCIVERSION_REG	derivative.h	18863;"	d
USBHS_HCSPARAMS	derivative.h	19474;"	d
USBHS_HCSPARAMS_N_CC	derivative.h	19022;"	d
USBHS_HCSPARAMS_N_CC_MASK	derivative.h	19020;"	d
USBHS_HCSPARAMS_N_CC_SHIFT	derivative.h	19021;"	d
USBHS_HCSPARAMS_N_PCC	derivative.h	19019;"	d
USBHS_HCSPARAMS_N_PCC_MASK	derivative.h	19017;"	d
USBHS_HCSPARAMS_N_PCC_SHIFT	derivative.h	19018;"	d
USBHS_HCSPARAMS_N_PORTS	derivative.h	19014;"	d
USBHS_HCSPARAMS_N_PORTS_MASK	derivative.h	19012;"	d
USBHS_HCSPARAMS_N_PORTS_SHIFT	derivative.h	19013;"	d
USBHS_HCSPARAMS_N_PTT	derivative.h	19027;"	d
USBHS_HCSPARAMS_N_PTT_MASK	derivative.h	19025;"	d
USBHS_HCSPARAMS_N_PTT_SHIFT	derivative.h	19026;"	d
USBHS_HCSPARAMS_N_TT	derivative.h	19030;"	d
USBHS_HCSPARAMS_N_TT_MASK	derivative.h	19028;"	d
USBHS_HCSPARAMS_N_TT_SHIFT	derivative.h	19029;"	d
USBHS_HCSPARAMS_PI_MASK	derivative.h	19023;"	d
USBHS_HCSPARAMS_PI_SHIFT	derivative.h	19024;"	d
USBHS_HCSPARAMS_PPC_MASK	derivative.h	19015;"	d
USBHS_HCSPARAMS_PPC_SHIFT	derivative.h	19016;"	d
USBHS_HCSPARAMS_REG	derivative.h	18864;"	d
USBHS_HWDEVICE	derivative.h	19465;"	d
USBHS_HWDEVICE_DC_MASK	derivative.h	18948;"	d
USBHS_HWDEVICE_DC_SHIFT	derivative.h	18949;"	d
USBHS_HWDEVICE_DEVEP	derivative.h	18952;"	d
USBHS_HWDEVICE_DEVEP_MASK	derivative.h	18950;"	d
USBHS_HWDEVICE_DEVEP_SHIFT	derivative.h	18951;"	d
USBHS_HWDEVICE_REG	derivative.h	18855;"	d
USBHS_HWGENERAL	derivative.h	19463;"	d
USBHS_HWGENERAL_PHYM	derivative.h	18931;"	d
USBHS_HWGENERAL_PHYM_MASK	derivative.h	18929;"	d
USBHS_HWGENERAL_PHYM_SHIFT	derivative.h	18930;"	d
USBHS_HWGENERAL_REG	derivative.h	18853;"	d
USBHS_HWGENERAL_SM	derivative.h	18934;"	d
USBHS_HWGENERAL_SM_MASK	derivative.h	18932;"	d
USBHS_HWGENERAL_SM_SHIFT	derivative.h	18933;"	d
USBHS_HWHOST	derivative.h	19464;"	d
USBHS_HWHOST_HC_MASK	derivative.h	18936;"	d
USBHS_HWHOST_HC_SHIFT	derivative.h	18937;"	d
USBHS_HWHOST_NPORT	derivative.h	18940;"	d
USBHS_HWHOST_NPORT_MASK	derivative.h	18938;"	d
USBHS_HWHOST_NPORT_SHIFT	derivative.h	18939;"	d
USBHS_HWHOST_REG	derivative.h	18854;"	d
USBHS_HWHOST_TTASY	derivative.h	18943;"	d
USBHS_HWHOST_TTASY_MASK	derivative.h	18941;"	d
USBHS_HWHOST_TTASY_SHIFT	derivative.h	18942;"	d
USBHS_HWHOST_TTPER	derivative.h	18946;"	d
USBHS_HWHOST_TTPER_MASK	derivative.h	18944;"	d
USBHS_HWHOST_TTPER_SHIFT	derivative.h	18945;"	d
USBHS_HWRXBUF	derivative.h	19467;"	d
USBHS_HWRXBUF_REG	derivative.h	18857;"	d
USBHS_HWRXBUF_RXADD	derivative.h	18971;"	d
USBHS_HWRXBUF_RXADD_MASK	derivative.h	18969;"	d
USBHS_HWRXBUF_RXADD_SHIFT	derivative.h	18970;"	d
USBHS_HWRXBUF_RXBURST	derivative.h	18968;"	d
USBHS_HWRXBUF_RXBURST_MASK	derivative.h	18966;"	d
USBHS_HWRXBUF_RXBURST_SHIFT	derivative.h	18967;"	d
USBHS_HWTXBUF	derivative.h	19466;"	d
USBHS_HWTXBUF_REG	derivative.h	18856;"	d
USBHS_HWTXBUF_TXADD	derivative.h	18959;"	d
USBHS_HWTXBUF_TXADD_MASK	derivative.h	18957;"	d
USBHS_HWTXBUF_TXADD_SHIFT	derivative.h	18958;"	d
USBHS_HWTXBUF_TXBURST	derivative.h	18956;"	d
USBHS_HWTXBUF_TXBURST_MASK	derivative.h	18954;"	d
USBHS_HWTXBUF_TXBURST_SHIFT	derivative.h	18955;"	d
USBHS_HWTXBUF_TXCHANADD	derivative.h	18962;"	d
USBHS_HWTXBUF_TXCHANADD_MASK	derivative.h	18960;"	d
USBHS_HWTXBUF_TXCHANADD_SHIFT	derivative.h	18961;"	d
USBHS_HWTXBUF_TXLC_MASK	derivative.h	18963;"	d
USBHS_HWTXBUF_TXLC_SHIFT	derivative.h	18964;"	d
USBHS_ID	derivative.h	19462;"	d
USBHS_ID_ID	derivative.h	18912;"	d
USBHS_ID_ID_MASK	derivative.h	18910;"	d
USBHS_ID_ID_SHIFT	derivative.h	18911;"	d
USBHS_ID_NID	derivative.h	18915;"	d
USBHS_ID_NID_MASK	derivative.h	18913;"	d
USBHS_ID_NID_SHIFT	derivative.h	18914;"	d
USBHS_ID_REG	derivative.h	18852;"	d
USBHS_ID_REVISION	derivative.h	18921;"	d
USBHS_ID_REVISION_MASK	derivative.h	18919;"	d
USBHS_ID_REVISION_SHIFT	derivative.h	18920;"	d
USBHS_ID_TAG	derivative.h	18918;"	d
USBHS_ID_TAG_MASK	derivative.h	18916;"	d
USBHS_ID_TAG_SHIFT	derivative.h	18917;"	d
USBHS_ID_VERSION	derivative.h	18924;"	d
USBHS_ID_VERSIONID	derivative.h	18927;"	d
USBHS_ID_VERSIONID_MASK	derivative.h	18925;"	d
USBHS_ID_VERSIONID_SHIFT	derivative.h	18926;"	d
USBHS_ID_VERSION_MASK	derivative.h	18922;"	d
USBHS_ID_VERSION_SHIFT	derivative.h	18923;"	d
USBHS_MemMap	derivative.h	/^typedef struct USBHS_MemMap {$/;"	s
USBHS_MemMapPtr	derivative.h	/^} volatile *USBHS_MemMapPtr;$/;"	t
USBHS_OTGSC	derivative.h	19494;"	d
USBHS_OTGSC_ASVIE_MASK	derivative.h	19334;"	d
USBHS_OTGSC_ASVIE_SHIFT	derivative.h	19335;"	d
USBHS_OTGSC_ASVIS_MASK	derivative.h	19320;"	d
USBHS_OTGSC_ASVIS_SHIFT	derivative.h	19321;"	d
USBHS_OTGSC_ASV_MASK	derivative.h	19306;"	d
USBHS_OTGSC_ASV_SHIFT	derivative.h	19307;"	d
USBHS_OTGSC_AVVIE_MASK	derivative.h	19332;"	d
USBHS_OTGSC_AVVIE_SHIFT	derivative.h	19333;"	d
USBHS_OTGSC_AVVIS_MASK	derivative.h	19318;"	d
USBHS_OTGSC_AVVIS_SHIFT	derivative.h	19319;"	d
USBHS_OTGSC_AVV_MASK	derivative.h	19304;"	d
USBHS_OTGSC_AVV_SHIFT	derivative.h	19305;"	d
USBHS_OTGSC_BSEIE_MASK	derivative.h	19338;"	d
USBHS_OTGSC_BSEIE_SHIFT	derivative.h	19339;"	d
USBHS_OTGSC_BSEIS_MASK	derivative.h	19324;"	d
USBHS_OTGSC_BSEIS_SHIFT	derivative.h	19325;"	d
USBHS_OTGSC_BSE_MASK	derivative.h	19310;"	d
USBHS_OTGSC_BSE_SHIFT	derivative.h	19311;"	d
USBHS_OTGSC_BSVIE_MASK	derivative.h	19336;"	d
USBHS_OTGSC_BSVIE_SHIFT	derivative.h	19337;"	d
USBHS_OTGSC_BSVIS_MASK	derivative.h	19322;"	d
USBHS_OTGSC_BSVIS_SHIFT	derivative.h	19323;"	d
USBHS_OTGSC_BSV_MASK	derivative.h	19308;"	d
USBHS_OTGSC_BSV_SHIFT	derivative.h	19309;"	d
USBHS_OTGSC_DPIE_MASK	derivative.h	19342;"	d
USBHS_OTGSC_DPIE_SHIFT	derivative.h	19343;"	d
USBHS_OTGSC_DPIS_MASK	derivative.h	19328;"	d
USBHS_OTGSC_DPIS_SHIFT	derivative.h	19329;"	d
USBHS_OTGSC_DPS_MASK	derivative.h	19314;"	d
USBHS_OTGSC_DPS_SHIFT	derivative.h	19315;"	d
USBHS_OTGSC_DP_MASK	derivative.h	19296;"	d
USBHS_OTGSC_DP_SHIFT	derivative.h	19297;"	d
USBHS_OTGSC_HAAR_MASK	derivative.h	19292;"	d
USBHS_OTGSC_HAAR_SHIFT	derivative.h	19293;"	d
USBHS_OTGSC_HABA_MASK	derivative.h	19300;"	d
USBHS_OTGSC_HABA_SHIFT	derivative.h	19301;"	d
USBHS_OTGSC_IDIE_MASK	derivative.h	19330;"	d
USBHS_OTGSC_IDIE_SHIFT	derivative.h	19331;"	d
USBHS_OTGSC_IDIS_MASK	derivative.h	19316;"	d
USBHS_OTGSC_IDIS_SHIFT	derivative.h	19317;"	d
USBHS_OTGSC_IDPU_MASK	derivative.h	19298;"	d
USBHS_OTGSC_IDPU_SHIFT	derivative.h	19299;"	d
USBHS_OTGSC_ID_MASK	derivative.h	19302;"	d
USBHS_OTGSC_ID_SHIFT	derivative.h	19303;"	d
USBHS_OTGSC_MSE_MASK	derivative.h	19340;"	d
USBHS_OTGSC_MSE_SHIFT	derivative.h	19341;"	d
USBHS_OTGSC_MSS_MASK	derivative.h	19326;"	d
USBHS_OTGSC_MSS_SHIFT	derivative.h	19327;"	d
USBHS_OTGSC_MST_MASK	derivative.h	19312;"	d
USBHS_OTGSC_MST_SHIFT	derivative.h	19313;"	d
USBHS_OTGSC_OT_MASK	derivative.h	19294;"	d
USBHS_OTGSC_OT_SHIFT	derivative.h	19295;"	d
USBHS_OTGSC_REG	derivative.h	18884;"	d
USBHS_OTGSC_VC_MASK	derivative.h	19290;"	d
USBHS_OTGSC_VC_SHIFT	derivative.h	19291;"	d
USBHS_OTGSC_VD_MASK	derivative.h	19288;"	d
USBHS_OTGSC_VD_SHIFT	derivative.h	19289;"	d
USBHS_PERIODICLISTBASE	derivative.h	19483;"	d
USBHS_PERIODICLISTBASE_PERBASE	derivative.h	19170;"	d
USBHS_PERIODICLISTBASE_PERBASE_MASK	derivative.h	19168;"	d
USBHS_PERIODICLISTBASE_PERBASE_SHIFT	derivative.h	19169;"	d
USBHS_PERIODICLISTBASE_REG	derivative.h	18873;"	d
USBHS_PORTSC1	derivative.h	19493;"	d
USBHS_PORTSC1_CCS_MASK	derivative.h	19238;"	d
USBHS_PORTSC1_CCS_SHIFT	derivative.h	19239;"	d
USBHS_PORTSC1_CSC_MASK	derivative.h	19240;"	d
USBHS_PORTSC1_CSC_SHIFT	derivative.h	19241;"	d
USBHS_PORTSC1_FPR_MASK	derivative.h	19250;"	d
USBHS_PORTSC1_FPR_SHIFT	derivative.h	19251;"	d
USBHS_PORTSC1_HSP_MASK	derivative.h	19256;"	d
USBHS_PORTSC1_HSP_SHIFT	derivative.h	19257;"	d
USBHS_PORTSC1_LS	derivative.h	19260;"	d
USBHS_PORTSC1_LS_MASK	derivative.h	19258;"	d
USBHS_PORTSC1_LS_SHIFT	derivative.h	19259;"	d
USBHS_PORTSC1_OCA_MASK	derivative.h	19246;"	d
USBHS_PORTSC1_OCA_SHIFT	derivative.h	19247;"	d
USBHS_PORTSC1_OCC_MASK	derivative.h	19248;"	d
USBHS_PORTSC1_OCC_SHIFT	derivative.h	19249;"	d
USBHS_PORTSC1_PEC_MASK	derivative.h	19244;"	d
USBHS_PORTSC1_PEC_SHIFT	derivative.h	19245;"	d
USBHS_PORTSC1_PE_MASK	derivative.h	19242;"	d
USBHS_PORTSC1_PE_SHIFT	derivative.h	19243;"	d
USBHS_PORTSC1_PFSC_MASK	derivative.h	19279;"	d
USBHS_PORTSC1_PFSC_SHIFT	derivative.h	19280;"	d
USBHS_PORTSC1_PHCD_MASK	derivative.h	19277;"	d
USBHS_PORTSC1_PHCD_SHIFT	derivative.h	19278;"	d
USBHS_PORTSC1_PIC	derivative.h	19267;"	d
USBHS_PORTSC1_PIC_MASK	derivative.h	19265;"	d
USBHS_PORTSC1_PIC_SHIFT	derivative.h	19266;"	d
USBHS_PORTSC1_PO_MASK	derivative.h	19263;"	d
USBHS_PORTSC1_PO_SHIFT	derivative.h	19264;"	d
USBHS_PORTSC1_PP_MASK	derivative.h	19261;"	d
USBHS_PORTSC1_PP_SHIFT	derivative.h	19262;"	d
USBHS_PORTSC1_PR_MASK	derivative.h	19254;"	d
USBHS_PORTSC1_PR_SHIFT	derivative.h	19255;"	d
USBHS_PORTSC1_PSPD	derivative.h	19283;"	d
USBHS_PORTSC1_PSPD_MASK	derivative.h	19281;"	d
USBHS_PORTSC1_PSPD_SHIFT	derivative.h	19282;"	d
USBHS_PORTSC1_PTC	derivative.h	19270;"	d
USBHS_PORTSC1_PTC_MASK	derivative.h	19268;"	d
USBHS_PORTSC1_PTC_SHIFT	derivative.h	19269;"	d
USBHS_PORTSC1_PTS	derivative.h	19286;"	d
USBHS_PORTSC1_PTS_MASK	derivative.h	19284;"	d
USBHS_PORTSC1_PTS_SHIFT	derivative.h	19285;"	d
USBHS_PORTSC1_REG	derivative.h	18883;"	d
USBHS_PORTSC1_SUSP_MASK	derivative.h	19252;"	d
USBHS_PORTSC1_SUSP_SHIFT	derivative.h	19253;"	d
USBHS_PORTSC1_WKCN_MASK	derivative.h	19271;"	d
USBHS_PORTSC1_WKCN_SHIFT	derivative.h	19272;"	d
USBHS_PORTSC1_WKDS_MASK	derivative.h	19273;"	d
USBHS_PORTSC1_WKDS_SHIFT	derivative.h	19274;"	d
USBHS_PORTSC1_WKOC_MASK	derivative.h	19275;"	d
USBHS_PORTSC1_WKOC_SHIFT	derivative.h	19276;"	d
USBHS_TTCTRL	derivative.h	19486;"	d
USBHS_TTCTRL_REG	derivative.h	18876;"	d
USBHS_TTCTRL_Reerved_MASK	derivative.h	19183;"	d
USBHS_TTCTRL_Reerved_SHIFT	derivative.h	19184;"	d
USBHS_TTCTRL_TTHA	derivative.h	19182;"	d
USBHS_TTCTRL_TTHA_MASK	derivative.h	19180;"	d
USBHS_TTCTRL_TTHA_SHIFT	derivative.h	19181;"	d
USBHS_TXFILLTUNING	derivative.h	19488;"	d
USBHS_TXFILLTUNING_REG	derivative.h	18878;"	d
USBHS_TXFILLTUNING_TXFIFOTHRES	derivative.h	19201;"	d
USBHS_TXFILLTUNING_TXFIFOTHRES_MASK	derivative.h	19199;"	d
USBHS_TXFILLTUNING_TXFIFOTHRES_SHIFT	derivative.h	19200;"	d
USBHS_TXFILLTUNING_TXSCHHEALTH	derivative.h	19198;"	d
USBHS_TXFILLTUNING_TXSCHHEALTH_MASK	derivative.h	19196;"	d
USBHS_TXFILLTUNING_TXSCHHEALTH_SHIFT	derivative.h	19197;"	d
USBHS_TXFILLTUNING_TXSCHOH	derivative.h	19195;"	d
USBHS_TXFILLTUNING_TXSCHOH_MASK	derivative.h	19193;"	d
USBHS_TXFILLTUNING_TXSCHOH_SHIFT	derivative.h	19194;"	d
USBHS_ULPI_VIEWPORT	derivative.h	19489;"	d
USBHS_ULPI_VIEWPORT_REG	derivative.h	18879;"	d
USBHS_ULPI_VIEWPORT_ULPI_ADDR	derivative.h	19211;"	d
USBHS_ULPI_VIEWPORT_ULPI_ADDR_MASK	derivative.h	19209;"	d
USBHS_ULPI_VIEWPORT_ULPI_ADDR_SHIFT	derivative.h	19210;"	d
USBHS_ULPI_VIEWPORT_ULPI_DATRD	derivative.h	19208;"	d
USBHS_ULPI_VIEWPORT_ULPI_DATRD_MASK	derivative.h	19206;"	d
USBHS_ULPI_VIEWPORT_ULPI_DATRD_SHIFT	derivative.h	19207;"	d
USBHS_ULPI_VIEWPORT_ULPI_DATWR	derivative.h	19205;"	d
USBHS_ULPI_VIEWPORT_ULPI_DATWR_MASK	derivative.h	19203;"	d
USBHS_ULPI_VIEWPORT_ULPI_DATWR_SHIFT	derivative.h	19204;"	d
USBHS_ULPI_VIEWPORT_ULPI_PORT	derivative.h	19214;"	d
USBHS_ULPI_VIEWPORT_ULPI_PORT_MASK	derivative.h	19212;"	d
USBHS_ULPI_VIEWPORT_ULPI_PORT_SHIFT	derivative.h	19213;"	d
USBHS_ULPI_VIEWPORT_ULPI_RUN_MASK	derivative.h	19219;"	d
USBHS_ULPI_VIEWPORT_ULPI_RUN_SHIFT	derivative.h	19220;"	d
USBHS_ULPI_VIEWPORT_ULPI_RW_MASK	derivative.h	19217;"	d
USBHS_ULPI_VIEWPORT_ULPI_RW_SHIFT	derivative.h	19218;"	d
USBHS_ULPI_VIEWPORT_ULPI_SS_MASK	derivative.h	19215;"	d
USBHS_ULPI_VIEWPORT_ULPI_SS_SHIFT	derivative.h	19216;"	d
USBHS_ULPI_VIEWPORT_ULPI_WU_MASK	derivative.h	19221;"	d
USBHS_ULPI_VIEWPORT_ULPI_WU_SHIFT	derivative.h	19222;"	d
USBHS_USBCMD	derivative.h	19478;"	d
USBHS_USBCMD_ASE_MASK	derivative.h	19066;"	d
USBHS_USBCMD_ASE_SHIFT	derivative.h	19067;"	d
USBHS_USBCMD_ASP	derivative.h	19072;"	d
USBHS_USBCMD_ASPE_MASK	derivative.h	19073;"	d
USBHS_USBCMD_ASPE_SHIFT	derivative.h	19074;"	d
USBHS_USBCMD_ASP_MASK	derivative.h	19070;"	d
USBHS_USBCMD_ASP_SHIFT	derivative.h	19071;"	d
USBHS_USBCMD_ATDTW_MASK	derivative.h	19077;"	d
USBHS_USBCMD_ATDTW_SHIFT	derivative.h	19078;"	d
USBHS_USBCMD_FS	derivative.h	19063;"	d
USBHS_USBCMD_FS2_MASK	derivative.h	19079;"	d
USBHS_USBCMD_FS2_SHIFT	derivative.h	19080;"	d
USBHS_USBCMD_FS_MASK	derivative.h	19061;"	d
USBHS_USBCMD_FS_SHIFT	derivative.h	19062;"	d
USBHS_USBCMD_IAA_MASK	derivative.h	19068;"	d
USBHS_USBCMD_IAA_SHIFT	derivative.h	19069;"	d
USBHS_USBCMD_ITC	derivative.h	19083;"	d
USBHS_USBCMD_ITC_MASK	derivative.h	19081;"	d
USBHS_USBCMD_ITC_SHIFT	derivative.h	19082;"	d
USBHS_USBCMD_PSE_MASK	derivative.h	19064;"	d
USBHS_USBCMD_PSE_SHIFT	derivative.h	19065;"	d
USBHS_USBCMD_REG	derivative.h	18868;"	d
USBHS_USBCMD_RST_MASK	derivative.h	19059;"	d
USBHS_USBCMD_RST_SHIFT	derivative.h	19060;"	d
USBHS_USBCMD_RS_MASK	derivative.h	19057;"	d
USBHS_USBCMD_RS_SHIFT	derivative.h	19058;"	d
USBHS_USBCMD_SUTW_MASK	derivative.h	19075;"	d
USBHS_USBCMD_SUTW_SHIFT	derivative.h	19076;"	d
USBHS_USBGENCTRL	derivative.h	19505;"	d
USBHS_USBGENCTRL_REG	derivative.h	18893;"	d
USBHS_USBGENCTRL_WU_IE_MASK	derivative.h	19432;"	d
USBHS_USBGENCTRL_WU_IE_SHIFT	derivative.h	19433;"	d
USBHS_USBGENCTRL_WU_INT_CLR_MASK	derivative.h	19436;"	d
USBHS_USBGENCTRL_WU_INT_CLR_SHIFT	derivative.h	19437;"	d
USBHS_USBGENCTRL_WU_ULPI_EN_MASK	derivative.h	19434;"	d
USBHS_USBGENCTRL_WU_ULPI_EN_SHIFT	derivative.h	19435;"	d
USBHS_USBINTR	derivative.h	19480;"	d
USBHS_USBINTR_AAE_MASK	derivative.h	19134;"	d
USBHS_USBINTR_AAE_SHIFT	derivative.h	19135;"	d
USBHS_USBINTR_FRE_MASK	derivative.h	19130;"	d
USBHS_USBINTR_FRE_SHIFT	derivative.h	19131;"	d
USBHS_USBINTR_NAKE_MASK	derivative.h	19144;"	d
USBHS_USBINTR_NAKE_SHIFT	derivative.h	19145;"	d
USBHS_USBINTR_PCE_MASK	derivative.h	19128;"	d
USBHS_USBINTR_PCE_SHIFT	derivative.h	19129;"	d
USBHS_USBINTR_REG	derivative.h	18870;"	d
USBHS_USBINTR_SEE_MASK	derivative.h	19132;"	d
USBHS_USBINTR_SEE_SHIFT	derivative.h	19133;"	d
USBHS_USBINTR_SLE_MASK	derivative.h	19140;"	d
USBHS_USBINTR_SLE_SHIFT	derivative.h	19141;"	d
USBHS_USBINTR_SRE_MASK	derivative.h	19138;"	d
USBHS_USBINTR_SRE_SHIFT	derivative.h	19139;"	d
USBHS_USBINTR_TIE0_MASK	derivative.h	19150;"	d
USBHS_USBINTR_TIE0_SHIFT	derivative.h	19151;"	d
USBHS_USBINTR_TIE1_MASK	derivative.h	19152;"	d
USBHS_USBINTR_TIE1_SHIFT	derivative.h	19153;"	d
USBHS_USBINTR_UAIE_MASK	derivative.h	19146;"	d
USBHS_USBINTR_UAIE_SHIFT	derivative.h	19147;"	d
USBHS_USBINTR_UEE_MASK	derivative.h	19126;"	d
USBHS_USBINTR_UEE_SHIFT	derivative.h	19127;"	d
USBHS_USBINTR_UE_MASK	derivative.h	19124;"	d
USBHS_USBINTR_UE_SHIFT	derivative.h	19125;"	d
USBHS_USBINTR_ULPIE_MASK	derivative.h	19142;"	d
USBHS_USBINTR_ULPIE_SHIFT	derivative.h	19143;"	d
USBHS_USBINTR_UPIE_MASK	derivative.h	19148;"	d
USBHS_USBINTR_UPIE_SHIFT	derivative.h	19149;"	d
USBHS_USBINTR_URE_MASK	derivative.h	19136;"	d
USBHS_USBINTR_URE_SHIFT	derivative.h	19137;"	d
USBHS_USBMODE	derivative.h	19495;"	d
USBHS_USBMODE_CM	derivative.h	19347;"	d
USBHS_USBMODE_CM_MASK	derivative.h	19345;"	d
USBHS_USBMODE_CM_SHIFT	derivative.h	19346;"	d
USBHS_USBMODE_ES_MASK	derivative.h	19348;"	d
USBHS_USBMODE_ES_SHIFT	derivative.h	19349;"	d
USBHS_USBMODE_REG	derivative.h	18885;"	d
USBHS_USBMODE_SDIS_MASK	derivative.h	19352;"	d
USBHS_USBMODE_SDIS_SHIFT	derivative.h	19353;"	d
USBHS_USBMODE_SLOM_MASK	derivative.h	19350;"	d
USBHS_USBMODE_SLOM_SHIFT	derivative.h	19351;"	d
USBHS_USBMODE_TXHSD	derivative.h	19356;"	d
USBHS_USBMODE_TXHSD_MASK	derivative.h	19354;"	d
USBHS_USBMODE_TXHSD_SHIFT	derivative.h	19355;"	d
USBHS_USBSTS	derivative.h	19479;"	d
USBHS_USBSTS_AAI_MASK	derivative.h	19095;"	d
USBHS_USBSTS_AAI_SHIFT	derivative.h	19096;"	d
USBHS_USBSTS_AS_MASK	derivative.h	19111;"	d
USBHS_USBSTS_AS_SHIFT	derivative.h	19112;"	d
USBHS_USBSTS_FRI_MASK	derivative.h	19091;"	d
USBHS_USBSTS_FRI_SHIFT	derivative.h	19092;"	d
USBHS_USBSTS_HCH_MASK	derivative.h	19105;"	d
USBHS_USBSTS_HCH_SHIFT	derivative.h	19106;"	d
USBHS_USBSTS_NAKI_MASK	derivative.h	19113;"	d
USBHS_USBSTS_NAKI_SHIFT	derivative.h	19114;"	d
USBHS_USBSTS_PCI_MASK	derivative.h	19089;"	d
USBHS_USBSTS_PCI_SHIFT	derivative.h	19090;"	d
USBHS_USBSTS_PS_MASK	derivative.h	19109;"	d
USBHS_USBSTS_PS_SHIFT	derivative.h	19110;"	d
USBHS_USBSTS_RCL_MASK	derivative.h	19107;"	d
USBHS_USBSTS_RCL_SHIFT	derivative.h	19108;"	d
USBHS_USBSTS_REG	derivative.h	18869;"	d
USBHS_USBSTS_SEI_MASK	derivative.h	19093;"	d
USBHS_USBSTS_SEI_SHIFT	derivative.h	19094;"	d
USBHS_USBSTS_SLI_MASK	derivative.h	19101;"	d
USBHS_USBSTS_SLI_SHIFT	derivative.h	19102;"	d
USBHS_USBSTS_SRI_MASK	derivative.h	19099;"	d
USBHS_USBSTS_SRI_SHIFT	derivative.h	19100;"	d
USBHS_USBSTS_TI0_MASK	derivative.h	19119;"	d
USBHS_USBSTS_TI0_SHIFT	derivative.h	19120;"	d
USBHS_USBSTS_TI1_MASK	derivative.h	19121;"	d
USBHS_USBSTS_TI1_SHIFT	derivative.h	19122;"	d
USBHS_USBSTS_UAI_MASK	derivative.h	19115;"	d
USBHS_USBSTS_UAI_SHIFT	derivative.h	19116;"	d
USBHS_USBSTS_UEI_MASK	derivative.h	19087;"	d
USBHS_USBSTS_UEI_SHIFT	derivative.h	19088;"	d
USBHS_USBSTS_UI_MASK	derivative.h	19085;"	d
USBHS_USBSTS_UI_SHIFT	derivative.h	19086;"	d
USBHS_USBSTS_ULPII_MASK	derivative.h	19103;"	d
USBHS_USBSTS_ULPII_SHIFT	derivative.h	19104;"	d
USBHS_USBSTS_UPI_MASK	derivative.h	19117;"	d
USBHS_USBSTS_UPI_SHIFT	derivative.h	19118;"	d
USBHS_USBSTS_URI_MASK	derivative.h	19097;"	d
USBHS_USBSTS_URI_SHIFT	derivative.h	19098;"	d
USBHS_USB_SBUSCFG	derivative.h	19472;"	d
USBHS_USB_SBUSCFG_BURSTMODE	derivative.h	19003;"	d
USBHS_USB_SBUSCFG_BURSTMODE_MASK	derivative.h	19001;"	d
USBHS_USB_SBUSCFG_BURSTMODE_SHIFT	derivative.h	19002;"	d
USBHS_USB_SBUSCFG_REG	derivative.h	18862;"	d
USBINTR	derivative.h	/^  uint32_t USBINTR;                                \/**< USB Interrupt Enable Register, offset: 0x148 *\/$/;"	m	struct:USBHS_MemMap
USBMODE	derivative.h	/^  uint32_t USBMODE;                                \/**< USB Mode Register, offset: 0x1A8 *\/$/;"	m	struct:USBHS_MemMap
USBSTS	derivative.h	/^  uint32_t USBSTS;                                 \/**< USB Status Register, offset: 0x144 *\/$/;"	m	struct:USBHS_MemMap
USBTRC0	derivative.h	/^  uint8_t USBTRC0;                                 \/**< USB Transceiver Control Register 0, offset: 0x10C *\/$/;"	m	struct:USB_MemMap
USB_ADDINFO_IEHOST_MASK	derivative.h	18326;"	d
USB_ADDINFO_IEHOST_SHIFT	derivative.h	18327;"	d
USB_ADDINFO_IRQNUM	derivative.h	18330;"	d
USB_ADDINFO_IRQNUM_MASK	derivative.h	18328;"	d
USB_ADDINFO_IRQNUM_SHIFT	derivative.h	18329;"	d
USB_ADDINFO_REG	derivative.h	18273;"	d
USB_ADDR_ADDR	derivative.h	18471;"	d
USB_ADDR_ADDR_MASK	derivative.h	18469;"	d
USB_ADDR_ADDR_SHIFT	derivative.h	18470;"	d
USB_ADDR_LSEN_MASK	derivative.h	18472;"	d
USB_ADDR_LSEN_SHIFT	derivative.h	18473;"	d
USB_ADDR_REG	derivative.h	18284;"	d
USB_BASE_PTRS	derivative.h	18558;"	d
USB_BDTPAGE1_BDTBA	derivative.h	18477;"	d
USB_BDTPAGE1_BDTBA_MASK	derivative.h	18475;"	d
USB_BDTPAGE1_BDTBA_SHIFT	derivative.h	18476;"	d
USB_BDTPAGE1_REG	derivative.h	18285;"	d
USB_BDTPAGE2_BDTBA	derivative.h	18500;"	d
USB_BDTPAGE2_BDTBA_MASK	derivative.h	18498;"	d
USB_BDTPAGE2_BDTBA_SHIFT	derivative.h	18499;"	d
USB_BDTPAGE2_REG	derivative.h	18290;"	d
USB_BDTPAGE3_BDTBA	derivative.h	18504;"	d
USB_BDTPAGE3_BDTBA_MASK	derivative.h	18502;"	d
USB_BDTPAGE3_BDTBA_SHIFT	derivative.h	18503;"	d
USB_BDTPAGE3_REG	derivative.h	18291;"	d
USB_CONTROL_DPPULLUPNONOTG_MASK	derivative.h	18533;"	d
USB_CONTROL_DPPULLUPNONOTG_SHIFT	derivative.h	18534;"	d
USB_CONTROL_REG	derivative.h	18295;"	d
USB_CTL_HOSTMODEEN_MASK	derivative.h	18458;"	d
USB_CTL_HOSTMODEEN_SHIFT	derivative.h	18459;"	d
USB_CTL_JSTATE_MASK	derivative.h	18466;"	d
USB_CTL_JSTATE_SHIFT	derivative.h	18467;"	d
USB_CTL_ODDRST_MASK	derivative.h	18454;"	d
USB_CTL_ODDRST_SHIFT	derivative.h	18455;"	d
USB_CTL_REG	derivative.h	18283;"	d
USB_CTL_RESET_MASK	derivative.h	18460;"	d
USB_CTL_RESET_SHIFT	derivative.h	18461;"	d
USB_CTL_RESUME_MASK	derivative.h	18456;"	d
USB_CTL_RESUME_SHIFT	derivative.h	18457;"	d
USB_CTL_SE0_MASK	derivative.h	18464;"	d
USB_CTL_SE0_SHIFT	derivative.h	18465;"	d
USB_CTL_TXSUSPENDTOKENBUSY_MASK	derivative.h	18462;"	d
USB_CTL_TXSUSPENDTOKENBUSY_SHIFT	derivative.h	18463;"	d
USB_CTL_USBENSOFEN_MASK	derivative.h	18452;"	d
USB_CTL_USBENSOFEN_SHIFT	derivative.h	18453;"	d
USB_ENDPT_EPCTLDIS_MASK	derivative.h	18514;"	d
USB_ENDPT_EPCTLDIS_SHIFT	derivative.h	18515;"	d
USB_ENDPT_EPHSHK_MASK	derivative.h	18506;"	d
USB_ENDPT_EPHSHK_SHIFT	derivative.h	18507;"	d
USB_ENDPT_EPRXEN_MASK	derivative.h	18512;"	d
USB_ENDPT_EPRXEN_SHIFT	derivative.h	18513;"	d
USB_ENDPT_EPSTALL_MASK	derivative.h	18508;"	d
USB_ENDPT_EPSTALL_SHIFT	derivative.h	18509;"	d
USB_ENDPT_EPTXEN_MASK	derivative.h	18510;"	d
USB_ENDPT_EPTXEN_SHIFT	derivative.h	18511;"	d
USB_ENDPT_HOSTWOHUB_MASK	derivative.h	18518;"	d
USB_ENDPT_HOSTWOHUB_SHIFT	derivative.h	18519;"	d
USB_ENDPT_REG	derivative.h	18292;"	d
USB_ENDPT_RETRYDIS_MASK	derivative.h	18516;"	d
USB_ENDPT_RETRYDIS_SHIFT	derivative.h	18517;"	d
USB_ERREN_BTOERREN_MASK	derivative.h	18437;"	d
USB_ERREN_BTOERREN_SHIFT	derivative.h	18438;"	d
USB_ERREN_BTSERREN_MASK	derivative.h	18441;"	d
USB_ERREN_BTSERREN_SHIFT	derivative.h	18442;"	d
USB_ERREN_CRC16EN_MASK	derivative.h	18433;"	d
USB_ERREN_CRC16EN_SHIFT	derivative.h	18434;"	d
USB_ERREN_CRC5EOFEN_MASK	derivative.h	18431;"	d
USB_ERREN_CRC5EOFEN_SHIFT	derivative.h	18432;"	d
USB_ERREN_DFN8EN_MASK	derivative.h	18435;"	d
USB_ERREN_DFN8EN_SHIFT	derivative.h	18436;"	d
USB_ERREN_DMAERREN_MASK	derivative.h	18439;"	d
USB_ERREN_DMAERREN_SHIFT	derivative.h	18440;"	d
USB_ERREN_PIDERREN_MASK	derivative.h	18429;"	d
USB_ERREN_PIDERREN_SHIFT	derivative.h	18430;"	d
USB_ERREN_REG	derivative.h	18281;"	d
USB_ERRSTAT_BTOERR_MASK	derivative.h	18422;"	d
USB_ERRSTAT_BTOERR_SHIFT	derivative.h	18423;"	d
USB_ERRSTAT_BTSERR_MASK	derivative.h	18426;"	d
USB_ERRSTAT_BTSERR_SHIFT	derivative.h	18427;"	d
USB_ERRSTAT_CRC16_MASK	derivative.h	18418;"	d
USB_ERRSTAT_CRC16_SHIFT	derivative.h	18419;"	d
USB_ERRSTAT_CRC5EOF_MASK	derivative.h	18416;"	d
USB_ERRSTAT_CRC5EOF_SHIFT	derivative.h	18417;"	d
USB_ERRSTAT_DFN8_MASK	derivative.h	18420;"	d
USB_ERRSTAT_DFN8_SHIFT	derivative.h	18421;"	d
USB_ERRSTAT_DMAERR_MASK	derivative.h	18424;"	d
USB_ERRSTAT_DMAERR_SHIFT	derivative.h	18425;"	d
USB_ERRSTAT_PIDERR_MASK	derivative.h	18414;"	d
USB_ERRSTAT_PIDERR_SHIFT	derivative.h	18415;"	d
USB_ERRSTAT_REG	derivative.h	18280;"	d
USB_FRMNUMH_FRM	derivative.h	18485;"	d
USB_FRMNUMH_FRM_MASK	derivative.h	18483;"	d
USB_FRMNUMH_FRM_SHIFT	derivative.h	18484;"	d
USB_FRMNUMH_REG	derivative.h	18287;"	d
USB_FRMNUML_FRM	derivative.h	18481;"	d
USB_FRMNUML_FRM_MASK	derivative.h	18479;"	d
USB_FRMNUML_FRM_SHIFT	derivative.h	18480;"	d
USB_FRMNUML_REG	derivative.h	18286;"	d
USB_IDCOMP_NID	derivative.h	18320;"	d
USB_IDCOMP_NID_MASK	derivative.h	18318;"	d
USB_IDCOMP_NID_SHIFT	derivative.h	18319;"	d
USB_IDCOMP_REG	derivative.h	18271;"	d
USB_INTEN_ATTACHEN_MASK	derivative.h	18409;"	d
USB_INTEN_ATTACHEN_SHIFT	derivative.h	18410;"	d
USB_INTEN_ERROREN_MASK	derivative.h	18399;"	d
USB_INTEN_ERROREN_SHIFT	derivative.h	18400;"	d
USB_INTEN_REG	derivative.h	18279;"	d
USB_INTEN_RESUMEEN_MASK	derivative.h	18407;"	d
USB_INTEN_RESUMEEN_SHIFT	derivative.h	18408;"	d
USB_INTEN_SLEEPEN_MASK	derivative.h	18405;"	d
USB_INTEN_SLEEPEN_SHIFT	derivative.h	18406;"	d
USB_INTEN_SOFTOKEN_MASK	derivative.h	18401;"	d
USB_INTEN_SOFTOKEN_SHIFT	derivative.h	18402;"	d
USB_INTEN_STALLEN_MASK	derivative.h	18411;"	d
USB_INTEN_STALLEN_SHIFT	derivative.h	18412;"	d
USB_INTEN_TOKDNEEN_MASK	derivative.h	18403;"	d
USB_INTEN_TOKDNEEN_SHIFT	derivative.h	18404;"	d
USB_INTEN_USBRSTEN_MASK	derivative.h	18397;"	d
USB_INTEN_USBRSTEN_SHIFT	derivative.h	18398;"	d
USB_ISTAT_ATTACH_MASK	derivative.h	18392;"	d
USB_ISTAT_ATTACH_SHIFT	derivative.h	18393;"	d
USB_ISTAT_ERROR_MASK	derivative.h	18382;"	d
USB_ISTAT_ERROR_SHIFT	derivative.h	18383;"	d
USB_ISTAT_REG	derivative.h	18278;"	d
USB_ISTAT_RESUME_MASK	derivative.h	18390;"	d
USB_ISTAT_RESUME_SHIFT	derivative.h	18391;"	d
USB_ISTAT_SLEEP_MASK	derivative.h	18388;"	d
USB_ISTAT_SLEEP_SHIFT	derivative.h	18389;"	d
USB_ISTAT_SOFTOK_MASK	derivative.h	18384;"	d
USB_ISTAT_SOFTOK_SHIFT	derivative.h	18385;"	d
USB_ISTAT_STALL_MASK	derivative.h	18394;"	d
USB_ISTAT_STALL_SHIFT	derivative.h	18395;"	d
USB_ISTAT_TOKDNE_MASK	derivative.h	18386;"	d
USB_ISTAT_TOKDNE_SHIFT	derivative.h	18387;"	d
USB_ISTAT_USBRST_MASK	derivative.h	18380;"	d
USB_ISTAT_USBRST_SHIFT	derivative.h	18381;"	d
USB_MemMap	derivative.h	/^typedef struct USB_MemMap {$/;"	s
USB_MemMapPtr	derivative.h	/^} volatile *USB_MemMapPtr;$/;"	t
USB_OBSERVE_DMPD_MASK	derivative.h	18526;"	d
USB_OBSERVE_DMPD_SHIFT	derivative.h	18527;"	d
USB_OBSERVE_DPPD_MASK	derivative.h	18528;"	d
USB_OBSERVE_DPPD_SHIFT	derivative.h	18529;"	d
USB_OBSERVE_DPPU_MASK	derivative.h	18530;"	d
USB_OBSERVE_DPPU_SHIFT	derivative.h	18531;"	d
USB_OBSERVE_REG	derivative.h	18294;"	d
USB_OTGCTL_DMLOW_MASK	derivative.h	18373;"	d
USB_OTGCTL_DMLOW_SHIFT	derivative.h	18374;"	d
USB_OTGCTL_DPHIGH_MASK	derivative.h	18377;"	d
USB_OTGCTL_DPHIGH_SHIFT	derivative.h	18378;"	d
USB_OTGCTL_DPLOW_MASK	derivative.h	18375;"	d
USB_OTGCTL_DPLOW_SHIFT	derivative.h	18376;"	d
USB_OTGCTL_OTGEN_MASK	derivative.h	18371;"	d
USB_OTGCTL_OTGEN_SHIFT	derivative.h	18372;"	d
USB_OTGCTL_REG	derivative.h	18277;"	d
USB_OTGICR_AVBUSEN_MASK	derivative.h	18345;"	d
USB_OTGICR_AVBUSEN_SHIFT	derivative.h	18346;"	d
USB_OTGICR_BSESSEN_MASK	derivative.h	18347;"	d
USB_OTGICR_BSESSEN_SHIFT	derivative.h	18348;"	d
USB_OTGICR_IDEN_MASK	derivative.h	18355;"	d
USB_OTGICR_IDEN_SHIFT	derivative.h	18356;"	d
USB_OTGICR_LINESTATEEN_MASK	derivative.h	18351;"	d
USB_OTGICR_LINESTATEEN_SHIFT	derivative.h	18352;"	d
USB_OTGICR_ONEMSECEN_MASK	derivative.h	18353;"	d
USB_OTGICR_ONEMSECEN_SHIFT	derivative.h	18354;"	d
USB_OTGICR_REG	derivative.h	18275;"	d
USB_OTGICR_SESSVLDEN_MASK	derivative.h	18349;"	d
USB_OTGICR_SESSVLDEN_SHIFT	derivative.h	18350;"	d
USB_OTGISTAT_AVBUSCHG_MASK	derivative.h	18332;"	d
USB_OTGISTAT_AVBUSCHG_SHIFT	derivative.h	18333;"	d
USB_OTGISTAT_B_SESS_CHG_MASK	derivative.h	18334;"	d
USB_OTGISTAT_B_SESS_CHG_SHIFT	derivative.h	18335;"	d
USB_OTGISTAT_IDCHG_MASK	derivative.h	18342;"	d
USB_OTGISTAT_IDCHG_SHIFT	derivative.h	18343;"	d
USB_OTGISTAT_LINE_STATE_CHG_MASK	derivative.h	18338;"	d
USB_OTGISTAT_LINE_STATE_CHG_SHIFT	derivative.h	18339;"	d
USB_OTGISTAT_ONEMSEC_MASK	derivative.h	18340;"	d
USB_OTGISTAT_ONEMSEC_SHIFT	derivative.h	18341;"	d
USB_OTGISTAT_REG	derivative.h	18274;"	d
USB_OTGISTAT_SESSVLDCHG_MASK	derivative.h	18336;"	d
USB_OTGISTAT_SESSVLDCHG_SHIFT	derivative.h	18337;"	d
USB_OTGSTAT_AVBUSVLD_MASK	derivative.h	18358;"	d
USB_OTGSTAT_AVBUSVLD_SHIFT	derivative.h	18359;"	d
USB_OTGSTAT_BSESSEND_MASK	derivative.h	18360;"	d
USB_OTGSTAT_BSESSEND_SHIFT	derivative.h	18361;"	d
USB_OTGSTAT_ID_MASK	derivative.h	18368;"	d
USB_OTGSTAT_ID_SHIFT	derivative.h	18369;"	d
USB_OTGSTAT_LINESTATESTABLE_MASK	derivative.h	18364;"	d
USB_OTGSTAT_LINESTATESTABLE_SHIFT	derivative.h	18365;"	d
USB_OTGSTAT_ONEMSECEN_MASK	derivative.h	18366;"	d
USB_OTGSTAT_ONEMSECEN_SHIFT	derivative.h	18367;"	d
USB_OTGSTAT_REG	derivative.h	18276;"	d
USB_OTGSTAT_SESS_VLD_MASK	derivative.h	18362;"	d
USB_OTGSTAT_SESS_VLD_SHIFT	derivative.h	18363;"	d
USB_PERID_ID	derivative.h	18316;"	d
USB_PERID_ID_MASK	derivative.h	18314;"	d
USB_PERID_ID_SHIFT	derivative.h	18315;"	d
USB_PERID_REG	derivative.h	18270;"	d
USB_REV_REG	derivative.h	18272;"	d
USB_REV_REV	derivative.h	18324;"	d
USB_REV_REV_MASK	derivative.h	18322;"	d
USB_REV_REV_SHIFT	derivative.h	18323;"	d
USB_SBUSCFG	derivative.h	/^  uint32_t USB_SBUSCFG;                            \/**< System Bus Interface Configuration Register, offset: 0x90 *\/$/;"	m	struct:USBHS_MemMap
USB_SOFTHLD_CNT	derivative.h	18496;"	d
USB_SOFTHLD_CNT_MASK	derivative.h	18494;"	d
USB_SOFTHLD_CNT_SHIFT	derivative.h	18495;"	d
USB_SOFTHLD_REG	derivative.h	18289;"	d
USB_STAT_ENDP	derivative.h	18450;"	d
USB_STAT_ENDP_MASK	derivative.h	18448;"	d
USB_STAT_ENDP_SHIFT	derivative.h	18449;"	d
USB_STAT_ODD_MASK	derivative.h	18444;"	d
USB_STAT_ODD_SHIFT	derivative.h	18445;"	d
USB_STAT_REG	derivative.h	18282;"	d
USB_STAT_TX_MASK	derivative.h	18446;"	d
USB_STAT_TX_SHIFT	derivative.h	18447;"	d
USB_TOKEN_REG	derivative.h	18288;"	d
USB_TOKEN_TOKENENDPT	derivative.h	18489;"	d
USB_TOKEN_TOKENENDPT_MASK	derivative.h	18487;"	d
USB_TOKEN_TOKENENDPT_SHIFT	derivative.h	18488;"	d
USB_TOKEN_TOKENPID	derivative.h	18492;"	d
USB_TOKEN_TOKENPID_MASK	derivative.h	18490;"	d
USB_TOKEN_TOKENPID_SHIFT	derivative.h	18491;"	d
USB_USBCTRL_PDE_MASK	derivative.h	18521;"	d
USB_USBCTRL_PDE_SHIFT	derivative.h	18522;"	d
USB_USBCTRL_REG	derivative.h	18293;"	d
USB_USBCTRL_SUSP_MASK	derivative.h	18523;"	d
USB_USBCTRL_SUSP_SHIFT	derivative.h	18524;"	d
USB_USBFRMADJUST_ADJ	derivative.h	18547;"	d
USB_USBFRMADJUST_ADJ_MASK	derivative.h	18545;"	d
USB_USBFRMADJUST_ADJ_SHIFT	derivative.h	18546;"	d
USB_USBFRMADJUST_REG	derivative.h	18297;"	d
USB_USBTRC0_REG	derivative.h	18296;"	d
USB_USBTRC0_SYNC_DET_MASK	derivative.h	18538;"	d
USB_USBTRC0_SYNC_DET_SHIFT	derivative.h	18539;"	d
USB_USBTRC0_USBRESET_MASK	derivative.h	18542;"	d
USB_USBTRC0_USBRESET_SHIFT	derivative.h	18543;"	d
USB_USBTRC0_USBRESMEN_MASK	derivative.h	18540;"	d
USB_USBTRC0_USBRESMEN_SHIFT	derivative.h	18541;"	d
USB_USBTRC0_USB_RESUME_INT_MASK	derivative.h	18536;"	d
USB_USBTRC0_USB_RESUME_INT_SHIFT	derivative.h	18537;"	d
VENDOR	derivative.h	/^  uint32_t VENDOR;                                 \/**< Vendor Specific Register, offset: 0xC0 *\/$/;"	m	struct:SDHC_MemMap
VLLSCTRL	derivative.h	/^  uint8_t VLLSCTRL;                                \/**< VLLS Control Register, offset: 0x2 *\/$/;"	m	struct:SMC_MemMap
VREF_BASE_PTR	derivative.h	19585;"	d
VREF_BASE_PTRS	derivative.h	19587;"	d
VREF_MemMap	derivative.h	/^typedef struct VREF_MemMap {$/;"	s
VREF_MemMapPtr	derivative.h	/^} volatile *VREF_MemMapPtr;$/;"	t
VREF_SC	derivative.h	19602;"	d
VREF_SC_MODE_LV	derivative.h	19570;"	d
VREF_SC_MODE_LV_MASK	derivative.h	19568;"	d
VREF_SC_MODE_LV_SHIFT	derivative.h	19569;"	d
VREF_SC_REG	derivative.h	19547;"	d
VREF_SC_REGEN_MASK	derivative.h	19573;"	d
VREF_SC_REGEN_SHIFT	derivative.h	19574;"	d
VREF_SC_VREFEN_MASK	derivative.h	19575;"	d
VREF_SC_VREFEN_SHIFT	derivative.h	19576;"	d
VREF_SC_VREFST_MASK	derivative.h	19571;"	d
VREF_SC_VREFST_SHIFT	derivative.h	19572;"	d
VREF_TRM	derivative.h	19601;"	d
VREF_TRM_REG	derivative.h	19546;"	d
VREF_TRM_TRIM	derivative.h	19566;"	d
VREF_TRM_TRIM_MASK	derivative.h	19564;"	d
VREF_TRM_TRIM_SHIFT	derivative.h	19565;"	d
VTOR	derivative.h	/^  uint32_t VTOR;                                   \/**< Vector Table Offset Register, offset: 0xD08 *\/$/;"	m	struct:SCB_MemMap
WAR	derivative.h	/^  uint32_t WAR;                                    \/**< RTC Write Access Register, offset: 0x800 *\/$/;"	m	struct:RTC_MemMap
WB	derivative.h	/^  uint8_t WB;                                      \/**< UART CEA709.1-B WBASE, offset: 0x2A *\/$/;"	m	struct:UART_MemMap
WDOG_BASE_PTR	derivative.h	19754;"	d
WDOG_BASE_PTRS	derivative.h	19756;"	d
WDOG_MemMap	derivative.h	/^typedef struct WDOG_MemMap {$/;"	s
WDOG_MemMapPtr	derivative.h	/^} volatile *WDOG_MemMapPtr;$/;"	t
WDOG_PRESC	derivative.h	19781;"	d
WDOG_PRESC_PRESCVAL	derivative.h	19745;"	d
WDOG_PRESC_PRESCVAL_MASK	derivative.h	19743;"	d
WDOG_PRESC_PRESCVAL_SHIFT	derivative.h	19744;"	d
WDOG_PRESC_REG	derivative.h	19661;"	d
WDOG_REFRESH	derivative.h	19776;"	d
WDOG_REFRESH_REG	derivative.h	19656;"	d
WDOG_REFRESH_WDOGREFRESH	derivative.h	19725;"	d
WDOG_REFRESH_WDOGREFRESH_MASK	derivative.h	19723;"	d
WDOG_REFRESH_WDOGREFRESH_SHIFT	derivative.h	19724;"	d
WDOG_RSTCNT	derivative.h	19780;"	d
WDOG_RSTCNT_REG	derivative.h	19660;"	d
WDOG_RSTCNT_RSTCNT	derivative.h	19741;"	d
WDOG_RSTCNT_RSTCNT_MASK	derivative.h	19739;"	d
WDOG_RSTCNT_RSTCNT_SHIFT	derivative.h	19740;"	d
WDOG_STCTRLH	derivative.h	19770;"	d
WDOG_STCTRLH_ALLOWUPDATE_MASK	derivative.h	19686;"	d
WDOG_STCTRLH_ALLOWUPDATE_SHIFT	derivative.h	19687;"	d
WDOG_STCTRLH_BYTESEL	derivative.h	19700;"	d
WDOG_STCTRLH_BYTESEL_MASK	derivative.h	19698;"	d
WDOG_STCTRLH_BYTESEL_SHIFT	derivative.h	19699;"	d
WDOG_STCTRLH_CLKSRC_MASK	derivative.h	19680;"	d
WDOG_STCTRLH_CLKSRC_SHIFT	derivative.h	19681;"	d
WDOG_STCTRLH_DBGEN_MASK	derivative.h	19688;"	d
WDOG_STCTRLH_DBGEN_SHIFT	derivative.h	19689;"	d
WDOG_STCTRLH_DISTESTWDOG_MASK	derivative.h	19701;"	d
WDOG_STCTRLH_DISTESTWDOG_SHIFT	derivative.h	19702;"	d
WDOG_STCTRLH_IRQRSTEN_MASK	derivative.h	19682;"	d
WDOG_STCTRLH_IRQRSTEN_SHIFT	derivative.h	19683;"	d
WDOG_STCTRLH_REG	derivative.h	19650;"	d
WDOG_STCTRLH_STOPEN_MASK	derivative.h	19690;"	d
WDOG_STCTRLH_STOPEN_SHIFT	derivative.h	19691;"	d
WDOG_STCTRLH_TESTSEL_MASK	derivative.h	19696;"	d
WDOG_STCTRLH_TESTSEL_SHIFT	derivative.h	19697;"	d
WDOG_STCTRLH_TESTWDOG_MASK	derivative.h	19694;"	d
WDOG_STCTRLH_TESTWDOG_SHIFT	derivative.h	19695;"	d
WDOG_STCTRLH_WAITEN_MASK	derivative.h	19692;"	d
WDOG_STCTRLH_WAITEN_SHIFT	derivative.h	19693;"	d
WDOG_STCTRLH_WDOGEN_MASK	derivative.h	19678;"	d
WDOG_STCTRLH_WDOGEN_SHIFT	derivative.h	19679;"	d
WDOG_STCTRLH_WINEN_MASK	derivative.h	19684;"	d
WDOG_STCTRLH_WINEN_SHIFT	derivative.h	19685;"	d
WDOG_STCTRLL	derivative.h	19771;"	d
WDOG_STCTRLL_INTFLG_MASK	derivative.h	19704;"	d
WDOG_STCTRLL_INTFLG_SHIFT	derivative.h	19705;"	d
WDOG_STCTRLL_REG	derivative.h	19651;"	d
WDOG_TMROUTH	derivative.h	19778;"	d
WDOG_TMROUTH_REG	derivative.h	19658;"	d
WDOG_TMROUTH_TIMEROUTHIGH	derivative.h	19733;"	d
WDOG_TMROUTH_TIMEROUTHIGH_MASK	derivative.h	19731;"	d
WDOG_TMROUTH_TIMEROUTHIGH_SHIFT	derivative.h	19732;"	d
WDOG_TMROUTL	derivative.h	19779;"	d
WDOG_TMROUTL_REG	derivative.h	19659;"	d
WDOG_TMROUTL_TIMEROUTLOW	derivative.h	19737;"	d
WDOG_TMROUTL_TIMEROUTLOW_MASK	derivative.h	19735;"	d
WDOG_TMROUTL_TIMEROUTLOW_SHIFT	derivative.h	19736;"	d
WDOG_TOVALH	derivative.h	19772;"	d
WDOG_TOVALH_REG	derivative.h	19652;"	d
WDOG_TOVALH_TOVALHIGH	derivative.h	19709;"	d
WDOG_TOVALH_TOVALHIGH_MASK	derivative.h	19707;"	d
WDOG_TOVALH_TOVALHIGH_SHIFT	derivative.h	19708;"	d
WDOG_TOVALL	derivative.h	19773;"	d
WDOG_TOVALL_REG	derivative.h	19653;"	d
WDOG_TOVALL_TOVALLOW	derivative.h	19713;"	d
WDOG_TOVALL_TOVALLOW_MASK	derivative.h	19711;"	d
WDOG_TOVALL_TOVALLOW_SHIFT	derivative.h	19712;"	d
WDOG_UNLOCK	derivative.h	19777;"	d
WDOG_UNLOCK_REG	derivative.h	19657;"	d
WDOG_UNLOCK_WDOGUNLOCK	derivative.h	19729;"	d
WDOG_UNLOCK_WDOGUNLOCK_MASK	derivative.h	19727;"	d
WDOG_UNLOCK_WDOGUNLOCK_SHIFT	derivative.h	19728;"	d
WDOG_WINH	derivative.h	19774;"	d
WDOG_WINH_REG	derivative.h	19654;"	d
WDOG_WINH_WINHIGH	derivative.h	19717;"	d
WDOG_WINH_WINHIGH_MASK	derivative.h	19715;"	d
WDOG_WINH_WINHIGH_SHIFT	derivative.h	19716;"	d
WDOG_WINL	derivative.h	19775;"	d
WDOG_WINL_REG	derivative.h	19655;"	d
WDOG_WINL_WINLOW	derivative.h	19721;"	d
WDOG_WINL_WINLOW_MASK	derivative.h	19719;"	d
WDOG_WINL_WINLOW_SHIFT	derivative.h	19720;"	d
WF7816	derivative.h	/^  uint8_t WF7816;                                  \/**< UART 7816 Wait FD Register, offset: 0x1D *\/$/;"	m	struct:UART_MemMap
WINH	derivative.h	/^  uint16_t WINH;                                   \/**< Watchdog Window Register High, offset: 0x8 *\/$/;"	m	struct:WDOG_MemMap
WINL	derivative.h	/^  uint16_t WINL;                                   \/**< Watchdog Window Register Low, offset: 0xA *\/$/;"	m	struct:WDOG_MemMap
WML	derivative.h	/^  uint32_t WML;                                    \/**< Watermark Level Register, offset: 0x44 *\/$/;"	m	struct:SDHC_MemMap
WN7816	derivative.h	/^  uint8_t WN7816;                                  \/**< UART 7816 Wait N Register, offset: 0x1C *\/$/;"	m	struct:UART_MemMap
WORD	derivative.h	/^  uint32_t WORD[16][4];                            \/**< Region Descriptor n, Word 0..Region Descriptor n, Word 3, array offset: 0x400, array step: index*0x10, index2*0x4 *\/$/;"	m	struct:MPU_MemMap
WORD0	derivative.h	/^    uint32_t WORD0;                                  \/**< Message Buffer 0 WORD0 Register..Message Buffer 15 WORD0 Register, array offset: 0x88, array step: 0x10 *\/$/;"	m	struct:CAN_MemMap::__anon4
WORD1	derivative.h	/^    uint32_t WORD1;                                  \/**< Message Buffer 0 WORD1 Register..Message Buffer 15 WORD1 Register, array offset: 0x8C, array step: 0x10 *\/$/;"	m	struct:CAN_MemMap::__anon4
WP7816_T_TYPE0	derivative.h	/^    uint8_t WP7816_T_TYPE0;                          \/**< UART 7816 Wait Parameter Register, offset: 0x1B *\/$/;"	m	union:UART_MemMap::__anon31
WP7816_T_TYPE1	derivative.h	/^    uint8_t WP7816_T_TYPE1;                          \/**< UART 7816 Wait Parameter Register, offset: 0x1B *\/$/;"	m	union:UART_MemMap::__anon31
WUCNTR	derivative.h	/^  uint32_t WUCNTR;                                 \/**< Wake-Up Channel Counter Register, offset: 0xC *\/$/;"	m	struct:TSI_MemMap
XFERTYP	derivative.h	/^  uint32_t XFERTYP;                                \/**< Transfer Type Register, offset: 0xC *\/$/;"	m	struct:SDHC_MemMap
XOR_CA	derivative.h	/^  uint32_t XOR_CA[9];                              \/**< General Purpose Register 0 - Exclusive Or command..General Purpose Register 8 - Exclusive Or command, array offset: 0x988, array step: 0x4 *\/$/;"	m	struct:CAU_MemMap
XOR_CAA	derivative.h	/^  uint32_t XOR_CAA;                                \/**< Accumulator register - Exclusive Or command, offset: 0x984 *\/$/;"	m	struct:CAU_MemMap
XOR_CASR	derivative.h	/^  uint32_t XOR_CASR;                               \/**< Status register  - Exclusive Or command, offset: 0x980 *\/$/;"	m	struct:CAU_MemMap
XPSR_FRAME_ALIGNED_BIT	svc.c	81;"	d	file:
XPSR_FRAME_ALIGNED_MASK	svc.c	82;"	d	file:
_CAPACITIVEPADDRIVER_H	capacitivepadsdriver.h	2;"	d
_CAPACITIVEPAD_H	capacitivepads.h	4;"	d
_COMMON_H	common.h	2;"	d
_DELAY_H	delay.h	13;"	d
_FILE	io.h	/^    _FILE $/;"	e	enum:__anon37
_LCDCCONSOLE_H	lcdcConsole.h	13;"	d
_LCDCDRIVER_H	lcdcdriver.h	13;"	d
_LCDC_H	lcdc.h	3;"	d
_LEDDRIVER_H	leddriver.h	13;"	d
_LED_H	led.h	2;"	d
_MCG_H	mcg.h	13;"	d
_POTENTIAMETERDRIVER_H	potentiometerdriver.h	2;"	d
_POTENTIOMETER_H	potentiometer.h	4;"	d
_PROFONT_H	profont.h	13;"	d
_PUSHBUTTONDRIVER_H	pushbuttondriver.h	13;"	d
_PUSHBUTTON_H	pushbutton.h	2;"	d
_SDRAM_H	sdram.h	13;"	d
_SVC_H	svc.h	13;"	d
_THERMISTORDRIVER_H	thermistordriver.h	2;"	d
_THERMISTOR_H	thermistor.h	4;"	d
_UARTDRIVER_H	uartdriver.h	13;"	d
_UART_H	uart.h	3;"	d
__STRINGUTILS_H	stringutils.h	3;"	d
_capacitivepad_t	capacitivepads.h	/^typedef struct _capacitivepad_t {$/;"	s
_fdtable_t	io.h	/^typedef struct _fdtable_t {$/;"	s
_filepath_to_device_t	io.h	/^typedef struct _filepath_to_device_t {$/;"	s
_lcdcd_t	lcdc.h	/^typedef struct _lcdcd_t {$/;"	s
_led_t	led.h	/^typedef struct _led_t {$/;"	s
_mymalloc_t	mymalloc.h	/^typedef struct _mymalloc_t {$/;"	s
_potentiometer_t	potentiometer.h	/^typedef struct _potentiometer_t {$/;"	s
_pushbutton_t	pushbutton.h	/^typedef struct _pushbutton_t {$/;"	s
_stream_t	io.h	/^typedef struct _stream_t {$/;"	s
_thermistor_t	thermistor.h	/^typedef struct _thermistor_t {$/;"	s
_uart_t	uart.h	/^typedef struct _uart_t {$/;"	s
align	mymalloc.c	/^unsigned align(unsigned value){ $/;"	f
arg0	svc.c	/^		int arg0;$/;"	m	union:frame::__anon43	file:
arg1	svc.c	/^		int arg1;$/;"	m	union:frame::__anon44	file:
arg2	svc.c	/^		int arg2;$/;"	m	union:frame::__anon45	file:
arg3	svc.c	/^		int arg3;$/;"	m	union:frame::__anon46	file:
assert_memory_is_initialized	mymalloc.c	/^void assert_memory_is_initialized(){ $/;"	f
base_DCRDR	derivative.h	/^  uint32_t base_DCRDR;                             \/**< Debug Core Register Data Register, offset: 0x8 *\/$/;"	m	struct:CoreDebug_MemMap
base_DCRSR	derivative.h	/^  uint32_t base_DCRSR;                             \/**< Debug Core Register Selector Register, offset: 0x4 *\/$/;"	m	struct:CoreDebug_MemMap
base_DEMCR	derivative.h	/^  uint32_t base_DEMCR;                             \/**< Debug Exception and Monitor Control Register, offset: 0xC *\/$/;"	m	struct:CoreDebug_MemMap
base_DHCSR_Read	derivative.h	/^    uint32_t base_DHCSR_Read;                        \/**< Debug Halting Control and Status Register, offset: 0x0 *\/$/;"	m	union:CoreDebug_MemMap::__anon13
base_DHCSR_Write	derivative.h	/^    uint32_t base_DHCSR_Write;                       \/**< Debug Halting Control and Status Register, offset: 0x0 *\/$/;"	m	union:CoreDebug_MemMap::__anon13
boolean	common.h	/^typedef enum { false, true } boolean; $/;"	t	typeref:enum:__anon1
calibrate	capacitivepads.h	/^    void (*calibrate)(void); $/;"	m	struct:_capacitivepad_t
capacitivepad_calibrate	capacitivepads.c	/^void capacitivepad_calibrate(void *minor_num){ $/;"	f
capacitivepad_init	capacitivepads.c	/^int capacitivepad_init(void * minor_num){ $/;"	f
capacitivepad_minor_device	io.h	/^} capacitivepad_minor_device; $/;"	t	typeref:enum:__anon38
capacitivepad_read	capacitivepads.c	/^int capacitivepad_read(void *minor_num){ $/;"	f
capacitivepad_t	capacitivepads.h	/^} capacitivepad_t;$/;"	t	typeref:struct:_capacitivepad_t
capacitivepads	capacitivepads.c	/^capacitivepad_t capacitivepads[NUM_OF_CAPACITIVEPADS] = { $/;"	v
cat	io.c	/^void cat(unsigned fd){ $/;"	f
channel	capacitivepadsdriver.c	/^	int channel;$/;"	m	struct:electrodeHW	file:
close_fd	io.c	/^int close_fd(int fd){$/;"	f
console	lcdcConsole.h	/^struct console {$/;"	s
console	lcdcdriver.c	/^static struct console console; $/;"	v	typeref:struct:console	file:
counterRegister	capacitivepadsdriver.c	/^	uint16_t *counterRegister;$/;"	m	struct:electrodeHW	file:
create_fd	io.c	/^int create_fd(int major_num, int minor_num){ $/;"	f
data	mymalloc.h	/^    char * data[0]; $/;"	m	struct:_mymalloc_t
defragment_memory	mymalloc.c	/^void defragment_memory(unsigned iterations){ $/;"	f
delay	delay.c	/^void delay(unsigned long int limit) {$/;"	f
device	io.c	/^static struct device {$/;"	s	file:
devices	io.c	/^} devices[MAX_DEVICES] = {$/;"	v	typeref:struct:device	file:
electrodeHW	capacitivepadsdriver.c	/^struct electrodeHW {$/;"	s	file:
electrodeHW	capacitivepadsdriver.c	/^} electrodeHW[ELECTRODE_COUNT] =$/;"	v	typeref:struct:electrodeHW
electrode_in	capacitivepadsdriver.c	/^int electrode_in(int electrodeNumber) {$/;"	f
false	common.h	/^typedef enum { false, true } boolean; $/;"	e	enum:__anon1
fdtable	io.c	/^static fdtable_t fdtable[MAX_FILE_DESCRIPTORS]; $/;"	v	file:
fdtable_t	io.h	/^} fdtable_t;$/;"	t	typeref:struct:_fdtable_t
file_properties	io.c	/^static filepath_to_device_t file_properties[PREDEFINED_DEVICE_MAP] = { $/;"	v	file:
filepath	io.h	/^    const char * filepath; $/;"	m	struct:_filepath_to_device_t
filepath_to_device_t	io.h	/^} filepath_to_device_t;$/;"	t	typeref:struct:_filepath_to_device_t
frame	svc.c	/^struct frame {$/;"	s	file:
framebuffer	lcdcConsole.h	/^  uint32_t *framebuffer;	\/\/ Starting address of frame buffer in memory$/;"	m	struct:console
free	mymalloc.h	/^    unsigned free; $/;"	m	struct:_mymalloc_t
get_device_path	io.c	/^const char * get_device_path(unsigned major_num, unsigned minor_num){ $/;"	f
get_fd	io.c	/^int get_fd(int major_num, int minor_num){ $/;"	f
get_major_num	io.c	/^int get_major_num(const char * filepath){ $/;"	f
get_minor_num	io.c	/^int get_minor_num(const char * filepath){ $/;"	f
getcurrentprocessid	mymalloc.c	/^int getcurrentprocessid(){ $/;"	f
height	lcdcConsole.h	/^  uint16_t width, height;	\/\/ Screen width & height (in pixels)$/;"	m	struct:console
hole	mymalloc.c	/^int hole(char * trav){ $/;"	f
init	capacitivepads.h	/^    void (*init)(void); $/;"	m	struct:_capacitivepad_t
init	io.c	/^    int (*init)(void * minor_num); $/;"	m	struct:device	file:
init	lcdc.h	/^    void (*init)(void); $/;"	m	struct:_lcdcd_t
init	led.h	/^    void (*init)(void); $/;"	m	struct:_led_t
init	potentiometer.h	/^    void (*init)(void); $/;"	m	struct:_potentiometer_t
init	pushbutton.h	/^    void (*init)(void); $/;"	m	struct:_pushbutton_t
init	thermistor.h	/^    void (*init)(void); $/;"	m	struct:_thermistor_t
init	uart.h	/^    void (*init)(void); $/;"	m	struct:_uart_t
init_devices_fdtable	io.c	/^void init_devices_fdtable(){ $/;"	f
init_fdtable	io.c	/^void init_fdtable(){ $/;"	f
initmemory	mymalloc.c	/^unsigned initmemory(){ $/;"	f
initmemory_ram	mymalloc.c	/^unsigned initmemory_ram(){ $/;"	f
initmemory_sdram	mymalloc.c	/^unsigned initmemory_sdram(){ $/;"	f
input_present	uart.h	/^    int (*input_present)(void); $/;"	m	struct:_uart_t
is_fd_inuse	io.c	/^int is_fd_inuse(int fd){ $/;"	f
is_memory_initialized	mymalloc.c	/^unsigned is_memory_initialized(){ $/;"	f
isdevice	io.c	/^int isdevice(int major_num) { $/;"	f
isfile	io.c	/^int isfile(int major_num){ $/;"	f
lcdcConsoleClear	lcdcConsole.c	/^void lcdcConsoleClear(struct console *console) {$/;"	f
lcdcConsoleInit	lcdcConsole.c	/^void lcdcConsoleInit(struct console *console) {$/;"	f
lcdcConsolePutc	lcdcConsole.c	/^void lcdcConsolePutc(struct console *console, int ch) {$/;"	f
lcdcConsoleScroll	lcdcConsole.c	/^void lcdcConsoleScroll(struct console *console) {$/;"	f
lcdcInit	lcdcdriver.c	/^void lcdcInit(void) {$/;"	f
lcdcInitPins	lcdcdriver.c	/^void lcdcInitPins() {$/;"	f
lcdcInitScreen	lcdcdriver.c	/^void lcdcInitScreen() {$/;"	f
lcdc_driver_init	lcdcdriver.c	/^void lcdc_driver_init(void) {$/;"	f
lcdc_driver_write	lcdcdriver.c	/^int lcdc_driver_write(int ch){ $/;"	f
lcdc_init	lcdc.c	/^int lcdc_init(void * minor_num){ $/;"	f
lcdc_minor_device	io.h	/^typedef enum {LCDC1} lcdc_minor_device; $/;"	t	typeref:enum:__anon35
lcdc_t	lcdc.h	/^} lcdc_t;$/;"	t	typeref:struct:_lcdcd_t
lcdc_write	lcdc.c	/^int lcdc_write(int ch, void *minor_num){ $/;"	f
lcdcs	lcdc.c	/^lcdc_t lcdcs[NUM_OF_LCDCS] = { $/;"	v
ledBlueConfig	leddriver.c	/^void ledBlueConfig(void) {$/;"	f
ledBlueOff	leddriver.c	/^void ledBlueOff(void) {$/;"	f
ledBlueOn	leddriver.c	/^void ledBlueOn(void) {$/;"	f
ledBlueWrite	leddriver.c	/^void ledBlueWrite(int ch){$/;"	f
ledGreenConfig	leddriver.c	/^void ledGreenConfig(void) {$/;"	f
ledGreenOff	leddriver.c	/^void ledGreenOff(void) {$/;"	f
ledGreenOn	leddriver.c	/^void ledGreenOn(void) {$/;"	f
ledGreenWrite	leddriver.c	/^void ledGreenWrite(int ch){$/;"	f
ledInit	leddriver.c	/^void ledInit(){ $/;"	f
ledInitAll	leddriver.c	/^void ledInitAll(void) {$/;"	f
ledOrangeConfig	leddriver.c	/^void ledOrangeConfig(void) {$/;"	f
ledOrangeOff	leddriver.c	/^void ledOrangeOff(void) {$/;"	f
ledOrangeOn	leddriver.c	/^void ledOrangeOn(void) {$/;"	f
ledOrangeWrite	leddriver.c	/^void ledOrangeWrite(int ch){$/;"	f
ledYellowConfig	leddriver.c	/^void ledYellowConfig(void) {$/;"	f
ledYellowOff	leddriver.c	/^void ledYellowOff(void) {$/;"	f
ledYellowOn	leddriver.c	/^void ledYellowOn(void) {$/;"	f
ledYellowWrite	leddriver.c	/^void ledYellowWrite(int ch){$/;"	f
led_init	led.c	/^int led_init(void * minor_num){ $/;"	f
led_minor_device	io.h	/^typedef enum { LED_ORANGE, LED_YELLOW, LED_GREEN, LED_BLUE} led_minor_device;  $/;"	t	typeref:enum:__anon39
led_t	led.h	/^} led_t;$/;"	t	typeref:struct:_led_t
led_write	led.c	/^int led_write(int ch, void *minor_num){ $/;"	f
leds	led.c	/^led_t leds[NUM_OF_LEDS] = { $/;"	v
lr	svc.c	/^		int lr;$/;"	m	union:frame::__anon47	file:
main	main.c	/^int main(void) {$/;"	f
major_device	io.h	/^} major_device; $/;"	t	typeref:enum:__anon37
major_num	io.h	/^    int major_num; $/;"	m	struct:_fdtable_t
major_num	io.h	/^    unsigned major_num; $/;"	m	struct:_filepath_to_device_t
majorno	io.h	/^    int majorno; $/;"	m	struct:_stream_t
mask	capacitivepadsdriver.c	/^	uint32_t mask;$/;"	m	struct:electrodeHW	file:
mcgInit	mcg.c	/^void mcgInit(void) {$/;"	f
memory_end	mymalloc.c	/^static char * memory_end; $/;"	v	file:
memorymap	mymalloc.c	/^void memorymap(){ $/;"	f
memoryset	stringutils.c	/^void memoryset(void *memory, char ch, unsigned len){ $/;"	f
merge	mymalloc.c	/^void merge(char * trav){ $/;"	f
minor_num	io.h	/^    int minor_num; $/;"	m	struct:_fdtable_t
minor_num	io.h	/^    unsigned minor_num; $/;"	m	struct:_filepath_to_device_t
minorno	io.h	/^    int minorno; $/;"	m	struct:_stream_t
myassert	common.c	/^void myassert(unsigned status, $/;"	f
myclose	io.c	/^int myclose(int fd){ $/;"	f
myfree	mymalloc.c	/^void myfree(void *addr){ $/;"	f
mymalloc	mymalloc.c	/^void * mymalloc(unsigned size){ $/;"	f
mymalloc_t	mymalloc.h	/^} mymalloc_t;$/;"	t	typeref:struct:_mymalloc_t
myopen	io.c	/^int myopen(const char * filepath, unsigned mode){ $/;"	f
myread	io.c	/^int myread(int fd){ $/;"	f
mystdin	common.c	/^unsigned mystdin; $/;"	v
mystdout	common.c	/^unsigned mystdout; $/;"	v
mywrite	io.c	/^int mywrite(int fd, int ch){ $/;"	f
next	mymalloc.c	/^char * next(char *trav){ $/;"	f
pid	mymalloc.h	/^    unsigned pid;$/;"	m	struct:_mymalloc_t
potentiometer_driver_init	potentiometerdriver.c	/^void potentiometer_driver_init(void) {$/;"	f
potentiometer_driver_read	potentiometerdriver.c	/^unsigned int potentiometer_driver_read() {$/;"	f
potentiometer_init	potentiometer.c	/^int potentiometer_init(void * minor_num){ $/;"	f
potentiometer_minor_device	io.h	/^typedef enum { POTENTIOMETER1} potentiometer_minor_device;$/;"	t	typeref:enum:__anon41
potentiometer_read	potentiometer.c	/^int potentiometer_read(void *minor_num){ $/;"	f
potentiometer_t	potentiometer.h	/^} potentiometer_t;$/;"	t	typeref:struct:_potentiometer_t
potentiometers	potentiometer.c	/^potentiometer_t potentiometers[NUM_OF_POTENTIOMETERS] = { $/;"	v
print_fdtable	io.c	/^void print_fdtable(){ $/;"	f
printnode	mymalloc.c	/^void printnode(char *trav){ $/;"	f
profont	profont.c	/^uint8_t profont[PROFONT_CHARS_IN_FONT][PROFONT_FONT_HEIGHT][PROFONT_FONT_WIDTH] = {$/;"	v
pushbuttonInitAll	pushbuttondriver.c	/^void pushbuttonInitAll(void) {$/;"	f
pushbuttonSW1Config	pushbuttondriver.c	/^void pushbuttonSW1Config(void) {$/;"	f
pushbuttonSW2Config	pushbuttondriver.c	/^void pushbuttonSW2Config(void) {$/;"	f
pushbutton_init	pushbutton.c	/^int pushbutton_init(void * minor_num){$/;"	f
pushbutton_minor_device	io.h	/^typedef enum { PUSHBUTTON_SW1, PUSHBUTTON_SW2 } pushbutton_minor_device;$/;"	t	typeref:enum:__anon40
pushbutton_read	pushbutton.c	/^int pushbutton_read(void * minor_num){$/;"	f
pushbutton_t	pushbutton.h	/^} pushbutton_t;$/;"	t	typeref:struct:_pushbutton_t
pushbuttoninit	pushbuttondriver.c	/^void pushbuttoninit(void){ $/;"	f
pushbuttons	pushbutton.c	/^pushbutton_t pushbuttons[NUM_OF_PUSHBUTTONS] = { $/;"	v
r0	svc.c	/^		int r0;$/;"	m	union:frame::__anon43	file:
r1	svc.c	/^		int r1;$/;"	m	union:frame::__anon44	file:
r12	svc.c	/^	int r12;$/;"	m	struct:frame	file:
r14	svc.c	/^		int r14;$/;"	m	union:frame::__anon47	file:
r2	svc.c	/^		int r2;$/;"	m	union:frame::__anon45	file:
r3	svc.c	/^		int r3;$/;"	m	union:frame::__anon46	file:
read	capacitivepads.h	/^    int  (*read)(int); $/;"	m	struct:_capacitivepad_t
read	io.c	/^    int (*read)(void * minor_num); $/;"	m	struct:device	file:
read	potentiometer.h	/^    unsigned int (*read)(); $/;"	m	struct:_potentiometer_t
read	pushbutton.h	/^    int (*read)(void); $/;"	m	struct:_pushbutton_t
read	thermistor.h	/^    unsigned int (*read)(); $/;"	m	struct:_thermistor_t
read	uart.h	/^    int (*read)(); $/;"	m	struct:_uart_t
reinitalize_memory	mymalloc.c	/^void reinitalize_memory(){ $/;"	f
release	io.c	/^    int (*release)(void * minor_num); $/;"	m	struct:device	file:
returnAddr	svc.c	/^	int returnAddr;$/;"	m	struct:frame	file:
returnVal	svc.c	/^		int returnVal;$/;"	m	union:frame::__anon43	file:
sdramInit	sdram.c	/^void sdramInit(void) {$/;"	f
size	mymalloc.h	/^    unsigned size; $/;"	m	struct:_mymalloc_t
sizeofnode	mymalloc.c	/^unsigned sizeofnode(void * node){ $/;"	f
start	mymalloc.c	/^static char * start; $/;"	v	file:
stralloc	stringutils.c	/^char * stralloc(unsigned len){ $/;"	f
strcompare	stringutils.c	/^unsigned strcompare(const char * s1, const char * s2){ $/;"	f
strcopy	stringutils.c	/^char * strcopy(char * dst, const char * src){ $/;"	f
strduplicate	stringutils.c	/^char * strduplicate(const char * src){ $/;"	f
stream_t	io.h	/^} stream_t;$/;"	t	typeref:struct:_stream_t
strlength	stringutils.c	/^unsigned strlength(const char * string){ $/;"	f
strlrtrim	stringutils.c	/^char * strlrtrim(const char * src){ $/;"	f
strltrim	stringutils.c	/^char * strltrim(const char * src){ $/;"	f
strrtrim	stringutils.c	/^char * strrtrim(const char * src){ $/;"	f
svcHandler	svc.c	/^__asm void svcHandler(void) {$/;"	f
svcHandler	svc.c	/^void __attribute__((naked)) svcHandler(void) {$/;"	f
svcHandlerInC	svc.c	/^void svcHandlerInC(struct frame *framePtr) {$/;"	f
svcInit_SetSVCPriority	svc.c	/^void svcInit_SetSVCPriority(unsigned char priority) {$/;"	f
sw1In	pushbuttondriver.c	/^int sw1In(void) {$/;"	f
sw2In	pushbuttondriver.c	/^int sw2In(void) {$/;"	f
taken	mymalloc.c	/^void taken(char *node, unsigned size){ $/;"	f
thermistor_driver_init	thermistordriver.c	/^void thermistor_driver_init(void) {$/;"	f
thermistor_driver_read	thermistordriver.c	/^unsigned int thermistor_driver_read() {$/;"	f
thermistor_init	thermistor.c	/^int thermistor_init(void * minor_num){ $/;"	f
thermistor_minor_device	io.h	/^typedef enum { THERMISTOR1} thermistor_minor_device; $/;"	t	typeref:enum:__anon42
thermistor_read	thermistor.c	/^int thermistor_read(void *minor_num){ $/;"	f
thermistor_t	thermistor.h	/^} thermistor_t;$/;"	t	typeref:struct:_thermistor_t
thermistors	thermistor.c	/^thermistor_t thermistors[NUM_OF_THERMISTORS] = { $/;"	v
threshold	capacitivepadsdriver.c	/^	uint16_t threshold;$/;"	m	struct:electrodeHW	file:
true	common.h	/^typedef enum { false, true } boolean; $/;"	e	enum:__anon1
uartGetchar	uartdriver.c	/^char uartGetchar(UART_MemMapPtr uartChannel) {$/;"	f
uartGetcharPresent	uartdriver.c	/^int uartGetcharPresent(UART_MemMapPtr uartChannel) {$/;"	f
uartInit	uartdriver.c	/^void uartInit(UART_MemMapPtr uartChannel, int clockInKHz, int baud) {$/;"	f
uartPutchar	uartdriver.c	/^void uartPutchar(UART_MemMapPtr uartChannel, char ch) {$/;"	f
uartPuts	uartdriver.c	/^void uartPuts(UART_MemMapPtr uartChannel, char *p) {$/;"	f
uart_driver_init	uartdriver.c	/^void uart_driver_init(void){$/;"	f
uart_driver_input_present	uartdriver.c	/^int uart_driver_input_present(){ $/;"	f
uart_driver_read	uartdriver.c	/^int uart_driver_read(){$/;"	f
uart_driver_write	uartdriver.c	/^int uart_driver_write(int ch){$/;"	f
uart_driver_writestring	uartdriver.c	/^void uart_driver_writestring(char *string){ $/;"	f
uart_init	uart.c	/^int uart_init(void * minor_num){ $/;"	f
uart_input_present	uart.c	/^int uart_input_present(void *minor_num){ $/;"	f
uart_minor_device	io.h	/^typedef enum {UART1} uart_minor_device; $/;"	t	typeref:enum:__anon36
uart_read	uart.c	/^int uart_read(void *minor_num){ $/;"	f
uart_t	uart.h	/^} uart_t;$/;"	t	typeref:struct:_uart_t
uart_write	uart.c	/^int uart_write(int ch, void *minor_num){ $/;"	f
uarts	uart.c	/^uart_t uarts[NUM_OF_UARTS] = { $/;"	v
uintptr_t	capacitivepads.c	/^typedef unsigned long uintptr_t; $/;"	t	file:
uintptr_t	io.c	/^typedef unsigned long uintptr_t; $/;"	t	file:
uintptr_t	led.c	/^typedef unsigned long uintptr_t; $/;"	t	file:
uintptr_t	potentiometer.c	/^typedef unsigned long uintptr_t; $/;"	t	file:
uintptr_t	pushbutton.c	/^typedef unsigned long uintptr_t; $/;"	t	file:
uintptr_t	thermistor.c	/^typedef unsigned long uintptr_t; $/;"	t	file:
uintptr_t	uart.c	/^typedef unsigned long uintptr_t;$/;"	t	file:
verify	capacitivepadsdriver.c	/^int verify(void) {$/;"	f
verify_io	io.c	/^void verify_io(){$/;"	f
verify_led	main.c	/^int verify_led(void) {$/;"	f
verify_memory_allocation	mymalloc.c	/^void verify_memory_allocation() {$/;"	f
verify_pushbutton	main.c	/^int verify_pushbutton(void) {$/;"	f
verify_uart_lcdc	main.c	/^void verify_uart_lcdc(){ $/;"	f
width	lcdcConsole.h	/^  uint16_t width, height;	\/\/ Screen width & height (in pixels)$/;"	m	struct:console
write	io.c	/^    int (*write)(int ch, void *minor_num); $/;"	m	struct:device	file:
write	lcdc.h	/^    int (*write)(int ch); $/;"	m	struct:_lcdcd_t
write	led.h	/^    void (*write)(int ch); $/;"	m	struct:_led_t
write	uart.h	/^    int (*write)(int ch); $/;"	m	struct:_uart_t
write_string	common.c	/^void write_string(const char *p, unsigned mystdout) {$/;"	f
x	lcdcConsole.h	/^  uint16_t x, y;			\/\/ Current console output position x & y (in pixels)$/;"	m	struct:console
xPSR	svc.c	/^	int xPSR;$/;"	m	struct:frame	file:
y	lcdcConsole.h	/^  uint16_t x, y;			\/\/ Current console output position x & y (in pixels)$/;"	m	struct:console
